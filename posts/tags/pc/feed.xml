<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Michael Stapelbergs Website: posts tagged pc</title>
  <link href="https://michael.stapelberg.ch/posts/tags/pc/feed.xml" rel="self"/>
  <link href="https://michael.stapelberg.ch/posts/tags/pc/"/>


  <id>https://michael.stapelberg.ch/posts/tags/pc/</id>
  <generator>Hugo -- gohugo.io</generator>
  <entry>
    <title type="html"><![CDATA[My 2025 high-end Linux PC üêß]]></title>
    <link href="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/"/>
    <id>https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/</id>
    <published>2025-05-15T15:44:24+02:00</published>
    <content type="html"><![CDATA[<p>Turns out <a href="/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/">my previous attempt at this build had a faulty
CPU!</a> With
the CPU replaced, the machine now is stable and fast! üöÄ In this article, I‚Äôll
go into a lot more detail about the component selection, but in a nutshell, I
picked an Intel 285K CPU for low idle power, chose a 4TB SSD so I don‚Äôt have to
worry about running out of storage quickly, and a capable nvidia graphics card
to <a href="/posts/2017-12-11-dell-up3218k/">drive my Dell UP3218K 8K monitor</a>.</p>















<a href="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4795_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4795_featured_hu5465b399bad9f1b50eba8e81064e2014_2034445_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4795_featured_hu5465b399bad9f1b50eba8e81064e2014_2034445_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4795_featured_hu5465b399bad9f1b50eba8e81064e2014_2034445_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="components">Components</h2>
<p>Which components did I pick for this build? Here‚Äôs the full list:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>140 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/fractal-define-7-compact-black-solid-atx-matx-mini-itx-pc-gehaeuse-13220301">Fractal Define 7 Compact Black Solid</a></td>
</tr>
<tr>
<td>155 CHF</td>
<td>Power Supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm850x-850-w-pc-netzteil-47356173?supplier=8560040">Corsair RM850x</a></td>
</tr>
<tr>
<td>233 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asus-prime-z890-p-lga-1851-intel-z890-atx-mainboard-50252296">ASUS PRIME Z890-P</a></td>
</tr>
<tr>
<td>620 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/intel-core-ultra-9-285k-lga-1851-370-ghz-24-core-prozessor-49734792">Intel Core Ultra 9 285K</a></td>
</tr>
<tr>
<td>120 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-d15-g2-168-mm-cpu-kuehler-46985628">Noctua NH-D15 G2</a></td>
</tr>
<tr>
<td>39 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140-mm-1-x-pc-luefter-657800?supplier=3204073">Noctua NF-A14 PWM (140 mm)</a></td>
</tr>
<tr>
<td>209 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-vengeance-2-x-32gb-6400-mhz-ddr5-ram-dimm-ram-24473300">64 GB DDR5-6400 Corsair Vengeance (2 x 32GB)</a></td>
</tr>
<tr>
<td>280 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/samsung-990-pro-4000-gb-m2-2280-ssd-37073751?supplier=406802">4000 GB Samsung 990 Pro</a></td>
</tr>
<tr>
<td>554 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/msi-geforce-rtx-3060-ti-gaming-x-trio-8gb-grafikkarte-14365529">MSI GeForce RTX 3060 Ti GAMING X TRIO</a></td>
</tr>
</tbody>
</table>
<p>Total: 2350 CHF</p>
<p>‚Ä¶and the next couple of sections go into detail on how I selected these components.</p>
<h3 id="case">Case</h3>
<p>I have been a fan of Fractal cases for a couple of generations. In particular, I
realized that the ‚ÄúCompact‚Äù series offers plenty of space even for large
graphics cards and CPU coolers, so that‚Äôs now my go-to case: the Fractal Define
7 Compact (Black Solid).</p>
<p>My general requirements for a PC case are as follows:</p>
<ol>
<li>No extra effort should be required for the case to be as quiet as possible.</li>
<li>The case should not have any sharp corners (no danger of injury!).</li>
<li>The case should provide just enough space for easy access to your components.</li>
<li>The more support the case has to encourage clean cable routing, the better.</li>
<li>USB3 front panel headers should be included.</li>
</ol>
<p>I really like building components into the case and working with the case. There
are no sharp edges, the mechanisms are a pleasure to use and the
cable-management is well thought-out.</p>
<p>The only thing that wasn‚Äôt top-notch is that Fractal ships the case screws in
sealed plastic packages that you need to cut open. I would have wished for a
re-sealable plastic baggie so that one can keep the unused screws instead of
losing them.</p>
<p>With this build, I have standardized all my PCs into Fractal Define 7 Compact
Black cases!</p>
<h3 id="power-supply">Power Supply</h3>
<p>I wanted to keep my options open regarding upgrading to an nvidia 50xx series
graphics card at a later point. Those models have a TGP (‚ÄúTotal Graphics Power‚Äù)
of 575 watts, so I needed a power supply that delivers enough power for the
whole system even at peak power usage in all dimensions.</p>
<p>I ended up selecting the Corsair RM850x, which <a href="https://www.tomshardware.com/reviews/corsair-rm850x-2021-power-supply-review">reviews favorably (‚Äúleader in
the 850W gold
category‚Äù)</a>
and was available at my electronics store of choice.</p>
<p>This was a good choice: the PSU indeed runs quiet, and I really like the power
cables (e.g. the GPU cable) that they include: they are very flexible, which
makes them easy to cable-manage.</p>
<p>One interesting realization was that it‚Äôs more convenient to not use the PSU‚Äôs
12VHPWR cable, but instead stick to the older 8-pin power connectors for the GPU
in combination with a 12VHPWR-to-8-pin adapter. The reason is that the 12VHPWR
connector‚Äôs locking mechanism is very hard to unlock, so when swapping out the
GPU (as I had to do a number of times while trouble-shooting), unlocking an
8-pin connector is much easier‚Ä¶</p>
<h3 id="ssd-disk">SSD disk</h3>
<p>I have been avoiding PCIe 5 SSDs so far because they consume a lot more power
compared to PCIe 4 SSDs. While bulk streaming data transfer rates are higher on
PCIe 5 SSDs, random transfers are not significantly faster. Most of my compute
workload are random transfers, not large bulk transfers.</p>
<p>The power draw situation with PCIe 5 SSDs seems to be getting better lately,
with the Phison E31T being the first controller that implements power saving. A
disk that uses the E31T controller is the Corsair Force Series MP700
Elite. Unfortunately, said disk was unavailable when I ordered.</p>
<p>Instead, I picked the Samsung 990 Pro with 4 TB. I have had good experiences
with the Samsung Pro series over the years (never had one die or degrade
performance), and my previous 2 TB disk was starting to fill up, so the extra
storage space is appreciated.</p>
<h3 id="onboard-25gbe-network-card">Onboard 2.5GbE Network Card</h3>
<p>One annoying realization is that most mainboard vendors seem to have moved to
2.5 GbE (= 2.5 Gbit/s ethernet) onboard network cards. I would have been
perfectly happy to play it safe and buy another Intel I225 1 GbE network card,
as long as it <em>just works</em> with Linux.</p>
<p>In the 2.5 GbE space, the main players seem to be Realtek and Intel. Most
mainboard vendors opted for Realtek as far as I could see.</p>
<p>Linux includes the <code>r8169</code> driver for Realtek network cards, but whether the
card will work out of the box depends on the exact revision of the network card!
For example:</p>
<ul>
<li>The AsRock Z890 Pro-A has rev 8125B. lshw:
<code>firmware=rtl8125b-2_0.0.2 07/13/20</code></li>
<li>The ASUS PRIME Z890-P has rev 8125<strong>D</strong>. lshw:
<code>firmware=rtl8125d-1_0.0.7 10/15/24</code></li>
</ul>
<p>For revision 8125D, you need a recent-enough Linux version (6.13+) that includes
commit ‚Äú<a href="https://github.com/torvalds/linux/commit/f75d1fbe7809bc5ed134204b920fd9e2fc5db1df">r8169: add support for
RTL8125D</a>‚Äù,
accompanied by a recent-enough linux-firmware package.</p>
<p>Even with the latest firmware, there is some concern around stability and ASPM
support. See for example <a href="https://serverfault.com/a/1169558">this ServerFault
post</a> by someone working on the <code>r8169</code>
driver. But, despite the Intel 1 GbE options being well-supported at this point,
Intel‚Äôs 2.5 GbE options might not fare any better than the Realtek ones: I found
<a href="https://www.reddit.com/r/HomeServer/comments/1cc0yuq/are_intel_25_gbe_nics_i225v_i226v_stable_now/">reports of instability with Intel‚Äôs 2.5 GbE network
cards</a>.</p>
<p>That said, aside from the annoying firmware requirements, the Realtek 2.5 GbE
card seems to work fine for me in practice.</p>
<h3 id="mainboard">Mainboard</h3>
<p>Despite the suboptimal network card choice, I decided to stick to the ASUS PRIME
series of mainboards, as I made good experiences with those in my past few
builds. Here are a couple of thoughts on the ASUS PRIME Z890-P mainboard I went
with:</p>
<ul>
<li>I like the quick-release PCIe mechanism: ASUS understood that people had
trouble unlocking large graphics cards from their PCIe slot, so they added a
lever-like mechanism that is easily reachable. In my couple of usages, this
worked pretty well!</li>
<li>I wrote about <a href="/posts/2022-01-15-high-end-linux-pc/#slow-boot">slow boot times with my 2022 PC
build</a> that were caused by
time-consuming memory training. On this ASUS board, I noticed that the board
blinks the Power LED to signal that memory training is in progress. Very nice!
It hadn‚Äôt occurred to me previously that the various phases of the boot could
be signaled by different Power LED blinking patterns :)
<ul>
<li>The downside of this feature is: While the machine is in suspend-to-RAM, the
Power LED also blinks! This is annoying, so I might just disconnect the
Power LED entirely.</li>
</ul>
</li>
<li>The UEFI firmware includes what they call a Q-Dashboard: An overview of what
is installed/connected in which slot. Quite nice:</li>
</ul>















<a href="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4809.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4809_hubd58b5eea90ff3475e2027d31ae65ea9_1032931_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4809_hubd58b5eea90ff3475e2027d31ae65ea9_1032931_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4809_hubd58b5eea90ff3475e2027d31ae65ea9_1032931_600x0_resize_q75_box.jpg"
  
  width="600"
  height="357"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>One surprising difference between the two mainboards I tested was that the
AsRock Z890 Pro-A does not seem to report the correct DIMM clock in <code>lshw</code>,
whereas the ASUS does:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-diff" data-lang="diff"><span style="display:flex;"><span><span style="color:#a00000">--- lshw-intel-285k-asrock.txt	2025-04-30 20:35:24 +0200
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+++ lshw-intel-285k-asus.txt		2025-04-30 21:39:52 +0200
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>      *-firmware
</span></span><span style="display:flex;"><span>           description: BIOS
</span></span><span style="display:flex;"><span><span style="color:#a00000">-          vendor: American Megatrends International, LLC.
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+          vendor: American Megatrends Inc.
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>           physical id: 0
</span></span><span style="display:flex;"><span><span style="color:#a00000">-          version: 2.25
</span></span></span><span style="display:flex;"><span><span style="color:#a00000">-          date: 03/24/2025
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+          version: 1601
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+          date: 02/07/2025
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>           size: 64KiB
</span></span><span style="display:flex;"><span><span style="color:#a00000">-          capacity: 32MiB
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+          capacity: 16MiB
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>           capabilities: pci upgrade shadowing cdboot bootselect socketedrom edd acpi biosbootspecification uefi
</span></span><span style="display:flex;"><span>[‚Ä¶]
</span></span><span style="display:flex;"><span>      *-memory
</span></span><span style="display:flex;"><span>           description: System Memory
</span></span><span style="display:flex;"><span><span style="color:#a00000">-          physical id: 9
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+          physical id: e
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>           slot: System board or motherboard
</span></span><span style="display:flex;"><span>           size: 64GiB
</span></span><span style="display:flex;"><span>         *-bank:0
</span></span><span style="display:flex;"><span><span style="color:#a00000">-             description: DIMM [empty]
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+             description: [empty]
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>              physical id: 0
</span></span><span style="display:flex;"><span>              slot: Controller0-ChannelA-DIMM0
</span></span><span style="display:flex;"><span>         *-bank:1
</span></span><span style="display:flex;"><span><span style="color:#a00000">-             description: DIMM Synchronous 4800 MHz (0,2 ns)
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+             description: DIMM Synchronous 6400 MHz (0,2 ns)
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>              product: CMK64GX5M2B6400C32
</span></span><span style="display:flex;"><span>              vendor: Corsair
</span></span><span style="display:flex;"><span>              physical id: 1
</span></span><span style="display:flex;"><span><span style="color:#800080;font-weight:bold">@@ -40,13 +42,13 @@
</span></span></span><span style="display:flex;"><span><span style="color:#800080;font-weight:bold"></span>              slot: Controller0-ChannelA-DIMM1
</span></span><span style="display:flex;"><span>              size: 32GiB
</span></span><span style="display:flex;"><span>              width: 64 bits
</span></span><span style="display:flex;"><span><span style="color:#a00000">-             clock: 505MHz (2.0ns)
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+             clock: 2105MHz (0.5ns)
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>         *-bank:2
</span></span><span style="display:flex;"><span><span style="color:#a00000">-             description: DIMM [empty]
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+             description: [empty]
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>              physical id: 2
</span></span><span style="display:flex;"><span>              slot: Controller0-ChannelB-DIMM0
</span></span><span style="display:flex;"><span>         *-bank:3
</span></span><span style="display:flex;"><span><span style="color:#a00000">-             description: DIMM Synchronous 4800 MHz (0,2 ns)
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+             description: DIMM Synchronous 6400 MHz (0,2 ns)
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>              product: CMK64GX5M2B6400C32
</span></span><span style="display:flex;"><span>              vendor: Corsair
</span></span><span style="display:flex;"><span>              physical id: 3
</span></span><span style="display:flex;"><span><span style="color:#800080;font-weight:bold">@@ -54,7 +56,7 @@
</span></span></span><span style="display:flex;"><span><span style="color:#800080;font-weight:bold"></span>              slot: Controller0-ChannelB-DIMM1
</span></span><span style="display:flex;"><span>              size: 32GiB
</span></span><span style="display:flex;"><span>              width: 64 bits
</span></span><span style="display:flex;"><span><span style="color:#a00000">-             clock: 505MHz (2.0ns)
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+             clock: 2105MHz (0.5ns)
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span>[‚Ä¶]
</span></span></code></pre></div><p>I haven‚Äôt checked if there are measurable performance differences (e.g. if the
XMP profile is truly active), but at least you now know to not necessarily trust
what <code>lshw</code> can show you.</p>
<h3 id="cpu-fan">CPU fan</h3>
<p>I am a long-time fan of Noctua‚Äôs products: This company makes silent fans with
great cooling capacity that work reliably! For many years, I have swapped out
all the fans of each of my PCs with Noctua fans, and it was always an
upgrade. Highly recommended.</p>
<p>Hence, it is no question that I picked the latest and greatest Noctua CPU cooler
for this build: the Noctua NH-D15 G2. There are a couple of things to pay
attention to with this cooler:</p>
<ul>
<li>I decided to configure it with one fan instead of two fans: Using only one fan
will be the quietest setup, yet still have plenty of cooling capacity for this
setup.</li>
<li>There are 3 different versions that differ in how their base plate is
shaped. Noctua recommends: ‚ÄúFor LGA1851, we generally recommend the regular
standard version with medium base convexity‚Äù
(<a href="https://noctua.at/en/intel-lga1851-all-you-need-to-know">https://noctua.at/en/intel-lga1851-all-you-need-to-know</a>)</li>
<li>With a height of 168 mm, this cooler fits well into the Fractal Define 7
Compact Black.</li>
</ul>
<h3 id="cpu-and-gpu-idle-power-vs-peak-performance">CPU and GPU: Idle Power vs. Peak Performance</h3>
<h4 id="cpu-choice-intel-over-amd">CPU choice: Intel over AMD</h4>
<p>Probably the point that raises most questions about this build is why I selected
an Intel CPU over an AMD CPU. The primary reason is that Intel CPUs are so much
better at power saving!</p>
<p>Let me explain: Most benchmarks online are for gamers and hence measure a usage
curve that goes ‚Äústart game, run PC at 100% resources for hours‚Äù. Of course,
when you never let the machine idle, you would care about <em>power efficiency</em>:
how much power do you need to use to achieve the desired result?</p>
<p>My use-case is software development, not gaming. My usage curve oscillates
between ‚Äúbarely any usage because Michael is reading text‚Äù to ‚Äúcomplete this
compilation as quickly as possible with all the power available‚Äù. For me, I need
both absolute power consumption at idle, and absolute performance to be
best-of-class.</p>
<p>AMD‚Äôs CPUs offer great performance (the recently released <a href="https://www.phoronix.com/review/amd-ryzen-9-9950x3d-linux">Ryzen 9 9950X3D is
even faster</a> than the
Intel 9 285K), and have great <em>power efficiency</em>, but poor <em>power consumption</em>
at idle: With ‚âà35W of idle power draw, Zen 5 CPUs consume ‚âà3x as much power as
Intel CPUs!</p>
<p>Intel‚Äôs CPUs offer great performance (like AMD), but excellent power consumption
at idle.</p>
<p>Therefore, I can‚Äôt in good conscience buy an AMD CPU, but if you want a fast
gaming-only PC or run an always-loaded HPC cluster with those CPUs, definitely
go ahead :)</p>
<h4 id="graphics-card-nvidia-over-amd">Graphics card: nvidia over AMD</h4>
<p>I don‚Äôt necessarily recommend any particular nvidia graphics card, but I have
had to stick to nvidia cards because they are the only option that work with my
picky <a href="/posts/2017-12-11-dell-up3218k/">Dell UP3218K monitor</a>.</p>
<p>From time to time, I try out different graphics cards. Recently, I got myself an
AMD Radeon RX 9070 because I read that it works well with open source drivers.</p>
<p>While the Radeon RX 9070 works with my monitor (great!), it seems to consume 45W
in idle, which is much higher than my nvidia cards, which idle at ‚âà 20W. This is
unacceptable to me: Aside from high power costs and wasting precious resources,
the high power draw also means that my room will be hotter in summer and the
fans need to spin faster and therefore louder.</p>
<p>People asked me on Social Media if this could be a measurement error (like, the
card reporting inaccurate values), so I double-checked with a <a href="https://mystrom.ch/de/wifi-switch/">myStrom WiFi
Switch</a> and confirmed that with the Radeon
card, the PC indeed draws 20-30W more from the wall socket.</p>
<h4 id="why-low-idle-power-is-so-important">Why Low Idle Power is so important</h4>
<p>In the comments for my <a href="/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/">my previous blog post about the first build of this
machine not running
stable</a>,
people were asking why it is worth it to optimize a few watts of power
usage. People calculate what higher power usage might cost, put it in relation
to the total cost of the components, and conclude that saving ¬±10% of the price
can‚Äôt possibly be worth the effort.</p>
<p>Let me try to illustrate the importance of low idle power with this anecdote:
For one year, I was suffering from an nvidia driver bug that meant the GPU would
not clock down to the most efficient power-saving mode (because of the high
resolution of my monitor). The 10-20W of difference should have been
insignificant. Yet, when the bug was fixed, I noticed how my PC got quieter
(fans don‚Äôt need to spin up) and my room noticeably cooled down, which was great
as it was peak temperatures in summer.</p>
<p>To me, having a whisper-quiet computing environment that does not heat up my
room is a great, actual, real-life, measurable benefit. Not wasting resources
and saving a tiny amount of money is a nice cherry on top.</p>
<p>Obviously all the factors are very dependent on your specific situation: Your
house‚Äôs thermal behavior might differ from mine, your tolerance for noise
(and/or baseline noise levels) might be different, you might put more/less
weight on resource usage, etc.</p>
<h2 id="installation">Installation</h2>
<h3 id="uefi-setup">UEFI setup</h3>
<p>On the internet, I read that there was some issue related to the Power Limits
that mainboards come with by default. Therefore, I did a <a href="https://www.asus.com/motherboards-components/motherboards/prime/prime-z890-p/helpdesk_bios?model2Name=PRIME-Z890-P">UEFI firmware
update</a>
immediately after getting the mainboard. I upgraded to version 1404 (2025/01/10)
using the provided ZIP file (<code>PRIME-Z890-P-ASUS-1404.zip</code>) on an MS-DOS
FAT-formatted USB stick with the EZ Flash tool in the UEFI firmware
interface. Tip: do not extract the ZIP file, otherwise the EZ Flash tool cannot
update the Intel ME firmware. Just put the ZIP file onto the USB disk as-is.</p>
<p>I verified that with this UEFI version, the <code>Power Limit 1 (PL1)</code> is 250W, and
<code>ICCMAX=347A</code>, which are exactly the values that Intel recommends. Great!</p>
<p>I also enabled XMP and verified that memtest86 reported no errors.</p>
<h3 id="software-setup-early-adopter-pains">Software setup: early adopter pains</h3>
<p>To copy over the data from the old disk to the new disk, I wanted to boot a live
linux distribution (specifically, <a href="https://grml.org/">grml.org</a>) and follow my
usual procedure: boot with the old disk and the new (empty) disk, then use <code>dd</code>
to copy the data. It‚Äôs nice and simple, hard to screw up.</p>
<p>Unfortunately, while grml 2024.12 technically does boot up, there are two big
problems:</p>
<ol>
<li>
<p>There is no network connectivity because the kernel and linux-firmware
versions are too old.</p>
<ul>
<li>Kernel commit <a href="https://github.com/torvalds/linux/commit/f75d1fbe7809bc5ed134204b920fd9e2fc5db1df">r8169: add support for
RTL8125D</a>
is not included.</li>
</ul>
</li>
<li>
<p>I could not get Xorg to work at all. Not with the Intel integrated GPU, nor
with the nvidia dedicated GPU. Not with <code>nomodeset</code> or any of the other
options in the grml menu. This wasn‚Äôt merely a convenience problem: I needed
to use <code>gparted</code> (the graphical version) for its partition moving/resizing
support.</p>
</li>
</ol>
<p>Ultimately, it was easier to upgrade my old PC to Linux 6.13 and linux-firmware
20250109, then put in the new disk and copy over the installation.</p>
<h3 id="trim-your-ssds">TRIM your SSDs</h3>
<p>SSD disks can degrade over time, especially when using full-disk encryption,
because then the SSD firmware cannot know anymore which parts of the disk are
used and which parts are free.</p>
<p>I think I saw this effect in action back in 2022, <a href="/posts/2022-01-15-high-end-linux-pc/#copying-the-data">when I copied my data from a
Force MP600 to a WD Black
SN850</a>, which
unexpectedly took many hours!</p>
<p>To make sure my disk has a long and healthy life, I double-checked that both
<a href="https://wiki.archlinux.org/title/Solid_state_drive">periodic and continuous TRIM are
enabled</a> on my Arch Linux
system: The <a href="https://manpages.debian.org/fstab.5"><code>fstab(5)</code></a>
 file contains the <code>discard</code>
option (and <a href="https://manpages.debian.org/mount.8"><code>mount(8)</code></a>
 lists the <code>discard</code> option),
and <code>fstrim.service</code> ran within the last week:</p>
<pre tabindex="0"><code>systemd[1]: Starting Discard unused blocks on filesystems from /etc/fstab...
fstrim[779617]: /boot: 10.1 GiB (10799427584 bytes) trimmed on /dev/nvme0n1p1
fstrim[779617]: /: 1.8 TiB (2018906263552 bytes) trimmed on /dev/mapper/cryptroot
systemd[1]: fstrim.service: Deactivated successfully.
</code></pre><p>Speaking of copying data: the transfer from my WD Black SN850 to my Samsung 990
PRO ran at 856 MB/s and took about 40 minutes in total.</p>
<h2 id="performance">Performance</h2>
<p>Here are the total times for a couple of typical workloads I run:</p>
<table>
<thead>
<tr>
<th>Workload</th>
<th><a href="/posts/2022-01-15-high-end-linux-pc/">12900K (2022)</a></th>
<th>285K (2025)</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://go.dev/dl/">build Go 1.24.3 (<code>cd src; ./make.bash</code>)</a></td>
<td>‚âà35s</td>
<td>‚âà26s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/rsync/tree/0c5ac23ecf8b337dd5672c2ae9f945defa5d0b7f">gokrazy/rsync tests (<code>make test</code>)</a></td>
<td>‚âà0.5s</td>
<td>‚âà0.4s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/gokrazy/">gokrazy UEFI test (<code>go test ./integration/...</code>)</a></td>
<td>‚âà30s</td>
<td>‚âà10s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/kernel/tree/699ad7a064b8702dbe91b801ea21c2da2f0e9737">gokrazy Linux compile (<code>gokr-rebuild-kernel -cross=arm64</code>)</a></td>
<td>3m 13s</td>
<td>2m 7s</td>
</tr>
</tbody>
</table>
<p>The performance boost is great! Building Linux kernels a whole minute faster is
really nice.</p>
<h2 id="stability-issues">Stability issues</h2>
<p>In March, I published <a href="/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/">an article about how the first build of this machine was
not stable</a>,
in which you can read in detail about the various crashes I ran into.</p>
<p>Now, in early May, I know for sure that the CPU was defective, after a lengthy
trouble-shooting in which I swapped out <strong>all</strong> the other parts of this PC, sent
back the CPU and got a new one.</p>
<p>The CPU was the most annoying component to diagnose in this build because it‚Äôs
an LGA¬†1851 socket and I don‚Äôt (yet) have any other machines which uses
that same socket. AMD‚Äôs approach of sticking to each socket for a longer time
would have been better in this situation.</p>
<h3 id="stress-testing">Stress testing</h3>
<p>When I published my earlier blog post about the PC being unstable, I did not
really know how to reliably trigger the issue. Some compute-intensive tasks like
running a Django test suite seemed to trigger the issue. I <em>suspect</em> that the
problem somehow got worse, because when I started stress testing the machine,
suddenly it would crash <strong>every time</strong> when building a Linux kernel.</p>
<p>That got me curious to see if other well-known CPU stress testers like
<a href="https://en.wikipedia.org/wiki/Prime95">Prime95</a> would show problems, and
indeed: within seconds, Prime95 would report errors.</p>
<p>I figured I would use Prime95 as a quick signal: if it reports errors, the
machine is faulty. This typically happens within seconds of starting Prime95.</p>
<p>If Prime95 reported no errors, I would use Linux kernel compilation as a slow
signal: if I can successfully build a kernel, the machine is likely stable
enough.</p>
<p>The specific setup I used is to run <code>./mprime -m</code>, hit N (do not participate in
distributed computation projects), then Enter a few times to confirm the
defaults. Eventually, Prime95 starts calculating, which pushes the CPU to 100%
usage (see the <a href="https://manpages.debian.org/dstat.1"><code>dstat(1)</code></a>
-like output by my
<a href="https://github.com/gokrazy/stat"><code>gokrazy/stat</code></a> implementation) and draws the
expected ‚âà300W of power from the wall:</p>















<a href="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_5271.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_5271_hu9195b7f4a2d211fcbbaf9d7af5929362_1260331_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_5271_hu9195b7f4a2d211fcbbaf9d7af5929362_1260331_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_5271_hu9195b7f4a2d211fcbbaf9d7af5929362_1260331_600x0_resize_q75_box.jpg"
  alt="photo of running Prime95 to stress-test a CPU" title="photo of running Prime95 to stress-test a CPU"
  width="600"
  height="339"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/2025-05-04-power.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/2025-05-04-power_hu7aec9296030e417f94707460ba79baa0_117407_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/2025-05-04-power_hu7aec9296030e417f94707460ba79baa0_117407_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/2025-05-04-power_hu7aec9296030e417f94707460ba79baa0_117407_600x0_resize_q75_box.jpg"
  alt="screenshot of PC power usage" title="screenshot of PC power usage"
  width="600"
  height="216"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>In addition, I also ran <a href="https://en.wikipedia.org/wiki/MemTest86">MemTest86</a> for
a few hours:</p>















<a href="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4821.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4821_hue7fa39d39d038bbbcc4c494c53cf8eac_938366_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4821_hue7fa39d39d038bbbcc4c494c53cf8eac_938366_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_4821_hue7fa39d39d038bbbcc4c494c53cf8eac_938366_600x0_resize_q75_box.jpg"
  alt="photo of running memtest86" title="photo of running memtest86"
  width="600"
  height="306"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>To be clear: I also successfully ran MemTest86 on the previous, unstable build,
so only running MemTest86 is not good enough if you are dealing with a faulty
CPU.</p>
<h3 id="rma-timeline">RMA timeline</h3>
<ul>
<li>Jan 15th: I receive the components for my new PC
<ul>
<li>In January and February, the PC crashes occasionally.</li>
</ul>
</li>
<li>Mar 4th: I switch back to my old PC and start writing my blog post</li>
<li>Mar 19th: I publish my blog post about the machine not being stable
<ul>
<li>The online discussion does not result in any interesting tips or leads.</li>
</ul>
</li>
<li>Mar 20th: I order the AsRock Z890 Pro-A mainboard to ensure the mainboard is OK</li>
<li>Mar 24th: the AsRock Z890 Pro-A arrives</li>
<li>Apr 5th (Sat): started an RMA for the CPU
<ul>
<li>They ask me to send the CPU to orderflow, which is the merchant that fulfilled my order.</li>
<li>Typically, I prefer buying directly at digitec, but many PC components seem
to only be available from orderflow on digitec nowadays.</li>
</ul>
</li>
<li>Apr 9th (Wed): package arrives at orderflow (digitec gave me a non-priority return label)</li>
<li>Apr 14th (Mon): I got the following mail from digitec‚Äôs customer support and
had to explain that I have thoroughly diagnosed the CPU as defective (a link
to my blog post was sufficient):</li>
</ul>
<blockquote>
<p>H√§ndler hat dies beim Hersteller angemeldet und dieser hat folgende Fragen:</p>
<p>Um sicherzugehen, dass wir Sie richtig verstehen: Sie haben die CPU auf zwei
verschiedenen Motherboards getestet und das gleiche Problem besteht weiterhin?</p>
<p>K√∂nnten Sie uns mitteilen, welche Marke und welches Modell die beiden
verwendeten Motherboards sind?</p>
<p>Wurde auf beiden Motherboards die neueste BIOS-Version verwendet?</p>
<p>Bestand das Problem von Anfang an oder trat es erst sp√§ter auf?</p>
<p>Wurde der Prozessor √ºbertaktet? (Bitte beachten Sie, dass durch √úbertakten die
Garantie erlischt.)</p>
</blockquote>
<ul>
<li>Apr 25th (Fri): orderflow hands the replacement CPU to Swiss Post</li>
<li>May 1st (Thu): the machine successfully passes stress tests; I start using it</li>
</ul>
<p>In summary, I spent March without a working PC, but that was because I didn‚Äôt
have much time to pursue the project. Then, I spent April without a working PC
because RMA&rsquo;ing an Intel CPU through digitec seems pretty slow. I would have
wished for a little more trust and a replacement CPU right away.</p>
<h2 id="conclusion">Conclusion</h2>
<p>What a rollercoaster and time sink this build was! I have never received a
faulty-on-arrival CPU in my entire life before. How did the CPU I first received
pass Intel‚Äôs quality control? Or did it pass QC, but was damaged in transport? I
will probably never know.</p>
<p>From now on, I know to extensively stress test new PC builds for stability to
detect such issues quicker. Should the CPU be faulty, unfortunately getting it
replaced is a month-long process ‚Äî it‚Äôs very annoying to have such a costly
machine just gather dust for a month.</p>
<p>But, once the faulty component was replaced, this is my best PC build yet:</p>















<a href="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_5278.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_5278_hu19f32a9181df3f875ffdc7d2dc442b2e_1049075_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_5278_hu19f32a9181df3f875ffdc7d2dc442b2e_1049075_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2025-05-15-my-2025-high-end-linux-pc/IMG_5278_hu19f32a9181df3f875ffdc7d2dc442b2e_1049075_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>The case is the perfect size for the components and offers incredibly convenient
access to all components throughout the entire lifecycle of this PC, including
the troubleshooting period, and the later stages of its life when this PC will
be rotated into its ‚Äúlab machine‚Äù period before I sell it second-hand to someone
who will hopefully use the machine for another few years.</p>
<p>The machine is quiet, draws little power (for such a powerful machine) and
really packs a punch!</p>
<p>As usual, I run Linux on this PC and haven‚Äôt noticed any problems in my
day-to-day usage. I use <a href="/posts/2025-05-10-grobi-x11-monitor-autoconfig/#zleep">suspend-to-RAM multiple times a
day</a> without any issues.</p>
<p>I hope some of these details were interesting and useful to you in your own PC
builds!</p>
<p>If you want to learn about which peripherals I use aside from my 8K monitor
(e.g. the Kinesis Advantage keyboard, Logitech MX Ergo trackball, etc.), check
out my post <a href="/posts/2020-05-23-desk-setup/">stapelberg uses this: my 2020 desk
setup</a>. I might publish an updated version at
some point :)</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[In praise of grobi for auto-configuring X11 monitors]]></title>
    <link href="https://michael.stapelberg.ch/posts/2025-05-10-grobi-x11-monitor-autoconfig/"/>
    <id>https://michael.stapelberg.ch/posts/2025-05-10-grobi-x11-monitor-autoconfig/</id>
    <published>2025-05-10T08:24:00+02:00</published>
    <content type="html"><![CDATA[<p>I have recently started using the <a href="https://github.com/fd0/grobi/"><code>grobi</code> program by Alexander
Neumann</a> again and was delighted to discover that
it makes using my fiddly (but wonderful) <a href="/posts/2017-12-11-dell-up3218k/">Dell 32-inch 8K monitor
(UP3218K)</a> monitor much more convenient ‚Äî I get
a signal more quickly than with my previous, sleep-based approach.</p>
<p>Previously, when my PC woke up from suspend-to-RAM, there were two scenarios:</p>
<ol>
<li>The monitor was connected. My <a href="#zleep">sleep program</a> would power on the
monitor (if needed), sleep a little while and then run <a href="https://manpages.debian.org/xrandr.1"><code>xrandr(1)</code></a>
 to (hopefully) configure the monitor correctly.</li>
<li>The monitor was not connected, for example because it was still connected to
my work PC.</li>
</ol>
<p>In scenario ‚ë°, or if the one-shot configuration attempt in scenario ‚ë† fails, I
would need to SSH in from a different computer and run <code>xrandr</code> manually so that
the monitor would show a signal:</p>
<pre tabindex="0"><code>% DISPLAY=:0 xrandr \
  --output DP-4 --mode 3840x4320 --panning 0x0+0+0 \
  --output DP-2 --right-of DP-4 --mode 3840x4320 --panning 0x0+3840+0
</code></pre><h2 id="automatic-monitor-configuration-with-grobi">Automatic monitor configuration with grobi</h2>
<p>I have now completely solved this problem by creating the following
<code>~/.config/grobi.conf</code> file:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#062873;font-weight:bold">rules</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span>- <span style="color:#062873;font-weight:bold">name</span>:<span style="color:#bbb"> </span>UP3218K<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">outputs_connected</span>:<span style="color:#bbb"> </span>[DP-2, DP-4]<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">	</span><span style="color:#60a0b0;font-style:italic"># DP-4 is left, DP-2 is right</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">configure_row</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">        </span>- DP-4@3840x4320<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">        </span>- DP-2@3840x4320<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#60a0b0;font-style:italic"># atomic instructs grobi to only call xrandr once and configure all the</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#60a0b0;font-style:italic"># outputs. This does not always work with all graphic cards, but is</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">	</span><span style="color:#60a0b0;font-style:italic"># needed to successfully configure the UP3218K monitor.</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">atomic</span>:<span style="color:#bbb"> </span><span style="color:#007020;font-weight:bold">true</span><span style="color:#bbb">
</span></span></span></code></pre></div><p>‚Ä¶and installing / enabling <code>grobi</code> (on Arch Linux) using:</p>
<pre tabindex="0"><code>% sudo pacman -S grobi
% systemctl --user enable --now grobi
</code></pre><p>Whenever <code>grobi</code> detects that my monitor is connected (it listens for <a href="https://cgit.freedesktop.org/xorg/proto/randrproto/tree/randrproto.txt">X11
RandR</a>
output change events), it will run <a href="https://manpages.debian.org/xrandr.1"><code>xrandr(1)</code></a>
 to
configure the monitor resolution and positioning.</p>
<p>To check what <code>grobi</code> is seeing/doing, you can use:</p>
<pre tabindex="0"><code>% systemctl --user status grobi
% journalctl --user -u grob
</code></pre><p>For example, on my system, I see:</p>
<pre tabindex="0"><code>grobi: 18:31:48.823765 outputs: [HDMI-0 (primary) DP-0 DP-1 DP-2 (connected) 3840x2160+ [DEL-16711-808727372-DELL UP3218K-D2HP805I043L] DP-3 DP-4 (connected) 3840x21&gt;
grobi: 18:31:48.823783 new rule found: UP3218K
grobi: 18:31:48.823785 enable outputs: [DP-4@3840x4320 DP-2@3840x4320]
grobi: 18:31:48.823789 using one atomic call to xrandr
grobi: 18:31:48.823806 running command /usr/bin/xrandr xrandr --output DP-4 --mode 3840x4320 --output DP-2 --mode 3840x4320 --right-of DP-4
grobi: 18:31:49.285944 new RANDR change event received
</code></pre><p>Notably, the instructions for getting out of a bad state (no signal) are now to
power off the monitor and power it back on again. This will result in RandR
output change events, which will trigger <code>grobi</code>, which will run <code>xrandr</code>, which
configures the monitor. Nice!</p>
<h2 id="why-not-autorandr">Why not autorandr?</h2>
<p>No particular reason. I knew <code>grobi</code>.</p>
<p>If nothing else, <code>grobi</code> is written in Go, so it‚Äôs likely to keep working
smoothly over the years.</p>
<h2 id="does-grobi-work-on-wayland">Does grobi work on Wayland?</h2>
<p>Probably not. There is no mention of Wayland over on the <a href="https://github.com/fd0/grobi/">grobi
repository</a>.</p>
<h2 id="zleep">Bonus: my Suspend-to-RAM setup</h2>
<p>As a bonus, this section describes the other half of my monitor-related
automation.</p>
<p>When I suspend my PC to RAM, I either want to wake it up manually later, for
example by pressing a key on the keyboard or by sending a Wake-on-LAN packet, or
I want it to wake up automatically each morning at 6:50 ‚Äî that way, daily cron
jobs have some time to run before I start using the computer.</p>
<p>To accomplish this, I use <code>zleep</code>, a wrapper program around <a href="https://manpages.debian.org/rtcwake.8"><code>rtcwake(8)</code></a>
 and <code>systemctl suspend</code> that integrates with the
myStrom switch smart plug to turn off power to the monitor entirely. This is
worthwhile because the monitor draws 30W even in standby!</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">package</span> main
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">import</span> (
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;context&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;flag&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;fmt&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;log&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;net/http&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;net/url&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;os&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;os/exec&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;time&#34;</span>
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">var</span> (
</span></span><span style="display:flex;"><span>	resume = flag.<span style="color:#06287e">Bool</span>(<span style="color:#4070a0">&#34;resume&#34;</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">false</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#4070a0">&#34;run resume behavior only (turn on monitor via smart plug)&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	noMonitor = flag.<span style="color:#06287e">Bool</span>(<span style="color:#4070a0">&#34;no_monitor&#34;</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">false</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#4070a0">&#34;disable turning off/on monitor&#34;</span>)
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">monitorPower</span>(ctx context.Context, method, cmnd <span style="color:#902000">string</span>) <span style="color:#902000">error</span> {
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> <span style="color:#666">*</span>noMonitor {
</span></span><span style="display:flex;"><span>		log.<span style="color:#06287e">Printf</span>(<span style="color:#4070a0">&#34;[monitor power] skipping because -no_monitor flag is set&#34;</span>)
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020;font-weight:bold">nil</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	log.<span style="color:#06287e">Printf</span>(<span style="color:#4070a0">&#34;[monitor power] command: %v&#34;</span>, cmnd)
</span></span><span style="display:flex;"><span>	u, err <span style="color:#666">:=</span> url.<span style="color:#06287e">Parse</span>(<span style="color:#4070a0">&#34;http://myStrom-Switch-A46FD0/&#34;</span> <span style="color:#666">+</span> cmnd)
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">return</span> err
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">for</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">:=</span> ctx.<span style="color:#06287e">Err</span>(); err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>			<span style="color:#007020;font-weight:bold">return</span> err
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		req, err <span style="color:#666">:=</span> http.<span style="color:#06287e">NewRequest</span>(method, u.<span style="color:#06287e">String</span>(), <span style="color:#007020;font-weight:bold">nil</span>)
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>			<span style="color:#007020;font-weight:bold">return</span> err
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		ctx, canc <span style="color:#666">:=</span> context.<span style="color:#06287e">WithTimeout</span>(ctx, <span style="color:#40a070">5</span><span style="color:#666">*</span>time.Second)
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">defer</span> <span style="color:#06287e">canc</span>()
</span></span><span style="display:flex;"><span>		req = req.<span style="color:#06287e">WithContext</span>(ctx)
</span></span><span style="display:flex;"><span>		resp, err <span style="color:#666">:=</span> http.DefaultClient.<span style="color:#06287e">Do</span>(req)
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>			log.<span style="color:#06287e">Print</span>(err)
</span></span><span style="display:flex;"><span>			time.<span style="color:#06287e">Sleep</span>(<span style="color:#40a070">1</span> <span style="color:#666">*</span> time.Second)
</span></span><span style="display:flex;"><span>			<span style="color:#007020;font-weight:bold">continue</span>
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> resp.StatusCode <span style="color:#666">!=</span> http.StatusOK {
</span></span><span style="display:flex;"><span>			log.<span style="color:#06287e">Printf</span>(<span style="color:#4070a0">&#34;unexpected HTTP status code: got %v, want %v&#34;</span>, resp.Status, http.StatusOK)
</span></span><span style="display:flex;"><span>			time.<span style="color:#06287e">Sleep</span>(<span style="color:#40a070">1</span> <span style="color:#666">*</span> time.Second)
</span></span><span style="display:flex;"><span>			<span style="color:#007020;font-weight:bold">continue</span>
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		log.<span style="color:#06287e">Printf</span>(<span style="color:#4070a0">&#34;[monitor power] request succeeded&#34;</span>)
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020;font-weight:bold">nil</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">nextWakeup</span>(now time.Time) time.Time {
</span></span><span style="display:flex;"><span>	midnight <span style="color:#666">:=</span> time.<span style="color:#06287e">Date</span>(now.<span style="color:#06287e">Year</span>(), now.<span style="color:#06287e">Month</span>(), now.<span style="color:#06287e">Day</span>(), <span style="color:#40a070">0</span>, <span style="color:#40a070">0</span>, <span style="color:#40a070">0</span>, <span style="color:#40a070">0</span>, time.Local)
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> now.<span style="color:#06287e">Hour</span>() &lt; <span style="color:#40a070">6</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#60a0b0;font-style:italic">// wake up today
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>		<span style="color:#007020;font-weight:bold">return</span> midnight.<span style="color:#06287e">Add</span>(<span style="color:#40a070">6</span><span style="color:#666">*</span>time.Hour <span style="color:#666">+</span> <span style="color:#40a070">50</span><span style="color:#666">*</span>time.Minute)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#60a0b0;font-style:italic">// wake up tomorrow
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	<span style="color:#007020;font-weight:bold">return</span> midnight.<span style="color:#06287e">Add</span>(<span style="color:#40a070">24</span> <span style="color:#666">*</span> time.Hour).<span style="color:#06287e">Add</span>(<span style="color:#40a070">6</span><span style="color:#666">*</span>time.Hour <span style="color:#666">+</span> <span style="color:#40a070">50</span><span style="color:#666">*</span>time.Minute)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">runResume</span>() <span style="color:#902000">error</span> {
</span></span><span style="display:flex;"><span>	<span style="color:#60a0b0;font-style:italic">// Retry for up to one minute to give the network some time to come up
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	ctx, canc <span style="color:#666">:=</span> context.<span style="color:#06287e">WithTimeout</span>(context.<span style="color:#06287e">Background</span>(), <span style="color:#40a070">1</span><span style="color:#666">*</span>time.Minute)
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">defer</span> <span style="color:#06287e">canc</span>()
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">:=</span> <span style="color:#06287e">monitorPower</span>(ctx, <span style="color:#4070a0">&#34;GET&#34;</span>, <span style="color:#4070a0">&#34;relay?state=1&#34;</span>); err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#06287e">Print</span>(err)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020;font-weight:bold">nil</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">zleep</span>() <span style="color:#902000">error</span> {
</span></span><span style="display:flex;"><span>	ctx <span style="color:#666">:=</span> context.<span style="color:#06287e">Background</span>()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	now <span style="color:#666">:=</span> time.<span style="color:#06287e">Now</span>().<span style="color:#06287e">Truncate</span>(<span style="color:#40a070">1</span> <span style="color:#666">*</span> time.Second)
</span></span><span style="display:flex;"><span>	wakeup <span style="color:#666">:=</span> <span style="color:#06287e">nextWakeup</span>(now)
</span></span><span style="display:flex;"><span>	log.<span style="color:#06287e">Printf</span>(<span style="color:#4070a0">&#34;now   : %v&#34;</span>, now)
</span></span><span style="display:flex;"><span>	log.<span style="color:#06287e">Printf</span>(<span style="color:#4070a0">&#34;wakeup: %v&#34;</span>, wakeup)
</span></span><span style="display:flex;"><span>	log.<span style="color:#06287e">Printf</span>(<span style="color:#4070a0">&#34;wakeup: %v (timestamp)&#34;</span>, wakeup.<span style="color:#06287e">Unix</span>())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#60a0b0;font-style:italic">// assumes hwclock is running in UTC (see timedatectl | grep local)
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>
</span></span><span style="display:flex;"><span>	<span style="color:#60a0b0;font-style:italic">// Power the monitor off in 15 seconds.
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	<span style="color:#60a0b0;font-style:italic">// mode=on is intentional: https://api.mystrom.ch/#e532f952-36ea-40fb-a180-a57b835f550e
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	<span style="color:#60a0b0;font-style:italic">// - the switch will be turned on (already on, so this is a no-op)
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	<span style="color:#60a0b0;font-style:italic">// - the switch will wait for 15 seconds
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	<span style="color:#60a0b0;font-style:italic">// - the switch will be turned off
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">:=</span> <span style="color:#06287e">monitorPower</span>(ctx, <span style="color:#4070a0">&#34;POST&#34;</span>, <span style="color:#4070a0">&#34;timer?mode=on&amp;time=15&#34;</span>); err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#06287e">Print</span>(err)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	sleep <span style="color:#666">:=</span> exec.<span style="color:#06287e">Command</span>(<span style="color:#4070a0">&#34;sh&#34;</span>, <span style="color:#4070a0">&#34;-c&#34;</span>, fmt.<span style="color:#06287e">Sprintf</span>(<span style="color:#4070a0">&#34;sudo rtcwake -m no --verbose --utc -t %v &amp;&amp; sudo systemctl suspend&#34;</span>, wakeup.<span style="color:#06287e">Unix</span>()))
</span></span><span style="display:flex;"><span>	sleep.Stdout = os.Stdout
</span></span><span style="display:flex;"><span>	sleep.Stderr = os.Stderr
</span></span><span style="display:flex;"><span>	fmt.<span style="color:#06287e">Printf</span>(<span style="color:#4070a0">&#34;running %v\n&#34;</span>, sleep.Args)
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">:=</span> sleep.<span style="color:#06287e">Run</span>(); err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">return</span> fmt.<span style="color:#06287e">Errorf</span>(<span style="color:#4070a0">&#34;%v: %v&#34;</span>, sleep.Args, err)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020;font-weight:bold">nil</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">main</span>() {
</span></span><span style="display:flex;"><span>	flag.<span style="color:#06287e">Parse</span>()
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> <span style="color:#666">*</span>resume {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">:=</span> <span style="color:#06287e">runResume</span>(); err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>			log.<span style="color:#06287e">Fatal</span>(err)
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>	} <span style="color:#007020;font-weight:bold">else</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">:=</span> <span style="color:#06287e">zsleep</span>(); err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>			log.<span style="color:#06287e">Fatal</span>(err)
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>To turn power to the monitor on after resuming, I placed the following shell
script in <code>/lib/systemd/system-sleep/zleep.sh</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#007020">#!/bin/sh
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">case</span> <span style="color:#4070a0">&#34;</span><span style="color:#bb60d5">$1</span><span style="color:#4070a0">&#34;</span> in
</span></span><span style="display:flex;"><span>	pre<span style="color:#666">)</span>	<span style="color:#007020">exit</span> <span style="color:#40a070">0</span>
</span></span><span style="display:flex;"><span>		;;
</span></span><span style="display:flex;"><span>	post<span style="color:#666">)</span>	/usr/local/bin/zleep -resume
</span></span><span style="display:flex;"><span>		<span style="color:#007020">exit</span> <span style="color:#40a070">0</span>
</span></span><span style="display:flex;"><span>		;;
</span></span><span style="display:flex;"><span> 	*<span style="color:#666">)</span>	<span style="color:#007020">exit</span> <span style="color:#40a070">1</span>
</span></span><span style="display:flex;"><span>		;;
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">esac</span>
</span></span></code></pre></div><p>Once power is on, grobi will detect and configure the monitor.</p>
<p>Here is the program in action:</p>
<pre tabindex="0"><code>2025/05/06 21:58:32 now   : 2025-05-06 21:58:32 +0200 CEST
2025/05/06 21:58:32 wakeup: 2025-05-07 06:50:00 +0200 CEST
2025/05/06 21:58:32 wakeup: 1746593400 (timestamp)
2025/05/06 21:58:32 [monitor power] command: timer?mode=on&amp;time=15
2025/05/06 21:58:32 [monitor power] request succeeded
running [sh -c sudo rtcwake -m no --verbose --utc -t 1746593400 &amp;&amp; sudo systemctl suspend]
Using UTC time.
	delta   = 0
	tzone   = 0
	tzname  = UTC
	systime = 1746561512, (UTC) Tue May  6 19:58:32 2025
	rtctime = 1746561512, (UTC) Tue May  6 19:58:32 2025
alarm 1746593400, sys_time 1746561512, rtc_time 1746561512, seconds 0
rtcwake: wakeup using /dev/rtc0 at Wed May  7 04:50:00 2025
suspend mode: no; leaving
</code></pre>]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Intel 9 285K on ASUS Z890: not stable!]]></title>
    <link href="https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/"/>
    <id>https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/</id>
    <published>2025-03-19T17:35:38+01:00</published>
    <content type="html"><![CDATA[<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Update (2025-05-15):</strong> Turns out the CPU was faulty! See <a href="/posts/2025-05-11-my-2025-high-end-linux-pc/">My 2025 high-end
Linux PC</a> for a new article on
this build, now with a working CPU.</div>
  </div>
</aside>

<p>In January I ordered the components for a new PC and expected that I would
publish a successor to my <a href="/posts/2022-01-15-high-end-linux-pc/">2022 high-end Linux PC
üêß</a> article. Instead, I am now sitting on
a PC which regularly encounters crashes of the worst-to-debug kind, so I am
publishing this article as a warning for others in case you wanted to buy the
same hardware.</p>















<a href="https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/IMG_4799.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/IMG_4799_hu6be03d573959a180decf49a8830d0de8_1842297_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/IMG_4799_hu6be03d573959a180decf49a8830d0de8_1842297_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/IMG_4799_hu6be03d573959a180decf49a8830d0de8_1842297_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="components">Components</h2>
<p>Which components did I pick for this build? Here‚Äôs the full list:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>140 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/fractal-define-7-compact-black-solid-atx-matx-mini-itx-pc-gehaeuse-13220301">Fractal Define 7 Compact Black Solid</a></td>
</tr>
<tr>
<td>155 CHF</td>
<td>Power Supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm850x-850-w-pc-netzteil-47356173?supplier=8560040">Corsair RM850x</a></td>
</tr>
<tr>
<td>233 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asus-prime-z890-p-lga-1851-intel-z890-atx-mainboard-50252296">ASUS PRIME Z890-P</a></td>
</tr>
<tr>
<td>620 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/intel-core-ultra-9-285k-lga-1851-370-ghz-24-core-prozessor-49734792">Intel Core Ultra 9 285k</a></td>
</tr>
<tr>
<td>120 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-d15-g2-168-mm-cpu-kuehler-46985628">Noctua NH-D15 G2</a></td>
</tr>
<tr>
<td>39 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140-mm-1-x-pc-luefter-657800?supplier=3204073">Noctua NF-A14 PWM (140 mm)</a></td>
</tr>
<tr>
<td>209 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-vengeance-2-x-32gb-6400-mhz-ddr5-ram-dimm-ram-24473300">64 GB DDR5-6400 Corsair Vengeance (2 x 32GB)</a></td>
</tr>
<tr>
<td>280 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/samsung-990-pro-4000-gb-m2-2280-ssd-37073751?supplier=406802">4000 GB Samsung 990 Pro</a></td>
</tr>
<tr>
<td>940 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/inno3d-geforce-rtx-4070-ti-x3-oc-12-gb-gddr6x-1-x-hdmi-3-x-dp-12-gb-grafikkarte-23664346?supplier=406802">Inno3D GeForce RTX4070 Ti</a></td>
</tr>
</tbody>
</table>
<p>Total: ‚âà1800 CHF, excluding the Graphics Card I re-used from a previous build.</p>
<p>‚Ä¶and the next couple of sections go into detail on how I selected these components.</p>
<h3 id="case">Case</h3>
<p>I have been a fan of Fractal cases for a couple of generations. In particular, I
realized that the ‚ÄúCompact‚Äù series offers plenty of space even for large
graphics cards and CPU coolers, so that‚Äôs now my go-to case: the Fractal Define
7 Compact (Black Solid).</p>
<p>I really like building components into the case and working with the case. There
are no sharp edges, the mechanisms are a pleasure to use and the
cable-management is well thought-out.</p>
<p>The only thing that wasn‚Äôt top-notch is that Fractal ships the case screws in
sealed plastic packages that you need to cut open. I would have wished for a
re-sealable plastic baggie so that one can keep the unused screws instead of
losing them.</p>
<h3 id="power-supply">Power Supply</h3>
<p>I wanted to keep my options open regarding upgrading to an nVidia 50xx series
graphics card at a later point. Those models have a TGP (‚ÄúTotal Graphics Power‚Äù)
of 575 watts, so I needed a power supply that delivers enough power for the
whole system even at peak power usage in all dimensions.</p>
<p>I ended up selecting the Corsair RM850x, which <a href="https://www.tomshardware.com/reviews/corsair-rm850x-2021-power-supply-review">reviews favoribly (‚Äúleader in
the 850W gold
category‚Äù)</a>
and was available at my electronics store of choice.</p>
<p>This was a good choice: the PSU indeed runs quiet, and I really like the power
cables (e.g. the GPU cable) that they include: they are very flexible, which
makes them easy to cable-manage.</p>
<h3 id="ssd-disk">SSD disk</h3>
<p>I have been avoiding PCIe 5 SSDs so far because they consume a lot more power
compared to PCIe 4 SSDs. While bulk streaming data transfer rates are higher on
PCIe 5 SSDs, random transfers are not significantly faster. Most of my compute
workload are random transfers, not large bulk transfers.</p>
<p>The power draw situation with PCIe 5 SSDs seems to be getting better lately,
with the Phison E31T being the first controller that implements power saving. A
disk that uses the E31T controller is the Corsair Force Series MP700
Elite. Unfortunately, said disk was unavailable when I ordered.</p>
<p>Instead, I picked the Samsung 990 Pro with 4 TB. I made good experiences with
the Samsung Pro series over the years (never had one die or degrade
performance), and my previous 2 TB disk is starting to fill up, so the extra
storage space is appreciated.</p>
<h3 id="mainboard">Mainboard</h3>
<p>One annoying realization is that most mainboard vendors seem to have moved to
2.5 GbE (= 2.5 Gbit/s ethernet) onboard network cards. I would have been
perfectly happy to play it safe and buy another Intel I225 1 GbE network card,
as long as it <em>just works</em> with Linux.</p>
<p>In the 2.5 GbE space, the main players seem to be Realtek and Intel. Most
mainboard vendors opted for Realtek as far as I could see.</p>
<p>Linux includes the <code>r8169</code> driver for Realtek network cards, but you need a
recent-enough Linux version (6.13+) that includes commit ‚Äú<a href="https://github.com/torvalds/linux/commit/f75d1fbe7809bc5ed134204b920fd9e2fc5db1df">r8169: add support
for
RTL8125D</a>‚Äù,
accompanied by a recent-enough linux-firmware package. Even then, there is some
concern around stability and ASPM support. See for example <a href="https://serverfault.com/a/1169558">this ServerFault
post</a> by someone working on the <code>r8169</code>
driver.</p>
<p>Despite the Intel 1 GbE options being well-supported at this point, Intel‚Äôs 2.5
GbE options might not fare any better than the Realtek ones: I found <a href="https://www.reddit.com/r/HomeServer/comments/1cc0yuq/are_intel_25_gbe_nics_i225v_i226v_stable_now/">reports of
instability with Intel‚Äôs 2.5 GbE network
cards</a>.</p>
<p>Aside from the network cards, I decided to stick to the ASUS prime series of
mainboards, as I made good experiences with those in my past few builds. Here
are a couple of thoughts on the ASUS PRIME Z890-P mainboard I went with:</p>
<ul>
<li>I like the quick-release PCIe mechanism: ASUS understood that people had
trouble unlocking large graphics cards from their PCIe slot, so they added a
lever-like mechanism that is easily reachable. In my couple of usages, this
worked pretty well!</li>
<li>I wrote about <a href="/posts/2022-01-15-high-end-linux-pc/#slow-boot">slow boot times with my 2022 PC
build</a> that were caused by
time-consuming memory training. On this ASUS board, I noticed that they blink
the Power LED to signal that memory training is in progress. Very nice! It
hadn‚Äôt occurred to me previously that the various phases of the boot could be
signaled by different Power LED blinking patterns :)
<ul>
<li>The downside of this feature is: While the machine is in suspend-to-RAM, the
Power LED also blinks! This is annoying, so I might just disconnect the
Power LED entirely.</li>
</ul>
</li>
<li>The UEFI firmware includes what they call a Q-Dashboard: An overview of what
is installed/connected in which slot. Quite nice:</li>
</ul>















<a href="https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/IMG_4809.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/IMG_4809_hubd58b5eea90ff3475e2027d31ae65ea9_1032931_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/IMG_4809_hubd58b5eea90ff3475e2027d31ae65ea9_1032931_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2025-03-19-intel-core-ultra-9-285k-on-asus-z890-not-stable/IMG_4809_hubd58b5eea90ff3475e2027d31ae65ea9_1032931_600x0_resize_q75_box.jpg"
  
  width="600"
  height="357"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h3 id="cpu-fan">CPU fan</h3>
<p>I am a long-time fan of Noctua‚Äôs products: This company makes silent fans with
great cooling capacity that work reliably! For many years, I have swapped out
every of my PC‚Äôs fans with Noctua fans, and it was always an upgrade. Highly
recommended.</p>
<p>Hence, it is no question that I picked the latest and greatest Noctua CPU cooler
for this build: the Noctua NH-D15 G2. There are a couple of things to pay
attention to with this cooler:</p>
<ul>
<li>I decided to configure it with one fan instead of two fans: Using only one fan
will be the quietest setup, yet still have plenty of cooling capacity for this
setup.</li>
<li>There are 3 different versions that differ in how their base plate is
shaped. Noctua recommends: ‚ÄúFor LGA1851, we generally recommend the regular
standard version with medium base convexity‚Äù
(<a href="https://noctua.at/en/intel-lga1851-all-you-need-to-know">https://noctua.at/en/intel-lga1851-all-you-need-to-know</a>)</li>
<li>The height of this cooler is 168 mm. This fits well into the Fractal Define 7
Compact Black.</li>
</ul>
<h3 id="cpu">CPU</h3>
<p>Probably the point that raises most questions about this build is why I selected
an Intel CPU over an AMD CPU. The primary reason is that Intel CPUs are so much
better at power saving!</p>
<p>Let me explain: Most benchmarks online are for gamers and hence measure a usage
curve that goes ‚Äústart game, run PC at 100% resources for hours‚Äù. Of course,
when you never let the machine idle, you would care about <em>power efficiency</em>:
how much power do you need to use to achive the desired result?</p>
<p>My use-case is software development, not gaming. My usage curve oscillates
between ‚Äúbarely any usage because Michael is reading text‚Äù to ‚Äúcomplete this
compilation as quickly as possible with all the power available‚Äù. For me, I need
both absolute power consumption at idle, and absolute performance to be
best-of-class.</p>
<p>AMD‚Äôs CPUs offer great performance (the recently released <a href="https://www.phoronix.com/review/amd-ryzen-9-9950x3d-linux">Ryzen 9 9950X3D is
even faster</a> than the
Intel 9 285K), and have great <em>power efficiency</em>, but poor <em>power consumption</em>
at idle: With ‚âà35W of idle power draw, Zen 5 CPUs consume ‚âà3x as much power as
Intel CPUs!</p>
<p>Intel‚Äôs CPUs offer great performance (like AMD), but excellent power consumption
at idle.</p>
<p>Therefore, I can‚Äôt in good conscience buy an AMD CPU, but if you want a fast
gaming-only PC or run an always-loaded HPC cluster with those CPUs, definitely
go ahead :)</p>
<h3 id="graphics-card">Graphics card</h3>
<p>I don‚Äôt necessarily recommend any particular nVidia graphics card, but I have
had to stick to nVidia cards because they are the only option that work with my
picky <a href="/posts/2017-12-11-dell-up3218k/">Dell UP3218K monitor</a>.</p>
<p>From time to time, I try out different graphics cards. Recently, I got myself an
AMD Radeon RX 9070 because I read that it works well with open source drivers.</p>
<p>While the Radeon RX 9070 works with my monitor (great!), it seems to consume 45W
in idle, which is much higher than my nVidia cards, which idle at ‚âà 20W. This is
unacceptable to me: Aside from high power costs and wasting precious resources,
the high power draw also means that my room will be hotter in summer and the
fans need to spin faster and therefore louder.</p>
<p>Maybe I‚Äôll write a separate article about the Radeon RX 9070.</p>
<h2 id="installation">Installation</h2>
<h3 id="uefi-setup">UEFI setup</h3>
<p>On the internet, I read that there was some issue related to the Power Limits
that mainboards come with by default. Therefore, I did a <a href="https://www.asus.com/motherboards-components/motherboards/prime/prime-z890-p/helpdesk_bios?model2Name=PRIME-Z890-P">UEFI firmware
update</a>
first thing after getting the mainboard. I upgraded to version 1404 (2025/01/10)
using the provided ZIP file (<code>PRIME-Z890-P-ASUS-1404.zip</code>) on an MS-DOS
FAT-formatted USB stick with the EZ Flash tool in the UEFI firmware
interface. Tip: do not extract the ZIP file, otherwise the EZ Flash tool cannot
update the Intel ME firmware. Just put the ZIP file onto the USB disk as-is.</p>
<p>I verified that with this UEFI version, the <code>Power Limit 1 (PL1)</code> is 250W, and
<code>ICCMAX=347A</code>, which are exactly the values that Intel recommends. Great!</p>
<p>I also enabled XMP and verified that memtest86 reported no errors.</p>
<h3 id="software-setup-early-adopter-pains">Software setup: early adopter pains</h3>
<p>To copy over the data from the old disk to the new disk, I wanted to boot a live
linux distribution (specifically, <a href="https://grml.org/">grml.org</a>) and follow my
usual procedure: boot with the old disk and the new (empty) disk, then use <code>dd</code>
to copy the data. It‚Äôs nice and simple, hard to screw up.</p>
<p>Unfortunately, while grml 2024.12 technically does boot up, there are two big
problems:</p>
<ol>
<li>
<p>There is no network connectivity because the kernel and linux-firmware
versions are too old.</p>
<ul>
<li>r8169: add support for RTL8125D
<a href="https://github.com/torvalds/linux/commit/f75d1fbe7809bc5ed134204b920fd9e2fc5db1df">https://github.com/torvalds/linux/commit/f75d1fbe7809bc5ed134204b920fd9e2fc5db1df</a></li>
</ul>
</li>
<li>
<p>I could not get Xorg to work at all. Not with the Intel integrated GPU, nor
with the nVidia dedicated GPU. Not with <code>nomodeset</code> or any of the other
options in the grml menu. This wasn‚Äôt merely a convenience problem: I needed
to use <code>gparted</code> (the graphical version) for its partition moving/resizing
support.</p>
</li>
</ol>
<p>Ultimately, it was easier to upgrade my old PC to Linux 6.13 and linux-firmware
20250109, then put in the new disk and copy over the installation.</p>
<h2 id="stability-issues">Stability issues</h2>
<p>At this point (early February), I switched to this new machine as my main PC.</p>
<p>Unfortunately, I could never get it to run stable! This journal shows you some
of the issues I faced and what I tried to troubleshoot them.</p>
<h3 id="xorg-dying-after-resume-from-suspend">Xorg dying after resume-from-suspend</h3>
<p>One of the first issues I encountered with this system was that after resuming
from suspend-to-RAM, I was greeted with a login window instead of my X11
session. The logs say:</p>
<pre tabindex="0"><code>(EE) NVIDIA(GPU-0): Failed to acquire modesetting permission.
(EE) Fatal server error:
(EE) EnterVT failed for screen 0
(EE) 
(EE) 
(EE) Please also check the log file at &#34;/var/log/Xorg.0.log&#34; for additional information.
(EE) 
(WW) NVIDIA(0): Failed to set the display configuration
(WW) NVIDIA(0):  - Setting a mode on head 0 failed: Insufficient permissions
(WW) NVIDIA(0):  - Setting a mode on head 1 failed: Insufficient permissions
(WW) NVIDIA(0):  - Setting a mode on head 2 failed: Insufficient permissions
(WW) NVIDIA(0):  - Setting a mode on head 3 failed: Insufficient permissions
(EE) Server terminated with error (1). Closing log file.
</code></pre><p>I couldn‚Äôt find any good tips online for this error message, so I figured I‚Äôd
wait and see how frequently this happens before investigating further.</p>
<h3 id="feb-18-xhci-host-controller-dying">Feb 18: xHCI host controller dying</h3>
<p>On Feb 18th, after resume-from-suspend, none of my USB peripherals would work
anymore! This affected <em>all USB ports</em> of the machine and could not be fixed,
not even by a reboot, until I fully killed power to the machine! In the kernel
log, I saw the following messages:</p>
<pre tabindex="0"><code>xhci_hcd 0000:80:14.0: xHCI host not responding to stop endpoint command
xhci_hcd 0000:80:14.0: xHCI host controller not responding, assume dead
xhci_hcd 0000:80:14.0: HC died; cleaning up
</code></pre><h3 id="feb-24-xhci-host-controller-dying">Feb 24: xHCI host controller dying</h3>
<p>The HC dying issue happened again when I was writing an SD card in my USB card
reader:</p>
<pre tabindex="0"><code>xhci_hcd 0000:80:14.0: HC died; cleaning up
</code></pre><h3 id="feb-24--uefi-update-disable-xmpp">Feb 24: ‚Üí UEFI update, disable XMPP</h3>
<p>To try and fix the host controller dying issue, I updated the UEFI firmware to
version <code>1601</code> and disabled the XMPP RAM profile.</p>
<h3 id="feb-26--switch-back-from-geforce-4070-ti-to-3060-ti">Feb 26: ‚Üí switch back from GeForce 4070 Ti to 3060 Ti</h3>
<p>To rule out any GPU-specific issues, I decided to switch back from the Inno3D
GeForce RTX4070 Ti to my older MSI GeForce RTX 3060 Ti.</p>
<h3 id="feb-28-pc-dying-on-suspend-to-ram">Feb 28: PC dying on suspend-to-RAM</h3>
<p>On Feb 28th, my PC did not resume from suspend-to-RAM. It would not even react
to a ping, I had to hard-reset the machine. When checking the syslog afterwards,
there are no entries.</p>
<p>I checked my power monitoring and saw that the machine consumed 50W (well above
idle power, and far above suspend-to-RAM power) throughout the entire
night. Hence, I suspect that the suspend-to-RAM did not work correctly and the
machine never actually suspended.</p>
<h3 id="mar-4th-pc-dying-when-running-django-tests">Mar 4th: PC dying when running django tests</h3>
<p>On March 4th, I was running the test suite for a medium-sized Django project (=
100% CPU usage) when I encountered a really hard crash: The machine stopped
working entirely, meaning all peripherals like keyboard and mouse stopped
responding, and the machine even did not respond to a network ping anymore.</p>
<p>At this point, I had enough and switched back to my 2022 PC.</p>
<h2 id="conclusion">Conclusion</h2>
<p>What use is a computer that doesn‚Äôt work? My hierarchy of needs contains
stability as the foundation, then speed and convenience. This machine exhausted
my tolerance for frustration with its frequent crashes.</p>
<p>Manawyrm <a href="https://chaos.social/@manawyrm/113772325172878092">actually warned me about the ASUS board</a>:</p>
<blockquote>
<p>ASUS boards are a typical gamble as always &ndash; they fired their firmware
engineers about 10 years ago, so you might get a nightmare of ACPI
troubleshooting hell now (or it&rsquo;ll just work). ASRock is worth a look as a
replacement if that happens. Electronics are usually solid, though&hellip;</p>
</blockquote>
<p>I didn‚Äôt expect that this PC would crash so hard, though. Like, if it couldn‚Äôt
suspend/resume that would be one thing (a dealbreaker, but somewhat expected and
understandable, probably fixable), but a machine that runs into a hard-lockup
when compiling/testing software? No thanks.</p>
<p>I will buy a different mainboard to see if that helps, likely the ASRock Z890
Pro-A. If you have any recommendations for a Z890 mainboard that actually works
reliably, please let me know!</p>
<p><strong>Update 2025-04-17:</strong> I have received the ASRock Z890 Pro-A, but the machine
shows exactly the same symptoms! I also swapped the power supply, which also did
not help. Running Prime95 crashed almost immediately. At this point, I have to
assume the CPU itself is defective and have started an RMA. I will post another
update once (if?) I get a replaced CPU.</p>
<p><strong>Update 2025-05-11:</strong> The CPU was faulty indeed! See <a href="/posts/2025-05-11-my-2025-high-end-linux-pc/">My 2025 high-end Linux
PC</a> for a new article on this
build, now with a working CPU.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Ryzen 7 Mini-PC makes a power-efficient VM host]]></title>
    <link href="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/"/>
    <id>https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/</id>
    <published>2024-07-02T17:17:00+02:00</published>
    <content type="html"><![CDATA[<p>When I saw the first reviews of the <a href="https://www.asrock.com/nettop/AMD/DeskMini%20X600%20Series/index.asp">ASRock DeskMini X600
barebone</a>,
I was immediately interested in building a home-lab hypervisor (VM host) with
it. Apparently, the DeskMini X600 uses less than 10W of power but supports
latest-generation AMD CPUs like the Ryzen 7 8700G!</p>
<p>Sounds like the perfect base for a power-efficient, always-on VM host that still
provides enough compute power (and fast disks!) to be competitive with
commercial VM offerings. In this article, I‚Äôll show how I built and set up my
DIY self-hosting VM host.</p>















<a href="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/240630-server-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/240630-server-featured_hu3cb7c72c5372ea18e945c976b24c8b83_4997169_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/240630-server-featured_hu3cb7c72c5372ea18e945c976b24c8b83_4997169_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/240630-server-featured_hu3cb7c72c5372ea18e945c976b24c8b83_4997169_600x0_resize_q75_box.jpg"
  alt="ASRock DeskMini X600" title="ASRock DeskMini X600"
  width="600"
  height="401"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="component-list">Component List</h2>
<p>The term ‚Äúbarebone‚Äù means that the machine comes without CPU, RAM and disk. You
only get a case with a mainboard and power supply, the rest is up to you. I
chose the following parts:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>215 EUR</td>
<td>barebone</td>
<td><a href="https://shop.jzelectronic.de/product_info.php?info=p75250_asrock-deskmini-x600.html">ASRock DeskMini X600</a></td>
</tr>
<tr>
<td>293 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/amd-ryzen-7-8700g-am5-420-ghz-8-core-prozessor-42390585?supplier=406802">AMD Ryzen 7 8700G (AM5, 4.20 GHz, 8 Core)</a></td>
</tr>
<tr>
<td>48 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-l9a-am5-37-mm-cpu-kuehler-24147242?supplier=406802">Noctua NH-L9a-AM5 (37 mm)</a></td>
</tr>
<tr>
<td>195 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-fury-impact-2-x-32gb-5600-mhz-ddr5-ram-so-dimm-ram-23704483?supplier=406802">Kingston FURY Impact (2 x 32GB, DDR5-5600 SO-DIMM)</a></td>
</tr>
<tr>
<td>218 CHF</td>
<td>SSD</td>
<td>2 x <a href="https://www.digitec.ch/de/s1/product/samsung-980-pro-1000-gb-m2-2280-ssd-13823466?supplier=406802">Samsung 980 Pro (1000 GB, M.2 2280)</a> (for RAID-1)</td>
</tr>
</tbody>
</table>
<p>Total cost: 969 CHF</p>
<p>The CPU fan is not strictly required (the DeskMini X600 already comes with a
fan), but I wanted the best cooling performance at lowest noise levels, so
Noctua it is.</p>
<p><del>I read that the machine should support ECC RAM, too</del>. <strong>Update:</strong> The <a href="https://www.tomshardware.com/pc-components/cpus/amd-confirms-ryzen-8000g-apus-dont-support-ecc-ram-despite-initial-claims">Ryzen
8700G does not support
ECC-RAM</a>
after all. Only the Ryzen 7 <strong>PRO</strong> 8700G supports ECC-RAM.</p>















<a href="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/IMG_3871.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/IMG_3871_hu59fa65490ce2e48b2c5b284fe97e0775_2062424_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/IMG_3871_hu59fa65490ce2e48b2c5b284fe97e0775_2062424_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/IMG_3871_hu59fa65490ce2e48b2c5b284fe97e0775_2062424_600x0_resize_q75_box.jpg"
  alt="components" title="components"
  width="600"
  height="631"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>It took me about an hour to assemble the parts. Note that the M.2 SSD screws
might seem a little hard to screw in, but don‚Äôt be deterred by that. When first
powering on the system, be patient as the memory training will take a minute or so,
during which the screen will stay black.</p>
<h2 id="uefi-setup">UEFI Setup</h2>
<p>The UEFI on the DeskMini X600 comes with reasonable defaults.</p>
<p>The CPU fan setting alreadys defaults to ‚ÄúSilent Mode‚Äù, for example.</p>
<p>I changed the following option, which is typical for server usage:</p>
<ul>
<li>Advanced ‚Üí ACPI Configuration ‚Üí Restore on AC/Power Loss: Power On</li>
</ul>
<p>And I disabled the onboard devices I know I won‚Äôt need, just in case it saves power:</p>
<ul>
<li>Advanced ‚Üí Onboard Devices Configuration ‚Üí Onboard HD Audio: Disabled</li>
<li>SATA3 Controller: Disabled</li>
</ul>
<h2 id="operating-system-setup">Operating System Setup</h2>
<p>I want to run this machine as a VM hypervisor. The easiest way that I know to set up such a hypervisor is to install Proxmox, an open
source virtualization appliance based on Debian.</p>
<p>I booted the machine with the Proxmox installer copied to a USB memory stick,
then selected ZFS in a RAID-1 configuration. The setup worked smoothly and was
done in a few minutes.</p>
<p>Then, I set up Tailscale <a href="https://tailscale.com/kb/1133/proxmox">as recommended</a>
and used <code>tailscale serve</code> so that I can access the Proxmox web interface on its
Tailscale hostname via HTTPS, instead of having to deal with certificates and
custom ports:</p>
<pre tabindex="0"><code>pve# curl -fsSL https://tailscale.com/install.sh | sh
pve# tailscale up
[‚Ä¶]
  follow instructions and disable key expiration
[‚Ä¶]
pve# tailscale serve --bg https+insecure://localhost:8006
</code></pre><p>(Of course I‚Äôll also install Tailscale on each VM running on the host.)</p>
<p>Now I can log into the Proxmox web interface from anywhere without certificate
warnings:</p>















<a href="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/2024-06-30-proxmox.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/2024-06-30-proxmox_hu72d4f4d0189dc6f0891d857b6c038b39_1406117_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/2024-06-30-proxmox_hu72d4f4d0189dc6f0891d857b6c038b39_1406117_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/2024-06-30-proxmox_hu72d4f4d0189dc6f0891d857b6c038b39_1406117_600x0_resize_q75_box.jpg"
  alt="proxmox web interface" title="proxmox web interface"
  width="600"
  height="418"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>In this screenshot, I have already created 2 VMs (‚Äúbatch‚Äù and ‚Äúweb‚Äù) using the
‚ÄúCreate VM‚Äù button at the top right. Proxmox allows controlling the installer
via its ‚ÄúConsole‚Äù tab and once set up, the VM shows up in the same network that
the hypervisor is connected to with a MAC address from the ‚ÄúProxmox Server
Solutions GmbH‚Äù range. That‚Äôs pretty much all there is to it.</p>
<p>I don‚Äôt have enough nodes for advanced features like clustering, but I might
investigate whether I want to set up backups on the Proxmox layer or keep doing
them on the OS layer.</p>
<h3 id="fan-speed-monitoring">Fan speed monitoring</h3>
<p>Sven Geggus shared how to make the fan speed sensors work in current versions of
Debian:</p>
<pre tabindex="0"><code>pve# echo &#34;options nct6683 force=1&#34; &gt;&gt; /etc/modprobe.d/sensors.conf
pve# echo nct6683 &gt;&gt; /etc/modules-load.d/sensors.conf
pve# modprobe nct6683
pve# systemctl restart prometheus-node-exporter
</code></pre><h2 id="power-usage">Power Usage</h2>
<p>The power usage values I measure are indeed excellent: The DeskMini X600 with
Ryzen 7 8700G consumes less than 10W (idle)! When the machine has something to
do, it spikes up to 50W:</p>















<a href="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/2024-06-24-energy-usage.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/2024-06-24-energy-usage_hu6ff618f9e9023ea7df34e8fd6d4f3691_213887_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/2024-06-24-energy-usage_hu6ff618f9e9023ea7df34e8fd6d4f3691_213887_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2024-07-02-ryzen-7-mini-pc-low-power-proxmox-hypervisor/2024-06-24-energy-usage_hu6ff618f9e9023ea7df34e8fd6d4f3691_213887_600x0_resize_q75_box.jpg"
  alt="Grafana dashboard showing power usage" title="Grafana dashboard showing power usage"
  width="600"
  height="257"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="noise">Noise</h2>
<p>ASRock explicitly lists the Noctua NH-L9a-AM5 as compatible with the DeskMini
X600, which was one of the factors that made me select this barebone. Installing
the fan was easy.</p>
<p>Fan noise is very low, as expected with Noctua. I can‚Äôt hear the device even
when it is standing in front of me on my desk. Of course, under heavy load, the
fan will be audible. This is an issue with all small form-factor PCs, as they
just don‚Äôt have enough case space to swallow more noise.</p>
<p>Aside from the fan noise, if you hold your ear directly next to the X600, you
can hear the usual electrical component noise (not coil whine per se, but that
sort of thing).</p>
<p>I recommend positioning this device under a desk, or on a shelf, or
similar.</p>
<h2 id="performance-comparison">Performance comparison</h2>
<p>You can find synthetic benchmark results for the Ryzen 8700G elsewhere, so as
usual, I will write about the specific angle I care about: How fast can this
machine handle Go workloads?</p>
<h3 id="compiling-go-1224">Compiling Go 1.22.4</h3>
<p>On the Ryzen 8700G, we can compile Go 1.22.4 in a little under 40 seconds:</p>
<pre tabindex="0"><code>% time ./make.bash
[‚Ä¶]
./make.bash  208,55s user 36,96s system 631% cpu 38,896 total
</code></pre><p>For comparison, <a href="/posts/2022-01-15-high-end-linux-pc/">my 2022 high-end Linux PC with Core
i9-12900K</a> is only a few seconds faster:</p>
<pre tabindex="0"><code>% time ./make.bash
[‚Ä¶]
./make.bash  207,33s user 29,55s system 685% cpu 34,550 total
</code></pre><h3 id="go-http-and-json-benchmarks">Go HTTP and JSON benchmarks</h3>
<p>I also ran the HTTP and JSON benchmarks from Go‚Äôs <a href="https://github.com/golang/benchmarks">x/benchmarks
repository</a>.</p>
<p>Compared to the Virtual Server I‚Äôm currently renting, the Ryzen 8700G is more
than twice as fast:</p>
<pre tabindex="0"><code>% benchstat rentedvirtual ryzen8700g 
name    old time/op                  new time/op                  delta
HTTP-2  28.5¬µs ¬± 2%                  10.2¬µs ¬± 1%  -64.17%  (p=0.008 n=5+5)
JSON-2  24.1ms ¬±29%                   9.4ms ¬± 1%  -61.06%  (p=0.008 n=5+5)
</code></pre><p>Of course, the Intel i9 12900K is still a bit faster ‚Äî how much depends on the
specific workload:</p>
<pre tabindex="0"><code>% benchstat ryzen8700g i9_12900k 
name    old time/op                  new time/op                  delta
HTTP-2  10.2¬µs ¬± 1%                   7.6¬µs ¬± 1%  -25.13%  (p=0.008 n=5+5)
JSON-2  9.40ms ¬± 1%                  9.23ms ¬± 1%   -1.82%  (p=0.008 n=5+5)
</code></pre><h2 id="conclusion">Conclusion</h2>
<p>What a delightful little Mini-PC! It‚Äôs modern enough to house the current
generation of CPUs, compact enough to fit in well anywhere, yet just large
enough to fit a Noctua CPU cooler for super-quiet operation. The low power draw
makes it acceptable to run this machine 24/7.</p>
<p>Paired with 64 GB of RAM and large, fast NVMe disks, this machine packs a punch
and will easily power your home automation, home lab, hobby project, small office server, etc.</p>
<p>If a Raspberry Pi isn‚Äôt enough for your needs, check out the DeskMini X600, or
perhaps its larger variant, the <a href="https://www.asrock.com/nettop/AMD/DeskMeet%20X600%20Series/index.asp">DeskMeet
X600</a>
which is largely identical, but comes with a PCIe slot.</p>
<p>If this one doesn‚Äôt fit your needs, keep looking: there are many more mini PCs
on the market. Check out <a href="https://www.servethehome.com/introducing-project-tinyminimicro-home-lab-revolution/">ServeTheHome‚Äôs ‚ÄúProject
TinyMiniMicro‚Äù</a>
for a lot more reviews.</p>
<p><strong>Update:</strong> Apparently ASRock is <a href="https://www.golem.de/news/asrock-x600tm-itx-sehr-flaches-am5-mainboard-mit-externer-stromversorgung-2407-187469.html">releasing their X600
mainboard</a>
as a standalone product, too, if you like the electronics but not the form
factor.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[My 2023 all-flash ZFS NAS (Network Storage) build]]></title>
    <link href="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/"/>
    <id>https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/</id>
    <published>2023-10-25T18:03:14+02:00</published>
    <content type="html"><![CDATA[<p>For over 10 years now, I run two self-built NAS (Network Storage) devices which serve media (currently via Jellyfin) and run daily backups of all my PCs and servers.</p>
<p>In this article, I describe my goals, which hardware I picked for my new build (and why) and how I set it up.</p>
<h2 id="design-goals">Design Goals</h2>
<p>I use my network storage devices primarily for archival (daily backups), and secondarily as a media server.</p>
<p>There are days when I don‚Äôt consume any media (TV series and movies) from my NAS, because I have my music collection mirrored to another server that‚Äôs running 24/7 anyway. In total, my NAS runs for a few hours in some evenings, and for about an hour (daily backups) in the mornings.</p>
<p>This usage pattern is distinctly different than, for example, running a NAS as a file server for collaborative video editing that needs to be available 24/7.</p>
<p>The goals of my NAS setup are:</p>
<ol>
<li>Save power: each NAS build only runs when needed.
<ul>
<li>They must support Wake-on-LAN or <a href="/posts/2022-10-09-remote-power-button/">similar (ESP32 remote power button)</a>.</li>
<li>Scheduling of backups is done separately, on a Raspberry Pi with <a href="https://gokrazy.org/">gokrazy</a>.</li>
<li>Convenient <a href="https://github.com/stapelberg/regelwerk/commit/8b81d7a808b1d76a0e96bdb4ab43964623d133c4">power off (tied to our all-lights-out button)</a> and power on (with <a href="https://github.com/stapelberg/zkj-nas-tools/blob/master/webwake/webwake.go">webwake</a>).</li>
</ul>
</li>
<li>Use Off-the-shelf hardware and software.
<ul>
<li>When hardware breaks, I can get replacements from the local PC store the same day.</li>
<li>Even when only the data disk(s) survive, I should be able to access my data when booting a standard live Linux system.</li>
<li>Minimal application software risk: I want to minimize risk for manual screw-ups or software bugs, meaning I use the venerable rsync for my backup needs (not Borg, restic, or similar).</li>
<li>Minimal system software risk: I use reliable file systems with the minimal feature set ‚Äî no LVM or btrfs snapshots, no ZFS replication, etc. To achieve redundancy, I don‚Äôt use a cluster file system with replication, instead I synchronize my two NAS builds using rsync, without the <code>--delete</code> flag.</li>
</ul>
</li>
<li>Minimal failure domains: when one NAS fails, the other one keeps working.
<ul>
<li>Having N+1 redundancy here takes the stress out of repairing your NAS.</li>
<li>I run each NAS in a separate room, so that accidents like fires or spilled drinks only affect one machine.</li>
</ul>
</li>
</ol>
<h4 id="file-system-zfs">File System: ZFS</h4>
<p>In this specific build, I am trying out <a href="https://en.wikipedia.org/wiki/ZFS">ZFS</a>. Because I have two NAS builds
running, it is easy to change one variable of the system (which file system to
use) in one build, without affecting the other build.</p>
<p>My main motivation for using ZFS instead of <a href="https://en.wikipedia.org/wiki/Ext4"><code>ext4</code></a> is that ZFS does data checksumming, whereas ext4 only checksums metadata and the journal, but not data at rest. With large enough datasets, the chance of bit flips increases significantly, and I would prefer to know about them so that I can restore the affected files from another copy.</p>
<h2 id="hardware">Hardware</h2>
<p>Each of the two storage builds has (almost) the same components. This makes it easy to diagnose one with the help of the other. When needed, I can swap out components of the second build to temporarily repair the first one, or vice versa.</p>















<a href="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/IMG_1974.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/IMG_1974_hubee9c905cc3b7237e7c96518cbb38b46_1156723_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/IMG_1974_hubee9c905cc3b7237e7c96518cbb38b46_1156723_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/IMG_1974_hubee9c905cc3b7237e7c96518cbb38b46_1156723_600x0_resize_q75_box.jpg"
  alt="photo of the Network Storage PC from the side, showing the Noctua case fan and CPU cooler, data disks, PSU and cables" title="photo of the Network Storage PC from the side, showing the Noctua case fan and CPU cooler, data disks, PSU and cables"
  width="600"
  height="450"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h3 id="base-components">Base Components</h3>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
<th>Remark</th>
</tr>
</thead>
<tbody>
<tr>
<td>114 CHF</td>
<td>mainboard</td>
<td><a href="https://www.digitec.ch/en/s1/product/asrock-b450-gaming-itxac-am4-amd-b450-mini-itx-motherboards-9385702">AsRock B450 Gaming ITX/ac</a></td>
<td>Mini ITX</td>
</tr>
<tr>
<td>80 CHF</td>
<td>cpu</td>
<td><a href="https://www.heise.de/preisvergleich/amd-athlon-3000g-yd3000c6m2ofh-yd3000c6fhmpk-a2174924.html?hloc=at&amp;hloc=de">AMD Athlon 3000G</a></td>
<td>35W TDP, GPU</td>
</tr>
<tr>
<td>65 CHF</td>
<td>cpu cooler</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-l12s-70-mm-cpu-kuehler-6817433">Noctua NH-L12S</a></td>
<td>silent!</td>
</tr>
<tr>
<td>58 CHF</td>
<td>power supply</td>
<td><a href="https://www.digitec.ch/en/s1/product/silverstone-power-supply-st30sf-300w-sfx-300-w-power-supply-pc-5988297">Silverstone ST30SF 300W SFX</a></td>
<td>SFX form factor</td>
</tr>
<tr>
<td>51 CHF</td>
<td>case</td>
<td><a href="https://www.digitec.ch/en/s1/product/silverstone-sst-sg05bb-lite-mini-itx-mini-dtx-pc-case-3525365">Silverstone SST-SG05BB-Lite</a></td>
<td>Mini ITX</td>
</tr>
<tr>
<td>48 CHF</td>
<td>system disk</td>
<td><a href="https://www.digitec.ch/en/s1/product/wd-red-sn700-250-gb-m2-2280-ssd-17688689">WD Red SN700 250GB</a></td>
<td>M.2 NVMe</td>
</tr>
<tr>
<td>32 CHF</td>
<td>case fan</td>
<td><a href="https://www.digitec.ch/en/s1/product/noctua-nf-s12a-uln-120mm-1x-pc-fans-2451401">Noctua NF-S12A ULN</a></td>
<td>silent 120mm</td>
</tr>
<tr>
<td>28 CHF</td>
<td>ram</td>
<td><a href="https://www.digitec.ch/en/s1/product/gskill-value-1-x-8gb-2400-mhz-ddr4-ram-dimm-ram-11056524">8 GB DDR4 Value RAM (F4-2400C15-8GNT)</a></td>
<td></td>
</tr>
</tbody>
</table>
<p>The total price of 476 CHF makes this not a cheap build.</p>
<p>But, I think each component is well worth its price. Here‚Äôs my thinking regarding the components:</p>
<ul>
<li>Why not a cheaper <strong>system disk</strong>? I wanted to use an M.2 NVMe disk so that I could mount it on the bottom of the mainboard instead of having to mount another SATA disk in the already-crowded case. Instead of chosing the cheapest M.2 disk I could find, I went with WD Red as a brand I recognize. While it‚Äôs not a lot of effort to re-install the system disk, it‚Äôs still annoying and something I want to avoid if possible. If spending 20 bucks saves me one disk swap + re-install, that‚Äôs well worth it for me!</li>
<li>Why not skip the <strong>system disk</strong> entirely and install on the data disks? That makes the system harder to (re-)install, and easier to make manual errors when recovering the system. I like to physically disconnect the data disks while re-installing a NAS, for example. (I‚Äôm a fan of simple precautions that prevent drastic mistakes!)</li>
<li>Why not a cheaper <strong>CPU cooler</strong>? In <a href="/posts/2019-10-23-nas/">one of my earlier NAS builds</a>, I used a (cheaper) passive CPU fan, which was directly in the air stream of the Noctua 120mm case fan. This setup was spec&rsquo;ed for the CPU I used, and yet said CPU died as the only CPU to die on me in many many years. I want a reliable CPU fan, but also an absolutely silent build, so I went with the Noctua CPU cooler.</li>
<li>Why not skip the <strong>case fan</strong>, or go with the Silverstone-supplied one? You might argue that the airflow of the CPU cooler is sufficient for this entire build. Maybe that‚Äôs true, but I don‚Äôt want to risk it. Also, there are 3 disks (two data disks and one system disk) that can benefit from additional airflow.</li>
<li>Regarding the <strong>CPU</strong>, I chose the cheapest AMD CPU for Socket AM4, with a 35W TDP and built-in graphics. The built-in graphics means I can connect an HDMI monitor for setup and troubleshooting, without having to use the mainboard‚Äôs valuable one and only PCIe slot.
<br>
<br>
Unfortunately, AMD CPUs with 35W TDP are not readily available right now. My tip is to look around for a bit, and maybe buy a used one. Chose either the predecessor Athlon 200GE, or the newer generation Ryzen APU series, whichever you can get your hands on.</li>
<li>Regarding the <strong>mainboard</strong>, I went with the AsRock Mini ITX series, which have served me well over the years. I started with an <a href="https://www.asrock.com/mb/AMD/AM1H-itx/">AsRock AM1H-ITX</a> in 2016, then bought two <a href="https://www.digitec.ch/en/s1/product/asrock-ab350-gaming-itxac-am4-amd-b350-mini-itx-motherboards-7022839">AsRock AB350 Gaming ITX/ac</a> in 2019, and recently an <a href="https://www.digitec.ch/en/s1/product/asrock-b450-gaming-itxac-am4-amd-b450-mini-itx-motherboards-9385702">AsRock B450 Gaming ITX/ac</a>.</li>
</ul>
<p>As a disclaimer: the two builds I use are <em>very similar</em> to the component list above, with the following differences:</p>
<ol>
<li>On storage2, I use an old AMD Ryzen 5 5600X CPU instead of the listed Athlon 3000G. The extra performance isn‚Äôt needed, and the lack of integrated graphics is annoying. But, I had the CPU lying around and didn‚Äôt want it to go to waste.</li>
<li>On storage3, I use an old AMD Athlon 200GE CPU on an <a href="https://www.digitec.ch/en/s1/product/asrock-ab350-gaming-itxac-am4-amd-b350-mini-itx-motherboards-7022839">AsRock AB350</a> mainboard.</li>
</ol>
<p>I didn‚Äôt describe the <em>exact</em> builds I use because a component list is more useful if the components on it are actually available :-).</p>
<h3 id="16-tb-ssd-data-disks">16 TB SSD Data Disks</h3>
<p>It used to be that Solid State Drives (SSDs) were just way too expensive compared to spinning hard disks when talking about terabyte sizes, so I used to put the largest single disk drive I could find into each NAS build: I started with 8 TB disks, then upgraded to 16 TB disks later.</p>
<p>Luckily, the price of flash storage has come down quite a bit: the <a href="https://www.digitec.ch/en/s1/product/samsung-870-qvo-8000-gb-25-ssd-13388185">Samsung SSD 870 QVO (8 TB)</a> costs ‚Äúonly‚Äù 42 CHF per TB. For a total of 658 CHF, I can get 16 TB of flash storage in 2 drives:</p>















<a href="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/2023-10-22-samsung-870qvo-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/2023-10-22-samsung-870qvo-featured_hu799c805b17c89c62874113693200acea_520811_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/2023-10-22-samsung-870qvo-featured_hu799c805b17c89c62874113693200acea_520811_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/2023-10-22-samsung-870qvo-featured_hu799c805b17c89c62874113693200acea_520811_600x0_resize_q75_box.jpg"
  alt="two samsung 870 QVO disks" title="two samsung 870 QVO disks"
  width="600"
  height="338"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Of course, spinning hard disks are at 16 CHF per TB, so going all-flash is over 3x as expensive.</p>
<p>I decided to pay the premium to get a number of benefits:</p>
<ul>
<li>My NAS devices are quieter because there are no more spinning disks in them. This gives me more flexibility in where to physically locate each storage machine.</li>
<li>My daily backups run quicker, meaning each NAS needs to be powered on for less time. The effect was actually quite pronounced, because figuring out which files need backing up requires a lot of random disk access. My backups used to take about 1 hour, and now finish in less than 20 minutes.</li>
<li>The quick access times of SSDs solve the last remaining wrinkle in my backup scheme: deleting backups and measuring used disk space is finally fast!</li>
</ul>
<h3 id="power-usage">Power Usage</h3>
<p>The choice of CPU, Mainboard and Network Card all influence the total power usage of the system. Here are a couple of measurements to give you a rough idea of the power usage:</p>
<table>
<thead>
<tr>
<th>build</th>
<th>CPU</th>
<th>main board</th>
<th>network card</th>
<th>idle</th>
<th>load</th>
</tr>
</thead>
<tbody>
<tr>
<td>s2</td>
<td>5600X</td>
<td><a href="https://www.digitec.ch/en/s1/product/asrock-b450-gaming-itxac-am4-amd-b450-mini-itx-motherboards-9385702">B450</a></td>
<td>10G: Mellanox ConnectX-3</td>
<td>26W</td>
<td>60W</td>
</tr>
<tr>
<td>s3</td>
<td>200GE</td>
<td><a href="https://www.digitec.ch/en/s1/product/asrock-ab350-gaming-itxac-am4-amd-b350-mini-itx-motherboards-7022839">AB350</a></td>
<td>10G: <a href="https://www.fs.com/products/135978.html">FS Intel 82599</a></td>
<td>28W</td>
<td>50W</td>
</tr>
<tr>
<td>s3</td>
<td>200GE</td>
<td><a href="https://www.digitec.ch/en/s1/product/asrock-ab350-gaming-itxac-am4-amd-b350-mini-itx-motherboards-7022839">AB350</a></td>
<td>1G onboard</td>
<td>23W</td>
<td>40W</td>
</tr>
</tbody>
</table>
<p>These values were measured using a <a href="https://mystrom.ch/de/wifi-switch/">myStrom WiFi Switch</a>.</p>
<h2 id="operating-system">Operating System</h2>
<h3 id="previously-coreos">Previously: CoreOS</h3>
<p>Before this build, I ran my NAS using Docker containers on <a href="https://en.wikipedia.org/wiki/Container_Linux">CoreOS (later renamed to Container Linux)</a>, which was a light-weight Linux distribution focused on containers. There are two parts about CoreOS that I liked most.</p>
<p>The most important part was that CoreOS updated automatically, using an A/B updating scheme, just like I do in <a href="https://gokrazy.org/">gokrazy</a>. I want to run as many of my devices as possible with A/B updates.</p>
<p>The other bit I like is that the configuration is very clearly separated from the OS. I managed the configuration (a <a href="https://cloud-init.io/">cloud-init YAML file</a>) on my main PC, so when swapping out the NAS system disk with a blank disk, I could just plug my config file into the CoreOS installer, and be done.</p>
<p>When CoreOS was bought by Red Hat and merged into Project Atomic, there wasn‚Äôt a good migration path and cloud-init wasn‚Äôt supported anymore. As a short-term solution, I switched from CoreOS to Flatcar Linux, a spiritual successor.</p>
<h3 id="now-ubuntu-server">Now: Ubuntu Server</h3>
<p>For this build, I wanted to try out ZFS. I always got the impression that ZFS was a pain to run because its kernel modules are not included in the upstream Linux kernel source.</p>
<p>Then, in 2016, Ubuntu decided to include ZFS by default. There are a couple of other Linux distributions on which ZFS seems easy enough to run, like Gentoo, Arch Linux or NixOS.</p>
<p>I wanted to spend my ‚Äúinnovation tokens‚Äù on ZFS, and keep the rest boring and similar to what I already know and work with, so I chose Ubuntu Server over NixOS. It‚Äôs similar enough to Debian that I don‚Äôt need to re-learn.</p>
<p>Luckily, the migration path from Flatcar‚Äôs cloud-init config to Ubuntu Server is really easy: just copy over parts of the cloud-config until you‚Äôre through the entire thing. It‚Äôs like a checklist!</p>
<h3 id="maybe-later-gokrazy">Maybe later? gokrazy</h3>
<p>In the future, it might be interesting to build a NAS setup using <a href="https://gokrazy.org">gokrazy</a>. In particular since we now can <a href="https://gokrazy.org/packages/docker-containers/">run Docker containers on gokrazy</a>, which makes running Samba or Jellyfin quite easy!</p>
<p>Using gokrazy instead of Ubuntu Server would get rid of a lot of moving parts. The current blocker is that ZFS is not available on gokrazy. Unfortunately that‚Äôs not easy to change, in particular also from a licensing perspective.</p>
<h2 id="setup">Setup</h2>
<h3 id="uefi">UEFI</h3>
<p>I changed the following UEFI settings:</p>
<ul>
<li>
<p>Advanced ‚Üí ACPI Configuration ‚Üí PCIE Devices Power On: Enabled</p>
<ul>
<li>This setting is needed (but not sufficient) for Wake On LAN (WOL). You also need to enable WOL in your operating system.</li>
</ul>
</li>
<li>
<p>Advanced ‚Üí Onboard Devices Configuration ‚Üí Restore on AC/Power Loss: Power On</p>
<ul>
<li>This setting ensures the machine turns back on after a power loss. Without it, WOL might not work after a power loss.</li>
</ul>
</li>
</ul>
<h3 id="operating-system-1">Operating System</h3>
<h4 id="network-preparation">Network preparation</h4>
<p>I like to configure static IP addresses for devices that are a permanent part of my network.</p>
<p>I have come to prefer configuring static addresses as static DHCP leases in my router, because then the address remains the same no matter which operating system I boot ‚Äî whether it‚Äôs the installed one, or a live USB stick for debugging.</p>
<h4 id="ubuntu-server">Ubuntu Server</h4>
<ol>
<li>
<p>Download Ubuntu Server from <a href="https://ubuntu.com/download/server">https://ubuntu.com/download/server</a></p>
<ul>
<li>I initially let the setup program install Docker, but that‚Äôs a mistake. The setup program will get you Docker from snap (not apt), which <a href="https://stackoverflow.com/questions/52526219/docker-mkdir-read-only-file-system">can‚Äôt work with the whole file system</a>.</li>
</ul>
</li>
<li>
<p>Disable swap:</p>
<ul>
<li><code>swapoff -a</code></li>
<li><code>$EDITOR /etc/fstab</code> # delete the swap line</li>
</ul>
</li>
<li>
<p>Automatically load the corresponding sensors kernel module for the mainboard so that the Prometheus node exporter picks up temperature values and fan speed values:</p>
<ul>
<li><code>echo nct6775 | sudo tee /etc/modules</code></li>
</ul>
</li>
<li>
<p>Enable <a href="https://help.ubuntu.com/community/AutomaticSecurityUpdates">unattended upgrades</a>:</p>
<ul>
<li>
<p><code>dpkg-reconfigure -plow unattended-upgrades</code></p>
</li>
<li>
<p>Edit <code>/etc/apt/apt.conf.d/50unattended-upgrades</code> ‚Äî I like to make the following changes:</p>
<pre tabindex="0"><code>Unattended-Upgrade::MinimalSteps &#34;true&#34;;
Unattended-Upgrade::Mail &#34;michael@example.net&#34;;
Unattended-Upgrade::MailReport &#34;only-on-error&#34;;
Unattended-Upgrade::Automatic-Reboot &#34;true&#34;;
Unattended-Upgrade::Automatic-Reboot-Time &#34;08:00&#34;;
Unattended-Upgrade::SyslogEnable &#34;true&#34;;
</code></pre></li>
</ul>
</li>
</ol>
<h3 id="network">Network</h3>
<h4 id="tailscale-mesh-vpn">Tailscale Mesh VPN</h4>
<p>I have come to like Tailscale. It‚Äôs a mesh VPN (data flows directly between the machines) that allows me access to and from my PCs, servers and storage machines from anywhere.</p>
<p>Specifically, I followed the <a href="https://tailscale.com/download/linux/ubuntu-2204">install Tailscale on Ubuntu 22.04 guide</a>.</p>
<h4 id="prometheus-node-exporter">Prometheus Node Exporter</h4>
<p>For monitoring, I have an existing Prometheus setup. To add a new machine to my setup, I need to configure it as a new target on my Prometheus server. In addition, I need to set up Prometheus on the new machine.</p>
<p>First, I installed the Prometheus node exporter using <code>apt install prometheus-node-exporter</code>.</p>
<p>Then, I modified <code>/etc/default/prometheus-node-exporter</code> to only listen on the Tailscale IP address:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#bb60d5">ARGS</span><span style="color:#666">=</span><span style="color:#4070a0">&#34;--web.listen-address=100.85.3.16:9100&#34;</span>
</span></span></code></pre></div><p>Lastly, I added a systemd override to ensure the node exporter keeps trying to start until tailscale is up: the command <code>systemctl edit prometheus-node-exporter</code> opens an editor, and I configured the override like so:</p>
<pre tabindex="0"><code># /etc/systemd/system/prometheus-node-exporter.service.d/override.conf
[Unit]
# Allow infinite restarts, even within a short time.
StartLimitIntervalSec=0

[Service]
RestartSec=1
</code></pre><h4 id="static-ipv6-address">Static IPv6 address</h4>
<p>Similar to the static IPv4 address, I like to give my NAS a static IPv6 address as well. This way, I don‚Äôt need to reconfigure remote systems when I (sometimes temporarily) switch my NAS to a different network card with a different MAC address. Of course, this point becomes moot if I ever switch all my backups to Tailscale.</p>
<p>Ubuntu Server comes with Netplan by default, but I don‚Äôt know Netplan and don‚Äôt want to use it.</p>
<p>To switch to <code>systemd-networkd</code>, I ran:</p>
<pre tabindex="0"><code>apt remove --purge netplan.io
systemctl enable --now systemd-networkd
</code></pre><p>Then, I created a <code>systemd-networkd</code> config file with a static IPv6 token, resulting in a predictable IPv6 address:</p>
<pre tabindex="0"><code>$EDITOR /etc/systemd/network/enp.network
</code></pre><p>My config file looks like this:</p>
<pre tabindex="0"><code>[Match]
Name=enp*

[Network]
DHCP=yes
IPv6Token=0:0:0:0:10::253
IPv6AcceptRouterAdvertisements=yes
</code></pre><h4 id="ipv6-firewall-setup">IPv6 firewall setup</h4>
<p>An easy way to configure Linux‚Äôs <code>netfilter</code> firewall is to <code>apt install iptables-persistent</code>. That package takes care of saving firewall rules on shutdown and restoring them on the next system boot.</p>
<p>My rule setup is very simple: allow ICMP (IPv6 needs it), then set up <code>ACCEPT</code> rules for the traffic I expect, and <code>DROP</code> the rest.</p>
<p>Here‚Äôs my resulting <code>/etc/iptables/rules.v6</code> from such a setup:</p>
<details>
<summary>
<code>/etc/iptables/rules.v6</code>
</summary>
<pre tabindex="0"><code># Generated by ip6tables-save v1.4.14 on Fri Aug 26 19:57:51 2016
*filter
:INPUT DROP [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -p ipv6-icmp -m comment --comment &#34;IPv6 needs ICMPv6 to work&#34; -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -m comment --comment &#34;Allow packets for outgoing connections&#34; -j ACCEPT
-A INPUT -s fe80::/10 -d fe80::/10 -m comment --comment &#34;Allow link-local traffic&#34; -j ACCEPT
-A INPUT -s 2001:db8::/64 -m comment --comment &#34;local traffic&#34; -j ACCEPT
-A INPUT -p tcp -m tcp --dport 22 -m comment --comment &#34;SSH&#34; -j ACCEPT
COMMIT
# Completed on Fri Aug 26 19:57:51 2016
</code></pre></details>
<h3 id="encrypted-zfs">Encrypted ZFS</h3>
<p>Before you can use ZFS, you need to install the ZFS tools using <code>apt install zfsutils-linux</code>.</p>
<p>Then, we create a zpool that spans both SSDs:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>zpool create <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  -o <span style="color:#bb60d5">ashift</span><span style="color:#666">=</span><span style="color:#40a070">12</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  srv <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  /dev/disk/by-id/ata-Samsung_SSD_870_QVO_8TB_S5SSNF0TC06121Z <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  /dev/disk/by-id/ata-Samsung_SSD_870_QVO_8TB_S5SSNF0TC06787P
</span></span></code></pre></div><p>The <code>-o ashift=12</code> ensures <a href="https://wiki.archlinux.org/title/ZFS#Advanced_Format_disks">proper alignment</a> on disks with a sector size of either 512B or 4KB.</p>
<p>On that zpool, we now create our datasets:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#666">(</span><span style="color:#007020">echo</span> -n on-device-secret <span style="color:#666">&amp;&amp;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span> wget -qO - https://autounlock.zekjur.net:8443/nascrypto<span style="color:#666">)</span> | zfs create <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  -o <span style="color:#bb60d5">encryption</span><span style="color:#666">=</span>on <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  -o <span style="color:#bb60d5">compression</span><span style="color:#666">=</span>off <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  -o <span style="color:#bb60d5">atime</span><span style="color:#666">=</span>off <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  -o <span style="color:#bb60d5">keyformat</span><span style="color:#666">=</span>passphrase <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  -o <span style="color:#bb60d5">keylocation</span><span style="color:#666">=</span>file:///dev/stdin <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  srv/data
</span></span></code></pre></div><p>The key I‚Äôm piping into <code>zfs create</code> is constructed from two halves: the on-device secret and the remote secret, which is a setup I‚Äôm using to implement an automated crypto unlock that is remotely revokable. See the next section for the corresponding <code>unlock.service</code>.</p>
<p>I repeated this same command (adjusting the dataset name) for each dataset: I currently have one for <code>data</code> and one for <code>backup</code>, just so that the used disk space of each major use case is separately visible:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>df -h /srv /srv/backup /srv/data   
</span></span><span style="display:flex;"><span>Filesystem      Size  Used Avail Use% Mounted on
</span></span><span style="display:flex;"><span>srv             4,2T  128K  4,2T   1% /srv
</span></span><span style="display:flex;"><span>srv/backup      8,1T  3,9T  4,2T  49% /srv/backup
</span></span><span style="display:flex;"><span>srv/data         11T  6,4T  4,2T  61% /srv/data
</span></span></code></pre></div><h4 id="zfs-maintenance">ZFS maintenance</h4>
<p>To detect errors on your disks, ZFS has a feature called ‚Äúscrubbing‚Äù. I don‚Äôt think I need to scrub more often than monthly, but <a href="https://wiki.archlinux.org/title/ZFS#Scrubbing">maybe your scrubbing requirements are different</a>.</p>
<p>I enabled monthly scrubbing on my zpool <code>srv</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>systemctl <span style="color:#007020">enable</span> --now zfs-scrub-monthly@srv.timer
</span></span></code></pre></div><p>On this machine, a scrub takes a little over 4 hours and keeps the disks busy:</p>
<pre tabindex="0"><code>  scan: scrub in progress since Wed Oct 11 16:32:05 2023
	808G scanned at 909M/s, 735G issued at 827M/s, 10.2T total
	0B repaired, 7.01% done, 03:21:02 to go
</code></pre><p>We can confirm by looking at the Prometheus Node Exporter metrics:</p>















<a href="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/2023-10-11-grafana-scrub.png"><img
  srcset="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/2023-10-11-grafana-scrub_huab242c6c68f4e18b70199053338a4d4f_420340_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/2023-10-11-grafana-scrub_huab242c6c68f4e18b70199053338a4d4f_420340_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2023-10-25-my-all-flash-zfs-network-storage-build/2023-10-11-grafana-scrub_huab242c6c68f4e18b70199053338a4d4f_420340_600x0_resize_box_3.png"
  alt="screenshot of a Grafana dashboard showing Prometheus Node Exporter metrics" title="screenshot of a Grafana dashboard showing Prometheus Node Exporter metrics"
  width="600"
  height="226"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>The other maintenance-related setting I changed is to enable automated TRIM:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>zpool <span style="color:#007020">set</span> <span style="color:#bb60d5">autotrim</span><span style="color:#666">=</span>on srv
</span></span></code></pre></div><h4 id="auto-crypto-unlock">Auto Crypto Unlock</h4>
<p>To automatically unlock the encrypted datasets at boot, I‚Äôm using a custom <code>unlock.service</code> systemd service file.</p>
<p>My <code>unlock.service</code> constructs the crypto key from two halves: the on-device secret and the remote secret that‚Äôs downloaded over HTTPS.</p>
<p>This way, my NAS can boot up automatically, but in an emergency I can remotely stop this mechanism.</p>
<details>
<summary>
My unlock.service
</summary>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-systemd" data-lang="systemd"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Unit]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Description</span><span style="color:#666">=</span><span style="color:#4070a0">unlock hard drive</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Wants</span><span style="color:#666">=</span><span style="color:#4070a0">network.target</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">After</span><span style="color:#666">=</span><span style="color:#4070a0">systemd-networkd-wait-online.service</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Before</span><span style="color:#666">=</span><span style="color:#4070a0">samba.service</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Service]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Type</span><span style="color:#666">=</span><span style="color:#4070a0">oneshot</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">RemainAfterExit</span><span style="color:#666">=</span><span style="color:#4070a0">yes</span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Wait until the host is actually reachable.</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStart</span><span style="color:#666">=</span><span style="color:#4070a0">/bin/sh -c &#34;c=0; while [ $c -lt 5 ]; do /bin/ping6 -n -c 1 autounlock.zekjur.net &amp;&amp; break; c=$((c+1)); sleep 1; done&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStart</span><span style="color:#666">=</span><span style="color:#4070a0">/bin/sh -c &#34;(echo -n secret &amp;&amp; wget --retry-connrefused -qO - https://autounlock.zekjur.net:8443/nascrypto) | zfs load-key srv/data&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStart</span><span style="color:#666">=</span><span style="color:#4070a0">/bin/sh -c &#34;(echo -n secret &amp;&amp; wget --retry-connrefused -qO - https://autounlock.zekjur.net:8443/nascrypto) | zfs load-key srv/backup&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStart</span><span style="color:#666">=</span><span style="color:#4070a0">/bin/sh -c &#34;zfs mount srv/data&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStart</span><span style="color:#666">=</span><span style="color:#4070a0">/bin/sh -c &#34;zfs mount srv/backup&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Install]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">WantedBy</span><span style="color:#666">=</span><span style="color:#4070a0">multi-user.target</span>
</span></span></code></pre></div></details>
<h3 id="backup">Backup</h3>
<p>For the last 10 years, I have been doing my backups using <code>rsync</code>.</p>
<p>Each machine pushes an incremental backup of its entire root file system (and any mounted file systems that should be backed up, too) to the backup destination (storage2/3).</p>
<p>All the machines I‚Äôm backing up run Linux and the <code>ext4</code> file system. I verified that my backup destination file systems support all the features of the backup source file system that I care about, i.e. extended attributes and POSIX ACLs.</p>
<p>The scheduling of backups is done by ‚Äú<a href="https://github.com/stapelberg/zkj-nas-tools/tree/master/dornroeschen">dornr√∂schen</a>‚Äù, a Go program that wakes up the backup sources and destination machines and starts the backup by triggering a command via SSH.</p>
<h4 id="ssh-configuration">SSH configuration</h4>
<p>The backup scheduler establishes an SSH connection to the backup source.</p>
<p>On the backup source, I authorized the scheduler like so, meaning it will run <a href="https://github.com/stapelberg/zkj-nas-tools/blob/master/dornroeschen/backup-remote.pl"><code>/root/backup.pl</code></a> when connecting:</p>
<pre tabindex="0"><code>command=&#34;/root/backup.pl&#34;,no-port-forwarding,no-X11-forwarding ssh-ed25519 AAAAC3Nzainvalidkey backup-scheduler
</code></pre><p>backup.pl runs <code>rsync</code>, which establishes another SSH connection, this time from the backup source to the backup destination.</p>
<p>On the backup destination (storage2/3), I authorize the backup source‚Äôs SSH public key to run <a href="https://manpages.debian.org/rrsync.1"><code>rrsync(1)</code></a>
, a script that only permits running <code>rsync</code> in the specified directory:</p>
<pre tabindex="0"><code>command=&#34;/usr/bin/rrsync /srv/backup/server.zekjur.net&#34;,no-port-forwarding,no-X11-forwarding ssh-ed25519 AAAAC3Nzainvalidkey server.zekjur.net
</code></pre><h4 id="signaling-readiness-after-wake-up">Signaling Readiness after Wake-Up</h4>
<p>I found it easiest to signal readiness by starting an empty HTTP server gated on <code>After=unlock.service</code> in systemd:</p>
<details>
<summary><code>/etc/systemd/system/healthz.service</code></summary>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-systemd" data-lang="systemd"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Unit]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Description</span><span style="color:#666">=</span><span style="color:#4070a0">nginx for /srv health check</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Wants</span><span style="color:#666">=</span><span style="color:#4070a0">network.target</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">After</span><span style="color:#666">=</span><span style="color:#4070a0">unlock.service</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Requires</span><span style="color:#666">=</span><span style="color:#4070a0">unlock.service</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">StartLimitInterval</span><span style="color:#666">=</span><span style="color:#4070a0">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Service]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Restart</span><span style="color:#666">=</span><span style="color:#4070a0">always</span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># https://itectec.com/unixlinux/restarting-systemd-service-on-dependency-failure/</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">/bin/sh -c &#39;systemctl is-active docker.service&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Stay on the same major version in the hope that nginx never decides to break</span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># the config file syntax (or features) without doing a major version bump.</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">/usr/bin/docker pull nginx:1</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">-/usr/bin/docker kill nginx-healthz</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">-/usr/bin/docker rm -f nginx-healthz</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStart</span><span style="color:#666">=</span><span style="color:#4070a0">/usr/bin/docker run </span>\
</span></span><span style="display:flex;"><span><span style="color:#4070a0">  --name nginx-healthz </span>\
</span></span><span style="display:flex;"><span><span style="color:#4070a0">  --publish 10.0.0.253:8200:80 </span>\
</span></span><span style="display:flex;"><span><span style="color:#4070a0">  --log-driver=journald </span>\
</span></span><span style="display:flex;"><span><span style="color:#4070a0">nginx:1</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Install]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">WantedBy</span><span style="color:#666">=</span><span style="color:#4070a0">multi-user.target</span>
</span></span></code></pre></div></details>
<p>My <a href="https://github.com/stapelberg/zkj-nas-tools/blob/master/wake/wake.go"><code>wake</code></a> program then polls that port and returns once the server is up, i.e. the file system has been unlocked and mounted.</p>
<h4 id="auto-shutdown">Auto Shutdown</h4>
<p>Instead of explicitly triggering a shutdown from the scheduler program, I run ‚Äúdramaqueen‚Äù, which shuts down the machine after 10 minutes, but will be inhibited while a backup is running. Optionally, shutting down can be inhibited while there are active samba sessions.</p>
<details>
<summary><code>/etc/systemd/system/dramaqueen.service</code></summary>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-systemd" data-lang="systemd"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Unit]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Description</span><span style="color:#666">=</span><span style="color:#4070a0">dramaqueen</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">After</span><span style="color:#666">=</span><span style="color:#4070a0">docker.service</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Requires</span><span style="color:#666">=</span><span style="color:#4070a0">docker.service</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Service]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">Restart</span><span style="color:#666">=</span><span style="color:#4070a0">always</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">StartLimitInterval</span><span style="color:#666">=</span><span style="color:#4070a0">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Always pull the latest version (bleeding edge).</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">-/usr/bin/docker pull stapelberg/dramaqueen</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">-/usr/bin/docker rm -f dramaqueen</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">/usr/bin/docker create --name dramaqueen stapelberg/dramaqueen</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">/usr/bin/docker cp dramaqueen:/usr/bin/dramaqueen /tmp/</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStartPre</span><span style="color:#666">=</span><span style="color:#4070a0">/usr/bin/docker rm -f dramaqueen</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">ExecStart</span><span style="color:#666">=</span><span style="color:#4070a0">/tmp/dramaqueen -net_command=</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">[Install]</span>
</span></span><span style="display:flex;"><span><span style="color:#4070a0">WantedBy</span><span style="color:#666">=</span><span style="color:#4070a0">multi-user.target</span>
</span></span></code></pre></div></details>
<h4 id="enabling-wake-on-lan">Enabling Wake-on-LAN</h4>
<p>Luckily, the network driver of the onboard network card supports WOL by
default. If that‚Äôs not the case for your network card, see <a href="https://wiki.archlinux.org/title/Wake-on-LAN">the Arch wiki
Wake-on-LAN article</a>.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I have been running a PC-based few-large-disk Network Storage setup for years at this point, and I am very happy with all the properties of the system. I expect to run a very similar setup for years to come.</p>
<p>The low-tech approach to backups of using rsync has worked well ‚Äî without changes ‚Äî for years, and I don‚Äôt see rsync going away anytime soon.</p>
<p>The upgrade to all-flash is really nice in terms of random access time (for incremental backups) and to eliminate one of the largest sources of noise from my builds.</p>
<p>ZFS seems to work fine so far and is well-integrated into Ubuntu Server.</p>
<h4 id="related-options">Related Options</h4>
<p>There are solutions for almost everyone‚Äôs NAS needs. This build obviously hits my personal sweet spot, but your needs and preferences might be different!</p>
<p>Here are a couple of related solutions:</p>
<ul>
<li>If you would like a more integrated solution, you could take a look at <a href="https://www.heise.de/ratgeber/Einplatinencomputer-Odroid-H3-als-NAS-und-Heimserver-einrichten-7496088.html">the Odroid H3 (Celeron)</a>.</li>
<li>If you‚Äôre okay with less compute power, but want more power efficiency, you could use an ARM64-based Single Board Computer.</li>
<li>If you want to buy a commercial solution, buy a device from qnap and fill it with SSD disks.
<ul>
<li>There are even commercial M.2 flash storage devices like the <a href="https://www.jeffgeerling.com/blog/2023/first-look-asustors-new-12-bay-all-m2-nvme-ssd-nas">ASUSTOR Flashstor</a> becoming available! If not for the ‚Äúoff the shelf hardware‚Äù goal of my build, this would probably be the most interesting commercial alternative to me.</li>
</ul>
</li>
<li>If you want more compute power, consider a Thin Client (perhaps used) instead of a Single Board Computer.
<ul>
<li><a href="https://www.servethehome.com/">ServeTheHome</a> has a nice series called Project TinyMiniMicro (<a href="https://www.servethehome.com/introducing-project-tinyminimicro-home-lab-revolution/">introduction</a>, <a href="https://www.servethehome.com/tag/tinyminimicro/">blog posts</a>)</li>
<li>If you‚Äôre a heise+ subscriber, <a href="https://www.heise.de/ratgeber/Schlank-guenstig-stromsparend-NAS-mit-Thin-Client-im-Eigenbau-7546763.html">they have a (German) article about building a NAS from a thin client</a>.</li>
</ul>
</li>
<li>Very similar to thin clients is the Intel NUC (‚ÄúNext Unit of Computing‚Äù): <a href="https://www.golem.de/news/nuc-12-pro-test-mini-kraftpakete-fuers-buero-und-mediacenter-2303-172992.html">(German) article comparing different NUC 12 devices</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Can Dell‚Äôs 6K monitor beat their 8K monitor?]]></title>
    <link href="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/"/>
    <id>https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/</id>
    <published>2023-07-03T20:47:00+02:00</published>
    <content type="html"><![CDATA[<p>For the last 10 years, I have been interested in hi-DPI monitors, and recently I
read about an interesting new monitor: <a href="https://www.dell.com/de-ch/shop/dell-ultrasharp-32-6k-monitor-u3224kba/apd/210-bhnx/monitore-und-monitorzubeh%C3%B6r">Dell‚Äôs 32-inch 6K monitor
(U3224KBA)</a>,
a productivity monitor that offers plenty of modern connectivity options like
DisplayPort 2, HDMI 2 and Thunderbolt 4.</p>
<p>My current monitor is a <a href="/posts/2017-12-11-dell-up3218k/">Dell 32-inch 8K monitor
(UP3218K)</a>, which has a brilliant picture, but
a few annoying connectivity limitations and quirks ‚Äî it needs two (!)
DisplayPort cables on a GPU with MST support, meaning that in practice, it only
works with nVidia graphics cards.</p>
<p>I was curious to try out the new 6K monitor to see if it would improve the
following points:</p>
<ul>
<li>Does the 6K monitor work well with most (all?) of my PCs and laptops?</li>
<li>Is 6K resolution enough, or would I miss the 8K resolution?</li>
<li>Is a matte screen the better option compared to the 8K monitor‚Äôs glossy finish?</li>
<li>Do the built-in peripherals work with Linux out of the box?</li>
</ul>
<p>I read <a href="https://www.heise.de/tests/32-Zoll-Display-mit-6K-und-USB-C-Dock-Dell-UltraSharp-U3224KBA-im-Test-9189751.html">a review on
heise+</a>
(also included in their c&rsquo;t magazine), but the review can‚Äôt answer these
subjective questions of mine.</p>
<p>So I ordered one and tried it out!</p>















<a href="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/IMG_2383_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/IMG_2383_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1638957_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/IMG_2383_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1638957_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/IMG_2383_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1638957_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="compatibility">Compatibility</h2>
<p>The native resolution of this monitor is 6144x3456 pixels.</p>
<p>To drive that resolution at 60 Hz, about 34 Gbps of data rate is needed.</p>
<p>DisplayPort 1.4a only offers a data rate of 25 Gbps, so your hardware and driver
need to support <a href="https://en.wikipedia.org/wiki/Display_Stream_Compression">Display Stream Compression
(DSC)</a> to reach the
full resolution at 60 Hz. I tried using DisplayPort 2.0, which supports 77 Gbps
of data rate, but the only GPU I have that supports DisplayPort 2 is the Intel
A380, which I could not get to work well with this monitor (see the next
section).</p>
<p>HDMI 2.1 offers 42 Gbps of data rate, but in my setup, the link would still
always use DSC.</p>
<p>Here are the combinations I have successfully tried:</p>
<table>
<thead>
<tr>
<th>Device</th>
<th>Cable</th>
<th>OS / Driver</th>
<th>Resolution</th>
</tr>
</thead>
<tbody>
<tr>
<td>MacBook Air M1</td>
<td>TB 3</td>
<td>macOS 13.4.1</td>
<td>native @ 60 Hz,<br> 8.1Gbps</td>
</tr>
<tr>
<td>GeForce RTX 4070<br>(DisplayPort 1.4a)</td>
<td>mDP-DP</td>
<td>Windows 11 21H2</td>
<td>native @ 60 Hz,<br> 12Gbps DSC</td>
</tr>
<tr>
<td>GeForce RTX 4070</td>
<td>mDP-DP</td>
<td>Linux 6.3<br>nVidia 535.54.03</td>
<td>native @ 60 Hz,<br> 8.1Gbps DSC</td>
</tr>
<tr>
<td>GeForce RTX 4070<br>(HDMI 2.1a)</td>
<td>HDMI</td>
<td>Windows 11 21H2</td>
<td>native @ 60 Hz,<br> 8.1Gbps DSC</td>
</tr>
<tr>
<td>GeForce RTX 4070</td>
<td>HDMI</td>
<td>Linux 6.3<br>nVidia 535.54.03</td>
<td>native @ 60 Hz,<br> 6Gbps 3CH DSC</td>
</tr>
<tr>
<td>GeForce RTX 3060</td>
<td>HDMI</td>
<td>Linux 6.3<br>nVidia 535.54.03</td>
<td>native @ 60 Hz,<br> 6Gbps 3CH DSC</td>
</tr>
<tr>
<td>ThinkPad X1 Extreme</td>
<td>TB 4</td>
<td>Linux 6.3<br>nVidia 535.54.03</td>
<td>native @ 60 Hz,<br> 8.1Gbps DSC</td>
</tr>
</tbody>
</table>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note:</strong> on the ThinkPad X1 Extreme, I had to <a href="https://docs.fedoraproject.org/en-US/quick-docs/how-to-set-nvidia-as-primary-gpu-on-optimus-based-laptops/">set the nVidia GPU as primary
GPU</a>. When
the nVidia GPU is available, but routed through the Intel GPU, the native
resolution can be configured, but without hardware acceleration applications
like Chrome or Firefox are unusably slow.</div>
  </div>
</aside>

<p>The MacBook Air is the only device in my test that reaches full resolution
without using DSC.</p>
<h2 id="compatibility-issues">Compatibility issues</h2>
<p>Let‚Äôs talk about the combinations that did not work well.</p>
<h3 id="too-old-nvidia-driver--5355403-not-at-native-resolution">Too old nVidia driver (&lt; 535.54.03): not at native resolution</h3>
<p>You need a quite recent version of the nVidia driver, as they <strong>just recently</strong>
<a href="https://github.com/NVIDIA/open-gpu-kernel-modules/discussions/238">shipped support for
DSC</a> at high
resolutions. I successfully used DSC with 535.54.03.</p>
<p>With the ‚Äúolder‚Äù 530.41.03, I could only select 6016x3384 at 60 Hz, which is not
the native resolution of 6144x3456 at 60 Hz.</p>
<table>
<thead>
<tr>
<th>Device</th>
<th>Cable</th>
<th>OS / Driver</th>
<th>Resolution</th>
</tr>
</thead>
<tbody>
<tr>
<td>GeForce RTX 4070<br>(DisplayPort 1.4a)</td>
<td>mDP-DP</td>
<td>Linux 6.3<br>nVidia 530.41.03</td>
<td>native @ 30 Hz only,<br> 6016x3384@60</td>
</tr>
<tr>
<td>GeForce RTX 4070<br>(HDMI 2.1a)</td>
<td>HDMI</td>
<td>Linux 6.3<br>nVidia 530.41.03</td>
<td>native @ 30 Hz only,<br> 6016x3384@60</td>
</tr>
</tbody>
</table>
<h3 id="intel-gpu-no-picture-or-only-4k">Intel GPU: no picture or only 4K?!</h3>
<p>I was so excited when Intel announced that they are entering the graphics card
business. With all the experience and driver support for their integrated
graphics, I hoped for good Linux support.</p>
<p>Unfortunately, the Intel A380 I bought months ago continues to disappoint.</p>
<p>I could not get the 6K monitor to work at any resolution higher than 4K, not
even under Windows. Worse, when connecting the monitor using DisplayPort, I
wouldn‚Äôt get a picture at all (in Linux)!</p>
<table>
<thead>
<tr>
<th>Device</th>
<th>Cable</th>
<th>OS / Driver</th>
<th>Resolution</th>
</tr>
</thead>
<tbody>
<tr>
<td>ASRock Intel A380<br>(DisplayPort 2.0)</td>
<td>mDP-DP</td>
<td>Windows 11 21H2<br>Intel 31.0.101.4502</td>
<td>only 4K @ 60 Hz</td>
</tr>
<tr>
<td>ASRock Intel A380<br>(HDMI 2.0b)</td>
<td>HDMI</td>
<td>Windows 11 21H2<br>Intel 31.0.101.4502</td>
<td>only 4K @ 60 Hz</td>
</tr>
<tr>
<td>ASRock Intel A380<br>(DisplayPort 2.0)</td>
<td>mDP-DP</td>
<td>Linux 6.4</td>
<td>no picture in Xorg!</td>
</tr>
<tr>
<td>ASRock Intel A380<br>(HDMI 2.0b)</td>
<td>HDMI</td>
<td>Linux 6.4</td>
<td>only 4K @ 60 Hz</td>
</tr>
</tbody>
</table>
<h3 id="resume">No picture after resume from suspend-to-RAM</h3>
<p>I suspend my PC to RAM at least once per day, sometimes even more often.</p>
<p>With my current 8K monitor, I have nailed the suspend/wakeup procedure. With the
help of a smart plug, I‚Äôm automatically turning the monitor off (on suspend) and
on (on wakeup). After a couple of seconds of delay, I configure the correct
resolution using <code>xrandr</code>.</p>
<p>I had hoped that the 6K monitor would make any sort of intricate automation
superfluous.</p>
<p>Unfortunately, when I resumed my PC, I noticed that the monitor would not show a
picture at all! I had to log in from my laptop via SSH to change the resolution
with <code>xrandr</code> to 4K, then power the monitor off and on again, then change
resolution back to the native 6K.</p>
<h2 id="scaling">Scaling</h2>
<p>Once you have a physical connection established, how do you configure your
computer? With 6K at 32 inches, you‚Äôll need to enable some kind of scaling in
order to comfortably read text.</p>
<p>This section shows what options Linux and macOS offer.</p>
<h3 id="i3-x11">i3 (X11)</h3>
<p>Just like many other programs on Linux, you configure i3‚Äôs scaling by <a href="https://wiki.archlinux.org/title/HiDPI#X_Resources">setting
the <code>Xft.dpi</code> X
resource</a>. The default is 96
dpi, so to get 200% scaling, set <code>Xft.dpi: 192</code>.</p>
<p>Personally, I found 240% scaling more comfortable, i.e. <code>Xft.dpi: 230</code>.</p>
<p>This corresponds to a logical resolution of 2560x1440 pixels.</p>
<h3 id="gnome-wayland">GNOME (Wayland)</h3>
<p>I figured I‚Äôd also give Wayland a shot, so I ran GNOME in Fedora 38 on my
ThinkPad X1 Extreme.</p>
<p>Here‚Äôs what the settings app shows in its ‚ÄúDisplays‚Äù tab:</p>















<a href="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/Screenshot%20from%202023-07-02%2012-25-57.png"><img
  srcset="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/Screenshot%20from%202023-07-02%2012-25-57_hu2cabb68d8c47fd27ed6a38a3c2c68dd8_125601_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/Screenshot%20from%202023-07-02%2012-25-57_hu2cabb68d8c47fd27ed6a38a3c2c68dd8_125601_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/Screenshot%20from%202023-07-02%2012-25-57_hu2cabb68d8c47fd27ed6a38a3c2c68dd8_125601_600x0_resize_box_3.png"
  
  width="600"
  height="415"
  style="

border: 0;

"
  
  loading="lazy"></a>



<p>I tried <a href="https://www.omglinux.com/how-to-enable-fractional-scaling-fedora/">enabling fractional
scaling</a>, but
then GNOME froze until I disconnected the Dell monitor.</p>
<h3 id="macos">macOS</h3>
<p>When connecting the monitor to my MacBook Air M1 (2020), it defaults to a
logical resolution of 3072x1728, i.e. 200% scaling.</p>















<a href="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/2023-07-02-macOS-displays.png"><img
  srcset="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/2023-07-02-macOS-displays_hubf6579ec96f99144ce4f6a52859f99df_573205_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/2023-07-02-macOS-displays_hubf6579ec96f99144ce4f6a52859f99df_573205_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2023-07-03-dell-u3224kba-32-inch-6k-monitor/2023-07-02-macOS-displays_hubf6579ec96f99144ce4f6a52859f99df_573205_600x0_resize_box_3.png"
  
  width="600"
  height="617"
  style="

border: 0;

"
  
  loading="lazy"></a>



<p>For comparison, with <a href="https://www.apple.com/studio-display/">Apple‚Äôs (5K) Studio
Display</a>, the default setting is
2560x1440 (200% scaling), or 2880x1620 (‚ÄúMore Space‚Äù, 177% scaling).</p>
<h2 id="observations">Observations</h2>
<h3 id="matte-screen">Matte screen</h3>
<p>I remember the uproar when Lenovo introduced ThinkPads with glossy screens. At
the time, I thought I prefer matte screens, but over the years, I heard that
glossy screens are getting better and better, and consumers typically prefer
them for their better picture quality.</p>
<p>The 8K monitor I‚Äôm using has a glossy screen on which reflections are quite
visible. The MacBook Air‚Äôs screen shows fewer reflections in comparison.</p>
<p>Dell‚Äôs 6K monitor offers me a nice opportunity to see which option I prefer.</p>
<p>Surprisingly, I found that I don‚Äôt like the matte screen better!</p>
<p>It‚Äôs hard to describe, but somehow the picture seems more ‚Äúdull‚Äù, or less bright
(independent of the actual brightness of the monitor), or more toned down. The
colors don‚Äôt pop as much.</p>
<h3 id="philosophical-question-peripherals-powered-on-by-default">Philosophical question: peripherals powered on by default?</h3>
<p>One thing that I did not anticipate beforehand is the difference in how
peripherals are treated when they are built into the monitor vs. when they are
plugged into a USB hub.</p>
<p>I like to have my peripherals off-by-default, with ‚Äúon‚Äù being the exceptional
state. In fact, I leave my microphone disconnected and only plug its USB cable
in when I need it. I also recently realized that I want sound to only be played
on headphones, so I disconnected my normal speakers in favor of my Bluetooth
dongle.</p>
<p>The 6K monitor, on the other hand, has all of its peripherals on-by-default, and
bright red LEDs light up when the speaker or microphone is muted.</p>
<p>This is the opposite of how I want my peripherals to behave, but of course I
understand why Dell developed the monitor with on-by-default peripherals.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Let‚Äôs go back to the questions I started the article with and answer them one by one:</p>
<ol>
<li>
<p>Does the 6K monitor work well with most (all?) of my PCs and laptops?</p>
<p>‚Üí <strong>Answer:</strong> The 6K monitor works a lot better than the 8K monitor, but that‚Äôs a
low bar to clear. I would still call the 6K monitor finicky. Even when you
run a latest-gen GPU with latest drivers, the monitor does not reliably show
a picture after a suspend/resume cycle.</p>
</li>
<li>
<p>Is 6K resolution enough, or would I miss the 8K resolution?</p>
<p>‚Üí <strong>Answer:</strong> I had really hoped that 6K would turn out to be enough, but the
difference to 8K is visible with the bare eye. Just like 200% scaling is a
nice step up from working at 96 dpi, 300% scaling (what I use on 8K) is
another noticeable step up.</p>
</li>
<li>
<p>Is a matte screen the better option compared to the 8K monitor‚Äôs glossy finish?</p>
<p>‚Üí <strong>Answer:</strong> While I don‚Äôt like the reflections in Dell‚Äôs 8K monitor, the
picture quality is undeniably better compared to a matte screen. The 6K
monitor just doesn‚Äôt look as good, and it‚Äôs not just about the difference in
text sharpness.</p>
</li>
<li>
<p>Do the built-in peripherals work with Linux out of the box?</p>
<p>‚Üí <strong>Answer:</strong> Yes, as far as I can tell. The webcam works fine with the
generic <code>uvcvideo</code> USB webcam driver, the microphone and speakers work out of
the box. I have not tested the presence sensor.</p>
</li>
</ol>
<p>So, would I recommend the monitor? Depends on what you‚Äôre using as your current
monitor and as the device you want to connect!</p>
<p>If you‚Äôre coming from a 4K display, the 6K resolution will be a nice step
up. Connecting a MacBook Air M1 or newer is a great experience. If you want to
connect PCs, be sure to use a new-enough nVidia GPU with latest drivers. Even
under these ideal conditions, you might run into quirks like the <a href="#resume">no picture
after resume</a> problem. If you don‚Äôt mind early adopter pains like that,
and are looking for a monitor that includes peripherals, go for it!</p>
<p>For me, switching from my 8K monitor would be a downgrade without enough
benefits.</p>
<p>The ideal monitor for me would be a mixture between Dell‚Äôs 8K and 6K models:</p>
<ul>
<li>8K resolution
<ul>
<li>‚Ä¶but with more modern connectivity options (one cable! works out of the box!).</li>
</ul>
</li>
<li>without built-in peripherals like webcam, microphone and speaker
<ul>
<li>‚Ä¶but with the USB KVM switch concept (monitor input coupled to USB upstream).</li>
</ul>
</li>
<li>glossy finish for best picture quality
<ul>
<li>‚Ä¶but with fewer reflections.</li>
</ul>
</li>
</ul>
<p>Maybe they‚Äôll develop an updated version of the 8K monitor at some point?</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[DIY out-of-band management: remote power button]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/"/>
    <id>https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/</id>
    <published>2022-10-09T16:27:00+02:00</published>
    <content type="html"><![CDATA[<p>I was pleasantly surprised by how easy it was to make it possible to push a PC‚Äôs
power button remotely via MQTT by wiring up an ESP32 microcontroller, a MOSFET,
a resistor, and a few jumper wires.</p>
<p>While a commercial solution like IPMI offers many more features like remote
serial, or remote image mounting, this DIY solution feels really magical, and
has great price performance if all you need is power management.</p>















<a href="https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/IMG_1085_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/IMG_1085_featured_huf7f7db33074cb268ff172c7a33b2b9a7_1568716_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/IMG_1085_featured_huf7f7db33074cb268ff172c7a33b2b9a7_1568716_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/IMG_1085_featured_huf7f7db33074cb268ff172c7a33b2b9a7_1568716_600x0_resize_q75_box.jpg"
  alt="The inside of a PC case, where an ESP32 micro controller on an Adafruit Perma-Proto bread board is mounted inside the case and wired up to the mainboard with jumper wires for remote power control" title="The inside of a PC case, where an ESP32 micro controller on an Adafruit Perma-Proto bread board is mounted inside the case and wired up to the mainboard with jumper wires for remote power control"
  width="600"
  height="450"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="motivation">Motivation</h2>
<p>To save power, I want to shut down my <a href="/posts/2019-10-23-nas/">network storage PC</a> when it isn‚Äôt currently needed.</p>
<p>For this plan to work out, my daily backup automation needs to be able to turn on the network storage PC, and power it back off when done.</p>
<p>Usually, I implement that via <a href="https://en.wikipedia.org/wiki/Wake-on-LAN">Wake On LAN
(WOL)</a>. But, for this particular
machine, I don‚Äôt have an ethernet network link, I only <a href="/posts/2020-08-09-fiber-link-home-network/">have a fiber
link</a>. Unfortunately, it seems like
none of the 3 different 10 Gbit/s network cards I tested has functioning Wake On
LAN, and when I asked on Twitter, none of my followers had ever seen functioning
WOL on any 10 Gbit/s card. I suppose it‚Äôs not a priority for the typical target
audience of these network cards, which go into always-on servers.</p>
<p>I didn‚Äôt want to run an extra 10 Gbit/s switch just for WOL over an ethernet
connection, because switches like the MikroTik CRS305-1G-4S+IN consume at least
10W. As the network storage PC only consumes about 20W overall, I wanted a more
power-efficient option.</p>
<h2 id="hardware-and-wiring">Hardware and Wiring</h2>
<p>The core of this DIY remote power button is a WiFi-enabled micro controller such
as the ESP32. To power the micro controller, I use the 5V standby power on the
mainboard‚Äôs USB 2.0 pin headers, which is also available when the PC is turned
off and only the power supply (PSU) is turned on. A micro controller with an
on-board 5V voltage regulator is convenient for this.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">I verified the 5V standby power with a multimeter in DC power measurement
mode. Some embedded machines don‚Äôt have always-on 5V standby power, even if they
use an ATX power supply!</div>
  </div>
</aside>

<p>Aside from the micro controller, we also need a transistor or logic-level MOSFET
to simulate a push of the power button, and a resistor to control the
transistor. An opto coupler is not needed, since the ESP32 is powered from the
mainboard, not from a separate power supply.</p>
<p>The mainboard‚Äôs front panel header contains a <code>POWERBTN#</code> signal (3.3V), and a
<code>GND</code> signal. When connecting a typical PC case power button to the header, you
don‚Äôt need to pay attention to the polarity. This is because the power button
just physically connects the two signals.</p>
<p>In our case, the polarity matters, because we need the 3.3V on the transistor‚Äôs
drain pin, otherwise we won‚Äôt be able to control the transistor via its base
pin. The <code>POWERBTN#</code> 3.3V signal is typically labeled <code>+</code> on the mainboard (or
in the manual), whereas <code>GND</code> is labeled <code>-</code>. If you are unsure, double-check
the voltage using a multimeter.</p>
<h2 id="bill-of-materials">Bill of Materials</h2>
<ul>
<li>WiFi-enabled microcontroller with 5V power input, e.g. the <a href="https://docs.platformio.org/en/latest/boards/espressif32/pico32.html#board-espressif32-pico32">Espressif ESP32
Pico
Kit</a></li>
<li>transistor or logic-level MOSFET for working with 3.3V, e.g. <a href="https://www.digikey.com/en/products/detail/onsemi/2N7000/244278">2N7000
(‚Üídigikey)</a></li>
<li>1K resistor for controlling the transistor,
e.g. <a href="https://www.digikey.com/en/products/detail/stackpole-electronics-inc/CF14JT1K00/1741314">CF14JT1K00</a></li>
<li>a bread board and/or case for mounting, e.g. <a href="https://www.adafruit.com/product/571">Adafruit
Perma-Proto</a>.</li>
</ul>
<h2 id="schematic">Schematic</h2>
<p><a href="2022-10-08-remote-power-button.svg"><img src="2022-10-08-remote-power-button.svg" width="100%"></a></p>
<h2 id="software-esphome">Software: ESPHome</h2>
<p>I wanted a quick solution (with ideally no custom firmware development) and was
already familiar with <a href="https://esphome.io/">ESPHome</a>, which turns out to very
easily implement the functionality I wanted :)</p>
<p>In addition to a standard ESPHome configuration, I have added the following
lines to make the GPIO pin available through MQTT, and make it a momentary
switch instead of a toggle switch, so that it briefly presses the power button
and doesn‚Äôt hold the power button:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#062873;font-weight:bold">switch</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span>- <span style="color:#062873;font-weight:bold">platform</span>:<span style="color:#bbb"> </span>gpio<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">pin</span>:<span style="color:#bbb"> </span><span style="color:#40a070">25</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">id</span>:<span style="color:#bbb"> </span>powerbtn<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">name</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;powerbtn&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">restore_mode</span>:<span style="color:#bbb"> </span>ALWAYS_OFF<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">on_turn_on</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span>- <span style="color:#062873;font-weight:bold">delay</span>:<span style="color:#bbb"> </span>500ms<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span>- <span style="color:#062873;font-weight:bold">switch.turn_off</span>:<span style="color:#bbb"> </span>powerbtn<span style="color:#bbb">
</span></span></span></code></pre></div><p>I have elided the full configuration for brevity, but you can click here to see it:</p>
<details>
<summary>full ESPHome YAML configuration</summary>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#062873;font-weight:bold">esphome</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">name</span>:<span style="color:#bbb"> </span>poweresp<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">esp32</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">board</span>:<span style="color:#bbb"> </span>pico32<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">framework</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">type</span>:<span style="color:#bbb"> </span>arduino<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#60a0b0;font-style:italic"># Enable logging</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">logger</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">mqtt</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">broker</span>:<span style="color:#bbb"> </span><span style="color:#40a070">10.0.0.54</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">ota</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">password</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">wifi</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">ssid</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;essid&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">password</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;secret&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#60a0b0;font-style:italic"># Enable fallback hotspot (captive portal) in case wifi connection fails</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">ap</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">ssid</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;Poweresp Fallback Hotspot&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">password</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;secret2&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">captive_portal</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">switch</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span>- <span style="color:#062873;font-weight:bold">platform</span>:<span style="color:#bbb"> </span>gpio<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">pin</span>:<span style="color:#bbb"> </span><span style="color:#40a070">25</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">id</span>:<span style="color:#bbb"> </span>powerbtn<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">name</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;powerbtn&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">restore_mode</span>:<span style="color:#bbb"> </span>ALWAYS_OFF<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">on_turn_on</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span>- <span style="color:#062873;font-weight:bold">delay</span>:<span style="color:#bbb"> </span>500ms<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span>- <span style="color:#062873;font-weight:bold">switch.turn_off</span>:<span style="color:#bbb"> </span>powerbtn<span style="color:#bbb">
</span></span></span></code></pre></div></details>
<p>For the first flash, I used:</p>
<pre tabindex="0"><code>docker run --rm \
  -v &#34;${PWD}&#34;:/config \
  --device=/dev/ttyUSB0 \
  -it \
  esphome/esphome \
    run poweresp.yaml
</code></pre><p>To update over the network after making changes (serial connection no longer needed), I used:</p>
<pre tabindex="0"><code>docker run --rm \
  -v &#34;${PWD}&#34;:/config \
  -it \
  esphome/esphome \
    run poweresp.yaml
</code></pre><p>In case you want to learn more about the relevant ESPHome concepts, here are a
few pointers:</p>
<ul>
<li><a href="https://esphome.io/components/wifi.html">https://esphome.io/components/wifi.html</a> might need to set <code>use_address</code></li>
<li><a href="https://esphome.io/components/switch/index.html">https://esphome.io/components/switch/index.html</a>
<ul>
<li>and <a href="https://esphome.io/components/switch/gpio.html">https://esphome.io/components/switch/gpio.html</a></li>
</ul>
</li>
<li><a href="https://esphome.io/components/mqtt.html">https://esphome.io/components/mqtt.html</a></li>
</ul>
<h2 id="integration-into-automation">Integration into automation</h2>
<p>To push the power button remotely from Go, I‚Äôm using the following code:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">pushMainboardPower</span>(mqttBroker, clientID <span style="color:#902000">string</span>) <span style="color:#902000">error</span> {
</span></span><span style="display:flex;"><span>	opts <span style="color:#666">:=</span> mqtt.<span style="color:#06287e">NewClientOptions</span>().<span style="color:#06287e">AddBroker</span>(mqttBroker)
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> hostname, err <span style="color:#666">:=</span> os.<span style="color:#06287e">Hostname</span>(); err <span style="color:#666">==</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		clientID <span style="color:#666">+=</span> <span style="color:#4070a0">&#34;@&#34;</span> <span style="color:#666">+</span> hostname
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	opts.<span style="color:#06287e">SetClientID</span>(clientID)
</span></span><span style="display:flex;"><span>	opts.<span style="color:#06287e">SetConnectRetry</span>(<span style="color:#007020;font-weight:bold">true</span>)
</span></span><span style="display:flex;"><span>	mqttClient <span style="color:#666">:=</span> mqtt.<span style="color:#06287e">NewClient</span>(opts)
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> token <span style="color:#666">:=</span> mqttClient.<span style="color:#06287e">Connect</span>(); token.<span style="color:#06287e">Wait</span>() <span style="color:#666">&amp;&amp;</span> token.<span style="color:#06287e">Error</span>() <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">return</span> fmt.<span style="color:#06287e">Errorf</span>(<span style="color:#4070a0">&#34;connecting to MQTT: %v&#34;</span>, token.<span style="color:#06287e">Error</span>())
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">const</span> topic = <span style="color:#4070a0">&#34;poweresp/switch/powerbtn/command&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">const</span> qos = <span style="color:#40a070">0</span> <span style="color:#60a0b0;font-style:italic">// at most once (no re-transmissions)
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	<span style="color:#007020;font-weight:bold">const</span> retained = <span style="color:#007020;font-weight:bold">false</span>
</span></span><span style="display:flex;"><span>	token <span style="color:#666">:=</span> mqttClient.<span style="color:#06287e">Publish</span>(topic, qos, retained, <span style="color:#007020">string</span>(<span style="color:#4070a0">&#34;on&#34;</span>))
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> token.<span style="color:#06287e">Wait</span>() <span style="color:#666">&amp;&amp;</span> token.<span style="color:#06287e">Error</span>() <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">return</span> fmt.<span style="color:#06287e">Errorf</span>(<span style="color:#4070a0">&#34;publishing to MQTT: %v&#34;</span>, token.<span style="color:#06287e">Error</span>())
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020;font-weight:bold">nil</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="conclusion">Conclusion</h2>
<p>I hope this small project write-up is useful to others in a similar situation!</p>
<p>If you need more features than that, check out the next step on the feature and
complexity ladder: <a href="https://pikvm.org/">PiKVM</a> or
<a href="https://tinypilotkvm.com/">TinyPilot</a>. See also <a href="https://www.jeffgeerling.com/blog/2021/raspberry-pi-kvms-compared-tinypilot-and-pi-kvm-v3">this comparison by Jeff
Geerling</a>.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[DIY out-of-band management: remote console server]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/"/>
    <id>https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/</id>
    <published>2022-08-27T14:40:00+02:00</published>
    <content type="html"><![CDATA[<p>For the guest WiFi at an event that eventually fell through, we wanted to tunnel
all the traffic through my internet connection via my home router.</p>
<p>Because the event is located in another country, many hours of travel away,
there are a couple of scenarios where remote control of my home router can be a
life-saver. For example, should my home router crash, remotely turning power off
and on again gets the event back online.</p>
<p>But, power-cycling a machine is a pretty big hammer. For some cases, like
locking yourself out with a configuration mistake, a more precise tool like a
remote serial console might be nicer.</p>
<p>In this article, I‚Äôll present two cheap and pragmatic DIY out-of-band management
solutions that I have experimented with in the last couple of weeks and wanted
to share:</p>
<ul>
<li><a href="#power-only">Variant 1: Remote Power Management only</a></li>
<li><a href="#remote-console">Variant 2: a full Remote Console Server</a></li>
</ul>
<p>You can easily start with the first variant and upgrade it into the second
variant later.</p>
<h2 id="power-only">Variant 1: Remote Power Management</h2>
<h3 id="architecture-diagram">Architecture Diagram</h3>
<p>Here is the architecture of the system at a glance. The right-hand side is the
existing router I want to control, the left-hand side shows the out of band
management system:</p>




<a href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/2022-07-02-power-mgmt-architecture.svg"><img
  src="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/2022-07-02-power-mgmt-architecture.svg"
  
  style="

border: 1px solid #000;

margin-right: 1rem"
  
  loading="lazy"></a>


<p>Let‚Äôs go through the hardware components from top to bottom.</p>
<h3 id="hardware-4g-wifi-router-out-of-band-network">Hardware: 4G WiFi Router (Out Of Band Network)</h3>
<p>The easiest way to have another network connection for projects like this one is
the <a href="https://www.digitec.ch/en/s1/product/digitec-iot-test-sim-card-data-flat-30-days-unlimited-10-mbits-sim-card-11689214?supplier=406802">digitec iot
subscription</a>. They
offer various different options, and their cheapest one, a 0.4 Mbps flatrate for
4 CHF per month, is sufficient for our use-case.</p>
<p>A convenient way of making the digitec iot subscription available to other
devices is to use a mobile WiFi router such as the <a href="https://www.digitec.ch/en/s1/product/tp-link-m7350-routers-5615329?supplier=406802">TP-Link M7350 4G/LTE Mobile
Wi-Fi
router</a>
(68 CHF). You can power it via USB, and it has a built-in battery that will last
for a few hours.</p>















<a href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0484.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0484_hu855bbe0a9c47ac557e5b09db74fa3b06_1361683_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0484_hu855bbe0a9c47ac557e5b09db74fa3b06_1361683_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0484_hu855bbe0a9c47ac557e5b09db74fa3b06_1361683_600x0_resize_q75_box.jpg"
  alt="TP-Link M7350 4G/LTE Mobile Wi-Fi router connected to digitec iot" title="TP-Link M7350 4G/LTE Mobile Wi-Fi router connected to digitec iot"
  width="600"
  height="450"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>By default, the device turns itself off after a while when it thinks it is
unused, which is undesired for us ‚Äî if the smart plug drops out of the WiFi, we
don‚Äôt want the whole system to go offline. You can turn off this behavior in the
web interface under <code>Advanced ‚Üí Power Saving ‚Üí Power Saving Mode</code>.</p>
<h3 id="hardware-wifi-smart-plug">Hardware: WiFi Smart Plug</h3>
<p>With the out of band network connection established, all you need to remotely
toggle power is a smart plug such as the <a href="https://itead.cc/product/sonoff-s26-wifi-smart-plug/">Sonoff S26 WiFi Smart
Plug</a>.</p>
<p>The simplest setup is to connect the Smart Plug to the 4G router via WiFi, and
control it using Sonoff‚Äôs mobile app via Sonoff‚Äôs cloud.</p>
<h4 id="non-cloud-solution">Non-cloud solution</h4>
<p>Alternatively, if you want to avoid the Sonoff cloud, the device comes with a
‚ÄúDIY mode‚Äù, but <a href="https://twitter.com/zekjur/status/1321949087160258562">the DIY mode wouldn‚Äôt work reliably for
me</a> when I tried
it. Instead, I flashed the <a href="https://tasmota.github.io/docs/">Open Source Tasmota
firmware</a> and connected it to a self-hosted
MQTT server via the internet.</p>
<p>Of course, now your self-hosted MQTT server is a single point of failure, but
perhaps you prefer that over the Sonoff cloud being a single point of failure.</p>
<h2 id="remote-console">Variant 2: Remote Console Server</h2>
<p>Turning power off and on remotely is a great start, but what if you need actual
remote access to a system? In my case, I‚Äôm using a <a href="https://en.wikipedia.org/wiki/Serial_port">serial
port</a> to see log messages and run a
shell on my router. This is also called a ‚Äúserial console‚Äù, and any device that
allows accessing a serial console without sitting physically in front of the
serial port is called a ‚Äúremote console server‚Äù.</p>
<p>Commercially available remote console servers typically offer lots of ports (up
to 48) and cost lots of money (many thousand dollars or equivalent), because
their target application is to be installed in a rack full of machines in a lab
or data center. A few years ago, I built
<a href="https://freetserv.github.io/">freetserv</a>, an open source, open hardware
solution for this problem.</p>
<p>For the use-case at hand, we only need a single serial console, so we‚Äôll do it
with a Raspberry Pi.</p>
<h3 id="architecture-diagram-1">Architecture Diagram</h3>
<p>The architecture for this variant looks similar to the other variant, but adds
the <em>consrv</em> Raspberry Pi Zero 2 W and a USB-to-serial adapter:</p>




<a href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/2022-06-19-consrv_architecture.svg"><img
  src="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/2022-06-19-consrv_architecture.svg"
  
  style="

border: 1px solid #000;

margin-right: 1rem"
  
  loading="lazy"></a>


<h3 id="hardware-raspberry-pi-zero-2-w">Hardware: Raspberry Pi Zero 2 W</h3>
<p>We‚Äôll use a <a href="https://www.raspberrypi.com/products/raspberry-pi-zero-2-w/">Raspberry Pi Zero 2
W</a> as our console
server. While the device is a little slower than a Raspberry Pi 3 B, it is still
plenty fast enough for providing a serial console, and it only consumes 0.8W of
power (see <a href="https://gokrazy.org/platforms/">gokrazy ‚Üí Supported platforms</a> for
a comparison):</p>















<a href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0767_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0767_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_860347_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0767_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_860347_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0767_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_860347_600x0_resize_q75_box.jpg"
  alt="Raspberry Pi Zero 2 W with USB hub, ethernet and serial" title="Raspberry Pi Zero 2 W with USB hub, ethernet and serial"
  width="600"
  height="600"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>If the Pi Zero 2 W is not available, you can try using any other <a href="https://gokrazy.org/platforms/">Raspberry Pi
supported by gokrazy</a>, or even an older Pi Zero
with the <a href="https://gokrazy.org/platforms/#community-supported-raspberry-pi-os-32-bit-kernelfirmware">community-supported Pi OS 32-bit
kernel</a>
(I didn‚Äôt test that).</p>
<p>Our Pi will have at least two tasks:</p>
<ol>
<li>With a USB-to-serial adapter, the Pi will provide a serial console.</li>
<li>The Pi will run <a href="https://tailscale.com/">Tailscale</a> mesh networking, which
will transparently use either the wired network or fail over to the Out Of
Band network. Tailscale also frees us from setting up port forwardings,
dynamic DNS or anything like that.</li>
<li>Optionally, the Pi can run a local MQTT server if you want to avoid the
Sonoff cloud.</li>
</ol>
<h3 id="hardware-usb-to-serial-adapter">Hardware: USB-to-serial adapter</h3>
<p>You can use any USB-to-serial adapter supported by Linux. Personally, I like the
<a href="https://www.adafruit.com/product/2264">Adafruit FT232H adapter</a>, which I like
to <a href="https://twitter.com/zekjur/status/1256879027266224128">re-program with FTDI‚Äôs FT_Prog so that it has a unique serial
number</a>.</p>
<p>In my router, I plugged in an <a href="https://twitter.com/zekjur/status/1443461234930634755">Longshine LCS-6321M serial PCIe
card</a> to add a serial
port. Before you ask: no, <a href="https://twitter.com/zekjur/status/1439612800561819649">using USB serial consoles for the kernel
console</a> does not cut it.</p>
<h3 id="hardware-usb-ethernet-adapter">Hardware: USB ethernet adapter</h3>
<p>Because we not only want this Raspberry Pi to be available via the Out Of Band
network (via WiFi), but also on the regular home network, we need a USB ethernet
adapter.</p>
<p>Originally I was going to use the Waveshare ETH-USB-HUB-BOX: Ethernet / USB HUB
BOX for Raspberry Pi Zero Series, but it <a href="https://twitter.com/zekjur/status/1538582804224782337">turned out to be
unreliable</a>.</p>
<p>Instead, I‚Äôm now connecting a USB hub (as the Pi Zero 2 W has only one USB
port), a <a href="https://www.linksys.com/support-product?sku=USB3GIG">Linksys USB3GIG</a>
network adapter I had lying around, and my USB-to-serial adapter.</p>
<h3 id="gokrazy-setup">gokrazy setup</h3>
<p>Just like in the <a href="https://gokrazy.org/quickstart/">gokrazy quickstart</a>, we‚Äôre
going to create a directory for this gokrazy instance:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#bb60d5">INSTANCE</span><span style="color:#666">=</span>gokrazy/consrv
</span></span><span style="display:flex;"><span>mkdir -p ~/<span style="color:#70a0d0">${</span><span style="color:#bb60d5">INSTANCE</span>?<span style="color:#70a0d0">}</span>
</span></span><span style="display:flex;"><span><span style="color:#007020">cd</span> ~/<span style="color:#70a0d0">${</span><span style="color:#bb60d5">INSTANCE</span>?<span style="color:#70a0d0">}</span>
</span></span><span style="display:flex;"><span>go mod init consrv
</span></span></code></pre></div><p>You could now directly run <code>gokr-packer</code>, but personally, I like putting the
<code>gokr-packer</code> command into a
<a href="https://en.wikipedia.org/wiki/Make_(software)#Makefile"><code>Makefile</code></a> right away:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-makefile" data-lang="makefile"><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># The consrv hostname resolves to the device‚Äôs Tailscale IP address,
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># once Tailscale is set up.
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span><span style="color:#bb60d5">PACKER</span> <span style="color:#666">:=</span> gokr-packer -hostname<span style="color:#666">=</span>consrv
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#bb60d5">PKGS</span> <span style="color:#666">:=</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/breakglass <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/timestamps <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/serial-busybox <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/stat/cmd/gokr-webstat <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/stat/cmd/gokr-stat <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/mkfs <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/wifi <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	tailscale.com/cmd/tailscaled <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	tailscale.com/cmd/tailscale <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/mdlayher/consrv/cmd/consrv
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#06287e">all</span><span style="color:#666">:</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#06287e">.PHONY</span><span style="color:#666">:</span> update overwrite
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#06287e">update</span><span style="color:#666">:</span>
</span></span><span style="display:flex;"><span>	<span style="color:#70a0d0">${</span><span style="color:#bb60d5">PACKER</span><span style="color:#70a0d0">}</span> -update<span style="color:#666">=</span>yes <span style="color:#70a0d0">${</span><span style="color:#bb60d5">PKGS</span><span style="color:#70a0d0">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#06287e">overwrite</span><span style="color:#666">:</span>
</span></span><span style="display:flex;"><span>	<span style="color:#70a0d0">${</span><span style="color:#bb60d5">PACKER</span><span style="color:#70a0d0">}</span> -overwrite<span style="color:#666">=</span>/dev/sdx <span style="color:#70a0d0">${</span><span style="color:#bb60d5">PKGS</span><span style="color:#70a0d0">}</span>
</span></span></code></pre></div><p>For the initial install, plug the SD card into your computer, put its device
name into the <code>overwrite</code> target, and run <code>make overwrite</code>.</p>
<p>For subsequent changes, you can use <code>make update</code>.</p>
<h3 id="tailscale">Tailscale</h3>
<p>Tailscale is a peer-to-peer mesh VPN, meaning we can use it to connect to our
<code>consrv</code> Raspberry Pi from anywhere in the world, without having to set up port
forwardings, dynamic DNS, or similar.</p>
<p>As an added bonus, Tailscale also transparently fails over between connections,
so while the fast ethernet/fiber connection works, Tailscale uses that,
otherwise it uses the Out Of Band network.</p>
<p>Follow <a href="https://gokrazy.org/packages/tailscale/">the gokrazy guide on Tailscale</a>
to include the device in your Tailscale mesh VPN.</p>
<h3 id="wifi-internet-connection-and-dual-homing">WiFi internet connection and dual homing</h3>
<p>Setup WiFi:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>mkdir -p extrafiles/github.com/gokrazy/wifi/etc
</span></span><span style="display:flex;"><span>cat <span style="color:#4070a0">&#39;{&#34;ssid&#34;: &#34;oob&#34;, &#34;psk&#34;: &#34;secret&#34;}&#39;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  &gt; extrafiles/github.com/gokrazy/wifi/etc/wifi.json
</span></span></code></pre></div><p><code>consrv</code> should use the Out Of Band mobile uplink to reach the internet. At the
same time, it should still be usable from my home network, too, to make gokrazy
updates go quickly.</p>
<p>We accomplish this using route priorities.</p>
<p>I arranged for the WiFi interface to have higher route priority (5) than the
ethernet interface (typically 1, but 11 in our setup thanks to the
<code>-extra_route_priority=10</code> flag):</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>mkdir -p flags/github.com/gokrazy/gokrazy/cmd/dhcp
</span></span><span style="display:flex;"><span><span style="color:#007020">echo</span> <span style="color:#4070a0">&#39;-extra_route_priority=10&#39;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  &gt; flags/github.com/gokrazy/gokrazy/cmd/dhcp/flags.txt
</span></span><span style="display:flex;"><span>make update
</span></span></code></pre></div><p>Now, <code>tailscale netcheck</code> shows an IPv4 address belonging to Sunrise, the mobile
network provider behind the digitec iot subscription.</p>
<h3 id="the-consrv-console-server">The consrv Console Server</h3>
<p><a href="https://github.com/mdlayher/consrv"><code>consrv</code></a> is an SSH serial console server
written in Go that Matt Layher and I developed. If you‚Äôre curious, you can watch
the two of us creating it in this twitch stream recording:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/1g46ei9aBH0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>The installation of <code>consrv</code> consists of two steps.</p>
<p>Step 1 is done: we already included <code>consrv</code> in the <code>Makefile</code> earlier in
<a href="#gokrazy-setup">gokrazy setup</a>.</p>
<p>So, we only need to configure the desired serial ports in <code>consrv.toml</code> (in
<a href="https://gokrazy.org/userguide/package-config/#extrafiles">gokrazy extrafiles</a>):</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>mkdir -p extrafiles/github.com/mdlayher/consrv/cmd/consrv/etc/consrv
</span></span><span style="display:flex;"><span>cat &gt; extrafiles/github.com/mdlayher/consrv/cmd/consrv/etc/consrv/consrv.toml <span style="color:#4070a0">&lt;&lt;&#39;EOT&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">[server]
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">address = &#34;:2222&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">[[devices]]
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">serial = &#34;01716A92&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">name = &#34;router7&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">baud = 115200
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">logtostdout = true
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">[[identities]]
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">name = &#34;michael&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">public_key = &#34;ssh-ed25519 AAAAC3‚Ä¶ michael@midna&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">EOT</span>
</span></span></code></pre></div><p>Run <code>make update</code> to deploy the configuration to your device.</p>
<p>If everything is set up correctly, we can now start a serial console session via
SSH:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>midna% ssh -p 2222 router7@consrv.lan
</span></span><span style="display:flex;"><span>Warning: Permanently added &#39;[consrv.lan]:2222&#39; (ED25519) to the list of known hosts.
</span></span><span style="display:flex;"><span>consrv&gt; opened serial connection &#34;router7&#34;: path: &#34;/dev/ttyUSB0&#34;, serial: &#34;01716A92&#34;, baud: 115200
</span></span><span style="display:flex;"><span>2022/06/19 20:50:47 dns.go:175: probe results: [{upstream: [2001:4860:4860::8888]:53, rtt: 999.665¬µs} {upstream: [2001:4860:4860::8844]:53, rtt: 2.041079ms} {upstream: 8.8.8.8:53, rtt: 2.073279ms} {upstream: 8.8.4.4:53, rtt: 16.200959ms}]
</span></span><span style="display:flex;"><span>[‚Ä¶]
</span></span></code></pre></div><p>I‚Äôm using the <code>logtostdout</code> option to make <code>consrv</code> continuously read the serial
port and send it to <code>stdout</code>, which gokrazy in turn <a href="https://gokrazy.org/userguide/remotesyslog/">sends via remote
syslog</a> to the <a href="https://github.com/gokrazy/syslogd">gokrazy syslog
daemon</a>, running on another machine. You
could also run it on the same machine if you want to log to file.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">There is an <a href="https://github.com/mdlayher/consrv/issues/3">open issue in
<code>consrv</code></a> regarding the failure
mode when a serial adapter disappears. Currently, <code>consrv</code> hangs until you try
to send something, then must be restarted. A workaround is available in the
GitHub issue.</div>
  </div>
</aside>

<h3 id="controlling-tasmota-from-breakglass">Controlling Tasmota from breakglass</h3>
<p>You can use <a href="https://github.com/gokrazy/breakglass"><code>breakglass</code></a> to
interactively log into your gokrazy installation.</p>
<p>If you flashed your Smart Plug with Tasmota, you can easily turn power on from a
breakglass shell by directly calling Tasmota‚Äôs HTTP API with <code>curl</code>:</p>
<pre tabindex="0"><code>% breakglass consrv
consrv# curl -v -X POST --data &#39;cmnd=power on&#39; http://tasmota_68462f-1583/cm
</code></pre><p>The original Sonoff firmware offers a DIY mode which should also offer an HTTP
API, but the <a href="https://twitter.com/zekjur/status/1321949087160258562">DIY mode did not work in my
tests</a>. Hence, I‚Äôm only
describing how to do it with Tasmota.</p>
<h3 id="optional-local-mqtt-server">Optional: Local MQTT Server</h3>
<p>Personally, I like having the Smart Plug available both on the local network
(via Tasmota‚Äôs HTTP API) and via the internet with an external MQTT server. That
way, even if either option fails, I still have a way to toggle power remotely.</p>
<p>But, maybe you want to obtain usage stats by listening to MQTT or similar, and
you don‚Äôt want to use an extra server for this. In that situation, you can
easily run a local MQTT server on your Pi.</p>
<p>In the gokrazy <code>Makefile</code>, add
<a href="https://github.com/fhmq/hmq"><code>github.com/fhmq/hmq</code></a> to the list of packages to
install, and configure Tasmota to connect to <code>consrv</code> on port 1883.</p>
<p>To check that everything is working, use <code>mosquitto_sub</code> from another machine:</p>
<pre tabindex="0"><code>midna% mosquitto_sub --verbose -h consrv.monkey-turtle.ts.net -t &#39;#&#39;
</code></pre><h2 id="conclusion">Conclusion</h2>
<p>digitec‚Äôs IOT mobile internet subscription makes remote power management
delightfully easy with a smart plug and 4G WiFi router, and affordable
enough. The subscription is flexible enough that you can decide to only book it
while you‚Äôre traveling.</p>
<p>We can elevate the whole setup in functionality (but also complexity) by
combining Tailscale, consrv and gokrazy, running on a Raspberry Pi Zero 2 W, and
connecting a USB-to-serial adapter.</p>
<p>If you need more features than that, check out the next step on the feature and
complexity ladder: <a href="https://pikvm.org/">PiKVM</a> or
<a href="https://tinypilotkvm.com/">TinyPilot</a>. See also <a href="https://www.jeffgeerling.com/blog/2021/raspberry-pi-kvms-compared-tinypilot-and-pi-kvm-v3">this comparison by Jeff
Geerling</a>.</p>
<h2 id="appendix-a-unstable-apple-usb-ethernet-adapter">Appendix A: Unstable Apple USB ethernet adapter</h2>
<p>The first USB ethernet adapter I tried was the <a href="https://www.artcomputer.ch/b2c_en/apple-usb-ethernet-adapter-a00004961/">Apple USB Ethernet
Adapter</a>.</p>
<p>Unfortunately, after a few days of uptime, I experienced the following kernel
driver crash (with the <code>asix</code> Linux driver), and the link remained down until I
rebooted.</p>
<p>I then switched to a <a href="https://www.linksys.com/support-product?sku=USB3GIG">Linksys
USB3GIG</a> network adapter
(supported by the <code>r8152</code> Linux driver) and did not see any problems with that
so far.</p>
<details>
<summary>kernel crash message (in dmesg)</summary>
<pre tabindex="0"><code>dwc2 3f980000.usb: dwc2_hc_chhltd_intr_dma: Channel 5 - ChHltd set, but reason is unknown
dwc2 3f980000.usb: hcint 0x00000002, intsts 0x04600009
dwc2 3f980000.usb: dwc2_update_urb_state_abn(): trimming xfer length
asix 1-1.4:1.0 eth0: Failed to read reg index 0x0000: -71
------------[ cut here ]------------
WARNING: CPU: 1 PID: 7588 at drivers/net/phy/phy.c:942 phy_error+0x10/0x58
Modules linked in: brcmfmac brcmutil
CPU: 1 PID: 7588 Comm: kworker/u8:2 Not tainted 5.18.3 #1
Hardware name: Raspberry Pi Zero 2 W Rev 1.0 (DT)
Workqueue: events_power_efficient phy_state_machine
pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
pc : phy_error+0x10/0x58
lr : phy_state_machine+0x258/0x2b0
sp : ffff800009fe3d40
x29: ffff800009fe3d40 x28: 0000000000000000 x27: ffff6c7ac300c078
x26: ffff6c7ac300c000 x25: ffff6c7ac4390000 x24: 00000000ffffffb9
x23: 0000000000000004 x22: ffff6c7ac4019cd8 x21: ffff6c7ac4019800
x20: ffffce5c97f6f000 x19: ffff6c7ac4019800 x18: 0000000000000010
x17: 0000000400000000 x16: 0000000000000000 x15: 0000000000001007
x14: ffff800009fe3810 x13: 00000000ffffffea x12: 00000000fffff007
x11: fffffffffffe0290 x10: fffffffffffe0240 x9 : ffffce5c988e1018
x8 : c0000000fffff007 x7 : 00000000000000a8 x6 : ffffce5c98889280
x5 : 0000000000000268 x4 : ffff6c7acf392b80 x3 : ffff6c7ac4019cd8
x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff6c7ac4019800
Call trace:
 phy_error+0x10/0x58
 phy_state_machine+0x258/0x2b0
 process_one_work+0x1e4/0x348
 worker_thread+0x48/0x418
 kthread+0xf4/0x110
 ret_from_fork+0x10/0x20
---[ end trace 0000000000000000 ]---
asix 1-1.4:1.0 eth0: Link is Down
</code></pre></details>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[My 2022 high-end Linux PC üêß]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/"/>
    <id>https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/</id>
    <published>2022-01-15T16:00:00+01:00</published>
    <content type="html"><![CDATA[<p>I finally managed to get my hands on some DDR5 RAM to complete my Intel i9-12900
high-end PC build! This article contains the exact component list if you‚Äôre
interested in doing a similar build.</p>















<a href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_600x0_resize_q75_box.jpg"
  
  width="600"
  height="521"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Usually, I try to stay on the latest Intel CPU generation when possible. But I
decided to skip the i9-10900 (<a href="https://en.wikipedia.org/wiki/Comet_Lake_(microprocessor)">Comet
Lake</a>) and i9-11900
(<a href="https://en.wikipedia.org/wiki/Rocket_Lake">Rocket Lake</a>) series entirely,
largely because they were still stuck on Intel‚Äôs 14nm manufacturing process and
didn‚Äôt seem to offer much improvement.</p>
<p>The new i9-12900 (<a href="https://en.wikipedia.org/wiki/Alder_Lake_(microprocessor)">Alder
Lake</a>) delivered good
benchmark results and is manufactured with the much newer Intel 7 process, so I
was curious: would an upgrade be worth it?</p>
<h2 id="components">Components</h2>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>196 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/fractal-define-7-solid-midi-tower-pc-gehaeuse-12757904">Fractal Define 7 Solid (Midi Tower)</a></td>
</tr>
<tr>
<td>89 CHF</td>
<td>Power Supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm750x-2018-750-w-pc-netzteil-7678690?supplier=406802">Corsair RM750x 2018 (750 W)</a></td>
</tr>
<tr>
<td>293 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asus-prime-z690-a-lga-1700-intel-z690-ddr5-atx-mainboard-17252893?supplier=406802">ASUS PRIME Z690-A (LGA1700, ATX)</a></td>
</tr>
<tr>
<td>646 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/intel-core-i9-12900k-lga-1700-320-ghz-16-core-prozessor-16552823?supplier=406802">Intel Core i9-12900K</a></td>
</tr>
<tr>
<td>113 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-u12a-1580-cm-cpu-kuehler-10847172?supplier=406802">Noctua NH-U12A</a></td>
</tr>
<tr>
<td>30 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140-mm-1-x-pc-luefter-657800?supplier=406802">Noctua NF-A14 PWM (140 m)</a></td>
</tr>
<tr>
<td>770 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-vengeance-2-x-16gb-ddr5-4800-dimm-288-pin-ram-17713383?supplier=406802">Corsair Vengeance CMK32GX5M2A4800C40 (64 GB)</a></td>
</tr>
<tr>
<td>408 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/wd-black-sn850-retail-2000-gb-m2-2280-ssd-15720645?supplier=406802">WD Black SN850 (2 TB)</a></td>
</tr>
<tr>
<td>605 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/gigabyte-aorus-geforce-rtx-2070-xtreme-8-gb-grafikkarte-9896232">GeForce RTX 2070</a></td>
</tr>
<tr>
<td>65 EUR</td>
<td>Network</td>
<td>Mellanox ConnectX-3 (10 Gbit/s)</td>
</tr>
</tbody>
</table>
<h2 id="fan-compatibility">Fan compatibility</h2>
<p>The Noctua NH-U12A CPU fan required an adapter (‚ÄúNoctua NM-i17xx-MP78 SecuFirm2
mounting kit‚Äù) to be compatible with the Intel LGA1700 socket. I requested the
adapter on Noctua‚Äôs Website on November 5th, and it arrived November 26th.</p>
<h2 id="fractal-define-7-case">Fractal Define 7 case</h2>
<p>Anytime you need to access a PC‚Äôs components, you‚Äôll deal with its
case. Especially for a self-built PC, the case you chose determines how easy it
is to assemble and later modify your PC.</p>
<p>Over the years, I have come to value the following aspects of a PC case:</p>
<ol>
<li>No extra effort should be required for the case to be as quiet as possible.</li>
<li>The case should not have any sharp corners (no danger of injury!).</li>
<li>The case should provide just enough space for easy access to your components.</li>
<li>The more support the case has to encourage clean cable routing, the better.</li>
<li>USB3 front panel headers should be included.</li>
</ol>
<p>I have been using Fractal cases for the past few years and came to generally
prefer them over other brands because of their good build quality.</p>
<p>Hence I‚Äôm happy to report that the Fractal Define 7 (their latest generation at
the time of writing) ticks all of the above boxes!</p>
<p>The case and power supply work well together in terms of cable management. It was a joy to route the cables.</p>
<p>It‚Äôs very easy to open the case doors (they clip in place), or remove the front
panel. This is definitely the best PC case I have seen so far in terms of quick
and easy access.</p>
<p>Here‚Äôs how clean the inside looks. Most cables are routed with very short ways
to the back, where the case offers plenty of convenient cable guides:</p>















<a href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>You might also find this YouTube video review of the Fractal Define 7 interesting:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/XeTxUjUrw4A" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="slow-boot">Slow boot</h2>
<p>When I first powered everything on, I waited for a while, but never saw any
picture on my monitor. The PC eventually rebooted, multiple times in a row. I
took that as a bad sign and turned it off to prevent further damage.</p>
<p>Turns out I should have just waited until it would eventually start up!</p>
<p>It took multiple minutes for the machine to eventually start. I‚Äôm not 100% sure
what the cause is for that, but I heard in a Linus Tech Tips YouTube video that
DDR5 requires time-consuming memory testing when powering up with a fresh memory
configuration, so that seems plausible.</p>
<p>In any case, my advice is: be patient when waiting for this machine to start up.</p>
<h2 id="ddr5-availability-as-of-late-2021">DDR5 availability as of Late 2021</h2>
<p>I originally ordered all components on November 5th 2021. It took a while for
the mainboard to become available, but almost everything shipped on November
15th ‚Äî except for the DDR5 RAM.</p>
<p>Until Late December, I was not able to find any available DDR5 RAM in Switzerland.</p>
<p>The shortage is so pronounced that some YouTubers recommend going with DDR4
mainboards for now, which manufacturers are scrambling to introduce in their
lineups. I did really want to squeeze out the last few extra percent in
memory-intensive workloads, so I decided to wait.</p>
<h2 id="copying-the-data">Copying the data</h2>
<p>Where possible, I like only changing one thing at a time. In this case, I wanted
to change the hardware, but keep using my Linux installation as-is.</p>
<p>To copy my Linux installation over, I plugged my old M.2 SSD into the new
machine, and then started a live Linux environment, so that neither my old nor
my new SSD were in use. My preferred live Linux is <a href="https://grml.org/">grml (current version:
2021.07)</a>, which I copied to a USB memory stick and booted
the machine from it.</p>
<p>In the grml live Linux environment, I copied the full M.2 SSD contents from old
to new:</p>
<pre tabindex="0"><code>grml# dd \
  if=/dev/disk/by-id/nvme-Force_MP600_&lt;TAB&gt; \
  of=/dev/disk/by-id/nvme-WD_BLACK_SN850_2TB_&lt;TAB&gt; \
  bs=5M \
  status=progress
</code></pre><p>For some reason, <a href="https://twitter.com/zekjur/status/1476825858681802754">the transfer was super
slow</a>. Last time I
transferred the contents of a Samsung 960 Pro to a Samsung 970 Pro, it took only
16 minutes. But this time, copying the Force MP600 to a WD Black SN850 took many
hours!</p>
<p>Once the data was transferred, I unplugged the old M.2 SSD and booted the
system.</p>
<p>The hostname remains the same, and the network addresses are tied to the MAC
address of the network card that I moved to the new machine. So, I didn‚Äôt have
to adjust anything in the new machine and could just boot into my usual
environment.</p>
<h2 id="uefi-settings-enable-xmp-for-4800-mhz-ram">UEFI settings: enable XMP for 4800 MHz RAM</h2>
<p>By default, the memory uses 4000 MHz instead of the 4800 MHz advertised on the
box.</p>
<p>I figured it should be safe to try out the XMP option because it is shown as
part of ASUS‚Äôs ‚ÄúEZ Mode‚Äù welcome page in the UEFI setup.</p>
<p>So far, I have not noticed any issues when running the system with XMP enabled.</p>
<p><strong>Update February 2022</strong>: I have experienced weird crashes that seem to have
gone away after disabling XMP. I‚Äôll leave it disabled for now.</p>
<h2 id="uefifan">UEFI settings: fan speed</h2>
<p>The Fractal Define case comes with a built-in fan controller.</p>
<p>I recommend not using the Fractal fan controller, as you can‚Äôt control it from
Linux!</p>
<p>Instead, I have plugged my fans into the mainboard directly.</p>
<p>In the UEFI setup, I have configured all fan speeds to use the ‚Äúsilent‚Äù profile.</p>
<h2 id="asus-prime-z690-a-sensors-and-fan-control">ASUS PRIME Z690-A: sensors and fan control</h2>
<p>With Linux 5.15.11, some fan speeds and temperature are displayed, but oddly
enough it only shows 2 out of the 3 fans I have connected:</p>
<pre tabindex="0"><code>% sudo sensors
nct6798-isa-0290
Adapter: ISA adapter
[‚Ä¶]
fan1:                        0 RPM  (min =    0 RPM)
fan2:                      944 RPM  (min =    0 RPM)
fan3:                        0 RPM  (min =    0 RPM)
fan4:                      625 RPM  (min =    0 RPM)
fan5:                        0 RPM  (min =    0 RPM)
fan6:                        0 RPM  (min =    0 RPM)
fan7:                        0 RPM  (min =    0 RPM)
SYSTIN:                    +35.0¬∞C  (high = +80.0¬∞C, hyst = +75.0¬∞C)  sensor = thermistor
CPUTIN:                    +40.0¬∞C  (high = +80.0¬∞C, hyst = +75.0¬∞C)  sensor = thermistor
AUXTIN0:                  -128.0¬∞C    sensor = thermistor
AUXTIN1:                   +24.0¬∞C    sensor = thermistor
AUXTIN2:                   +28.0¬∞C    sensor = thermistor
AUXTIN3:                   +31.0¬∞C    sensor = thermistor
PECI Agent 0 Calibration:  +40.0¬∞C
[‚Ä¶]
</code></pre><p>Unfortunately, writing to the <code>/sys/class/hwmon/hwmon2/pwm2</code> file does not seem
to change its value, so I don‚Äôt think one can control the fans via PWM from
Linux (yet?).</p>
<p><a href="#uefifan">I have set all fans to silent in the UEFI setup</a>, which is sufficient
to not notice any noise.</p>
<h2 id="performance-comparison-i9-9900k-vs-i9-12900k">Performance comparison: i9-9900K vs. i9-12900K</h2>
<p>After cloning my old disk to the new disk, I took the opportunity to run a few
time-intensive tasks from my day-to-day that I could remember.</p>
<p>On both machines, I configured the CPU governor to <code>performance</code> for stable
results.</p>
<p>Keep in mind that I‚Äôm comparing two unique PC builds as they are (not under
controlled and fair conditions), so the results might not necessarily be
representative. For example, it seems like the SSD performance in the old
machine was heavily degraded due to a <a href="https://twitter.com/zekjur/status/1476950514386538497">incorrect TRIM
configuration</a>.</p>
<table>
<thead>
<tr>
<th>name</th>
<th>old</th>
<th>new</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/golang/go/tree/go1.18beta1">build Go 1.18beta1 (src/make.bash)</a></td>
<td>‚âà45s</td>
<td>‚âà29s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/rsync/tree/d1c307d7a3db853abb5b39de3a206303c4936f4f">gokrazy/rsync tests</a></td>
<td>‚âà8s</td>
<td>‚âà5s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/gokrazy/blob/678bb92c2ee058df4b157fca53c486922951f2c8/integration/uefiboot/uefiboot_test.go">gokrazy UEFI test</a></td>
<td>‚âà9s</td>
<td>‚âà8s</td>
</tr>
<tr>
<td><a href="https://github.com/distr1/distri/blob/1c7fc9ad7e93e1de8fb85d5c4f0ca59f1f8c15e2/Makefile">distri cryptimage (cold cache)</a></td>
<td>‚âà143s</td>
<td>‚âà18s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/kernel/tree/30167e68a3989313498679b9be05c824d956c4d4">gokrazy Linux compilation</a></td>
<td>215s</td>
<td>109s</td>
</tr>
</tbody>
</table>
<p>As we can see, in all of my tests, the new PC achieves measurably better times!
üéâ</p>
<h2 id="conclusion">Conclusion</h2>
<p>Not only in the benchmarks above, but also subjectively, the new machine feels
fast!</p>
<p>Already in the first few days of usage, I notice how time-consuming tasks such
as <a href="https://github.com/gokrazy/kernel/commit/5aff50c59bbc350a034cf3b78f484d35d445c7e0">tracking down a Linux kernel
issue</a>
(requires multiple Linux kernel builds), are a little less terrible thanks to
the faster machine :)</p>
<p>The Fractal Define 7 case is great and will likely serve as a good base for
upgrades over the next couple of years, just like its predecessor (but perhaps
even longer).</p>
<p>As far as I can tell, the machine works well and is compatible with Linux.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[MacBook Air M1: the best laptop?]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/"/>
    <id>https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/</id>
    <published>2021-11-28T16:50:00+01:00</published>
    <content type="html"><![CDATA[<p>You most likely have heard that Apple switched from Intel CPUs to their own,
ARM-based CPUs.</p>
<p>Various early reviews touted the new MacBooks, among the first devices with the
ARM-based M1 CPU, as the best computer ever. This got me curious: after years of
not using any Macs, would an M1 Mac blow my mind?</p>
<p>In this article, I share my thoughts about the MacBook Air M1, after a year of
occasional usage.</p>















<a href="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_600x0_resize_q75_box.jpg"
  alt="MacBook Air M1" title="MacBook Air M1"
  width="600"
  height="675"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="energy-efficiency">Energy efficiency</h2>
<p>The M1 CPU is remarkably energy-efficient. This has two notable effects:</p>
<ol>
<li>The device does not have a fan, and <strong>stays absolutely quiet</strong>. This is
pretty magical, and I now notice my ThinkPad‚Äôs fan immediately.</li>
<li>The <strong>battery lasts many hours</strong>, even with demanding use-cases like video
conferencing.</li>
</ol>
<p>When it comes to energy efficiency, Apple sets the bar. All other laptops should
be fanless, too! And the battery life really is incredible: taking notes in
Google Docs (via WiFi) while at a conference for many hours left me with well
over 80% of battery at the end of the day!</p>
<p>I briefly lent the computer to someone and got it back with a VPN client
installed. The battery life was considerably shortened by that VPN client and
recovered once I uninstalled it. So if you‚Äôre not seeing great battery life,
maybe a single program is ruining your experience.</p>
<p>The fast wakeup feature that was heavily stressed during the initial
introduction (to some ridicule) is actually pretty nice! I now notice having to
wait for my ThinkPad to wake up.</p>
<p>Battery life during standby is great, too. Anecdotally, when leaving my ThinkPad
lying around, it never survives until I plug it in again. The MacBook survives
every single time.</p>
<h2 id="chipset-advantage">Chipset advantage?</h2>
<p>Now, given that Apple controls the entire machine, does that mean they now offer
features that other computers cannot offer yet?</p>
<p>My personal bar for this question is whether a computer can be used with my
<a href="/posts/2017-12-11-dell-up3218k/">bandwidth-hungry 8K monitor</a>, and the
disappointing news is that the MacBook Air M1 cannot drive the 8K monitor with
its 7680x4320 pixels resolution (at 60 Hz, using 2 DisplayPort links), not even
with <a href="https://www.displaylink.com/products/find?vid_dp=1&amp;usbc=1">an external USB-C
dock</a>.</p>
<p>Maybe future hardware generations add support for 8K displays, but for my
day-to-day, Apple‚Äôs complete control doesn‚Äôt improve anything.</p>
<h2 id="built-in-peripherals">Built-in peripherals</h2>
<p>The screen is great! Everything looks sharp, colors are vibrant and brightness
is good.</p>
<p>As usual, the touchpad (which Apple calls ‚Äútrackpad‚Äù) is great, much better than
any touchpad I have ever used on a PC laptop. Apple trackpads have always had
this advantage since I know them, and I don‚Äôt know why PC touchpads don‚Äôt seem
to get any better? ü§î</p>
<p>Apple brought back their <a href="https://www.macrumors.com/guide/butterfly-keyboard-vs-scissor-keyboard/">scissor mechanism
keyboards</a>,
which is a very welcome change. I have witnessed so so many problems with the
old butterfly mechanism keyboards.</p>
<p>This first MacBook Air M1 model has no MagSafe. Apple added MagSafe in the
MacBook Pro M1 in late 2021. I hope they‚Äôll eventually expand MagSafe to all
notebooks.</p>
<h2 id="peripherals-not-enough-ports">Peripherals: not enough ports</h2>
<p>Staying in peripheral-land, let me first state that this MacBook‚Äôs <strong>2 USB-C
ports are not enough</strong>!</p>
<p>When working on the go, after plugging in power, I can plug in a wired ethernet
adapter (wireless can be spotty), but then won‚Äôt have any ports left for my
ergonomic keyboard and mouse.</p>
<p>For video conferencing, I can plug in power (to ensure I won‚Äôt run out of
battery), connect a table microphone, but won‚Äôt have any ports left for a decent
webcam. This is particularly annoying because this MacBook‚Äôs built-in webcam is
really bad, and the main reason why reviewers don‚Äôt give the MacBook a perfect
score (<a href="https://www.youtube.com/watch?v=OEaKQ0pxQsg">example review on
YouTube</a>).</p>
<p>So, in practice, you need to carry a USB-C dock, or at least a USB hub, with
your laptop when you anticipate possibly needing any peripherals. #donglelife</p>
<h2 id="not-enough-ram-for-local-software-development">Not enough RAM for local software development</h2>
<p>Hardware-wise, the biggest pain point for software developers is the small
amount of RAM: both the MacBook Air M1 and the MacBook Pro M1 (13&quot;) can be
configured with up to 16 GB of RAM. Only the newer MacBook Pro M1 14&quot; or 16&quot;
(introduced late 2021) support more RAM.</p>
<p>To be clear, 16 GB RAM is enough to do software development in general, but it
can quickly become limiting when you deal with larger programs or data sets.</p>
<p>In my ThinkPad, I have 64 GB of RAM, which allows for a lot more VMs, large
index data structures, or just plenty of page cache. With the ThinkPad, I don‚Äôt
have to worry about RAM.</p>
<p>Of course, there are strategies around this. Maybe your projects are large
enough to warrant maintaining a remote build cluster, and you can run your test
jobs in a staging environment. The MacBook makes for a fine thin client ‚Äî
provided your internet connection is fast and stable.</p>
<h2 id="operating-system-macos">Operating System: macOS</h2>
<p>I am talking about Operating Systems at a very high level in this section. Many
use-cases will work fine, regardless of the Operating System one uses. I can
typically get by with a browser and a terminal program.</p>
<p>So, this section isn‚Äôt a nuanced or fair review or critique of macOS or anything
like that, just a collection of a few random things I found notable while
playing with this device :)</p>
<p>My favorite way to install macOS is Internet Recovery. You can install a blank
disk in your Mac and start the macOS installer via the internet! The Mac will
even remember your WiFi password. The closest thing I know in the PC world is
<a href="https://netboot.xyz/">netboot.xyz</a>, and that needs to be installed in your
local network first.</p>
<p>Similarly, Apple‚Äôs integration when using multiple devices seems pretty
good. For example, the Mac will offer to switch to your iPhone‚Äôs mobile
connection when it loses network connectivity.</p>
<p>But, just like in all other operating systems, there is plenty in macOS to
improve.</p>
<p>For example, software updates on the Mac still take 30 minutes (!) or so, which
is entirely unacceptable for such a fast device! In particular, Apple seems to
be (partially?) using immutable file system snapshots to distribute their
software, so I don‚Äôt know why <a href="https://distr1.org/">distri can install and update so much
faster</a>.</p>
<p>Speaking of Operating System shortcomings, I have observed how <a href="https://en.wikipedia.org/wiki/Apple_File_System">APFS (the Apple
File System)</a> can get into a
state in which it cannot be repaired, which I found pretty concerning! Automated
and frequent backups of all on-device data is definitely a must.</p>
<p>Slow software updates are annoying, and having little confidence in the file
system makes me uneasy, but what‚Äôs really a dealbreaker is that my preferred
keyboard layout does not work well on macOS: see <a href="#neo">Appendix A: NEO keyboard
layout</a>.</p>
<h2 id="linux-">Linux? üêß</h2>
<p>So given my preference for Linux, could I just use Linux instead?</p>
<p>Unfortunately, while <a href="https://asahilinux.org">Asahi Linux</a> is making great
progress in bringing Linux to the M1 Macs, it seems like it‚Äôll still be many
months before I can install a Linux distribution and expect it to just work on
the M1 Mac.</p>
<p>Until then, check out the <a href="https://asahilinux.org/blog/">Asahi Linux Progress Report blog
posts</a>!</p>
<h2 id="intel-to-m1-architecture-transition">Intel to M1 architecture transition</h2>
<p>Apple developed the <a href="https://en.wikipedia.org/wiki/Rosetta_(software)#Rosetta_2">Rosetta 2 dynamic binary
translator</a> which
transparently handles non-M1 programs, and so far it seems to work fine! All the
things I tried just worked, and architecture never seemed to play a role during
my usage.</p>
<h2 id="conclusion">Conclusion</h2>
<p>The MacBook Air M1 is indeed impressive! It‚Äôs light, silent, fast and the
battery life is amazing. If these points are the most important to you in a
laptop, and you‚Äôre already in the Mac ecosystem, I imagine you‚Äôll be very happy
with this laptop.</p>
<p>But is the M1 really so mind-blowing that you should switch to it no matter
what? No. As a long-time Linux user who is primarily developing software, I
prefer my <a href="/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/">ThinkPad X1
Extreme</a> with
its plentiful peripheral connections and lots of RAM.</p>
<p>I know it‚Äôs not an entirely fair comparison: I should probably compare the
ThinkPad to the newer MacBook <strong>Pro</strong> models (not MacBook Air). But I‚Äôm not a
professional laptop reviewer, I can only speak about these 2 laptops that I
found interesting enough to personally try.</p>
<h2 id="neo">Appendix A: NEO keyboard layout</h2>
<p>The macOS implementation of the <a href="https://neo-layout.org/">NEO keyboard layout</a>
has a number of significant incompatibilities/limitations: its layer 3 does not
work correctly. Layer 3 contains many important common characters, such as <code>/</code>
(<code>Mod3 + i</code>, i.e. Caps Lock + i) or <code>?</code> (<code>Mod3 + s</code>).</p>
<p>I installed the current <code>neo.keylayout</code> file (2019-08-16) as described on the
<a href="https://neo-layout.org/Download/">NEO download page</a>.</p>
<p>In order to make <code>/</code> and <code>?</code> work in Google Docs, I had to enable the additional
Karabiner rule <em>‚ÄúPrevent all layer 3 keys from being treated as option key
shortcut‚Äù</em> (see also: <a href="https://github.com/jgosmann/neo2-layout-osx/issues/6#issuecomment-604622834">this GitHub
issue</a>)</p>
<hr>
<p>I encountered the following issues, ordered by severity:</p>
<p><strong>Issue 1</strong>: I cannot use Emacs at all! I installed the emacsformacosx.com
version (also tried homebrew), but cannot enter keys such as <code>/</code> or <code>?</code>. Emacs
interprets these as <code>M-u</code> instead.</p>
<p>The Karabiner rule <em>‚ÄúPrevent all layer 3 keys from being treated as option key
shortcut‚Äù</em> that fixed this issue in Google Docs does not help for
Emacs. Removing it from Karabiner changes behavior, but Emacs still recognizes
<code>M-i</code> instead of <code>/</code>, so it‚Äôs broken with or without the rule.</p>
<p><strong>Issue 2</strong>: In the Terminal app, I cannot enable the <em>‚ÄúUse Option as Meta key‚Äù</em>
keyboard option, otherwise all layer 3 keys function as meta shortcuts (<code>M-i</code>)
instead of key symbols (<code>/</code>).</p>
<p>I commonly use the Meta key to jump around word-wise: <code>Alt+b</code> / <code>Alt+f</code> on a
PC. Since I can‚Äôt use Option + b / Option + f on a Mac, I need to use Option +
arrow keys instead, which works.</p>
<p>Since the Option key does not work as Meta key, I need to press (and release!)
the Escape key instead. This is pretty inconvenient in Emacs in a terminal.</p>
<p><strong>Issue 3</strong>: In Gmail in Chrome, the search keyboard shortcut (<code>/</code>) is not
recognized.</p>
<p>I <a href="https://git.neo-layout.org/neo/neo-layout/issues/590">reported this problem
upstream</a>, but there seems
to be no solution.</p>
<hr>
<p>I‚Äôm not sure why these programs don‚Äôt work well with NEO. I tried BBEdit for
comparison, and it had no trouble with (macOS-level) shortcuts such as
<code>command + /</code> and <code>option + command + /</code>.</p>
<p>On Linux, the NEO layout works so much better. I‚Äôm really not in the mood to
continuously fight with my operating system over keyboard input and shortcuts.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Silent HP Z440 workstation: replacing noisy fans]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/"/>
    <id>https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/</id>
    <published>2021-08-28T15:16:00+02:00</published>
    <content type="html"><![CDATA[<p>Since March 2020, I have been using my work computer at home: an <a href="https://support.hp.com/us-en/document/c04506309">HP Z440
workstation</a>.</p>
<p>When I originally took the machine home, I immediately noticed that it‚Äôs quite a
bit louder than my other PCs, but only now did I finally decide to investigate
what I could do about it.</p>
<h2 id="finding-all-the-fans">Finding all the fans</h2>
<p>I first identified all fans, both by opening the chassis and looking around, and
by looking at the <a href="http://h10032.www1.hp.com/ctg/Manual/c04823811">HP Z440 Maintenance and Service
Guide</a>, which contains this
description:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_600x0_resize_q75_box.jpg"
  alt="chassis components" title="chassis components"
  width="600"
  height="509"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Specifically, I identified the following fans:</p>
<ul>
<li>‚Äú1 Fan‚Äù, a 92mm rear fan, sucking air out of the back of the chassis.</li>
<li>‚Äú5 Memory fans‚Äù, two 60mm fans in a custom HP plastic enclosure that are
positioned directly above the DIMM slots to the left and right of the CPU.</li>
<li>‚Äú6 CPU Heat sink‚Äù, a 92mm fan on top of a heat sink</li>
<li>‚Äú11 Rear System Fan‚Äù, a 92mm front (!) fan, pulling air into the front of the
chassis.</li>
<li>My aftermarket nVidia GeForce GPU has 3 fans on a massive heat sink.</li>
<li>The power supply has a fan, too, which I will not touch.</li>
</ul>
<h2 id="memory-fans">Memory fans</h2>
<p>The Z440 comes with a custom HP plastic enclosure that is put over the CPU
cooler, fastened with two clips at opposite ends, and positions two small 60mm
fans above the DIMM banks.</p>
<p>This memory fan plastic enclosure is a pain to find anywhere. It looks like HP
is no longer producing it.</p>
<p>The enclosure plugs into the mainboard with a custom connector that is directly
wired up to the fans, meaning it‚Äôs a pain to replace the fans.</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_600x0_resize_q75_box.jpg"
  alt="memory fans" title="memory fans"
  width="600"
  height="696"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Luckily, while <a href="https://www.workstation4u.de/de/ersatzteile/hp/hp-z440/1513/hp-z440-memory-cooling-solution-neu">shopping around for an
enclosure</a>
I could modify, I realized that memory fans are only required when installing
more than 4 DIMM modules!</p>
<p>My machine ‚Äúonly‚Äù has 64 GB of RAM, in 4 DIMM modules, and I don‚Äôt intend to
upgrade anytime soon, so I just unplugged the whole memory fan enclosure and
removed it from the chassis.</p>
<p>The UEFI firmware does not complain about the memory fans missing (contrary to
the rear fan!), and this simple change alone makes a noticeable difference in
noise levels.</p>
<h2 id="gpu-fans">GPU fans</h2>
<p>nVidia GPUs can be run at different ‚ÄúPowerMizer‚Äù performance levels:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_600x0_resize_q75_box.jpg"
  alt="nVidia PowerMizer" title="nVidia PowerMizer"
  width="600"
  height="359"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Many years ago, I ran into lag when using Chrome that went away as soon as I
switched my nVidia GPU‚Äôs Preferred Mode to ‚ÄúPrefer Maximum Performance‚Äù instead
of ‚ÄúAuto‚Äù or ‚ÄúAdaptive mode‚Äù.</p>
<p>It turns out that nowadays, that is no longer a problem, so running at Prefer
Maximum Performance is no longer necessary.</p>
<p>Worse, pinning the GPU at the highest Performance Level means that it produces
more heat, resulting in the fans having to spin up more often, and run for
longer durations.</p>
<p>But, even after switching to Auto, resulting in Adaptive mode being chosen, I
noticed that my GPU was stuck at a higher PowerMizer level than I thought it
should be.</p>
<p>An easy fix is to limit the GPU to a certain PowerMizer level, and ideally not
the lowest level (level 0). For me, one level after that (level 1) seems to
result in no slow-down during my typical usage.</p>
<p>I followed <a href="https://db.tannercrook.com/limiting-nvidia-gpu-in-linux/">this blog post to limit my GPU to PowerMizer level
1</a>, i.e. I added
<code>/etc/modprobe.d/nvidia-power-save.conf</code> with the following contents:</p>
<pre tabindex="0"><code>options nvidia NVreg_RegistryDwords=&#34;OverrideMaxPerf=0x2&#34;
</code></pre><p>‚Ä¶followed by a rebuild of my initramfs (<code>update-initramfs -u</code>) and a <code>reboot</code>.</p>
<p>This way, the fans don‚Äôt typically need to spin up as the GPU stays below its
temperature limit.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">For some reason, the above method worked fine on my Debian work machine, but not
on my Arch private machine‚Ä¶? I have not investigated why.</div>
  </div>
</aside>

<h2 id="rear-and-front-fans">Rear and front fans</h2>
<p>With the memory fans and GPU fans out of the way, two easy to check fans remain:
the rear fan and front fan. These are 92mm in size, the model number is Foxconn
PVA092G12S.</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_600x0_resize_q75_box.jpg"
  alt="rear fan" title="rear fan"
  width="600"
  height="800"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>I unplugged both of them to see what effect these fans have on the noise level,
and the difference was significant!</p>
<p>Unfortunately, unplugging isn‚Äôt enough: the UEFI firmware complains on boot when
the rear fan is not connected, requiring you to press <code>Enter</code> to boot. Also, the
machine seems to get a few degrees Celsius hotter inside without the front and
rear fans, so I don‚Äôt want to run the machine without these fans for an extended
period of time.</p>
<p>I ordered two <a href="https://noctua.at/en/nf-a9x14-pwm">Noctua NF-A9x14 PWM</a> fans (for
about 25 CHF each) to replace the stock front and rear fans.</p>
<p>Unfortunately, while HP uses a standard 4-pin PWM fan connector
(electronically), the connector on the Z440 mainboard uses a non-standard guard
rail configuration (mechanically)!</p>
<p>Luckily, modifying the connector of the Noctua Low-Noise Adapter cable to fit on
the custom 4-pin connector is as simple as using a knife to remove the
connector‚Äôs guard rails:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_600x0_resize_q75_box.jpg"
  alt="fan connector mod" title="fan connector mod"
  width="600"
  height="557"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>After connecting the Noctua fan, the boot warning was gone.</p>
<h2 id="cpu-fan">CPU fan</h2>
<p>For the CPU fan, HP again chose to use a <a href="https://h30434.www3.hp.com/t5/Business-PCs-Workstations-and-Point-of-Sale-Systems/Z620-Aftermarker-CPU-Cooler-CPU-Cooling-shroud-necessary-or/td-p/7842134">custom (6-pin)
connector</a>.</p>
<p>On the web, I read that the Z440 CPU fan is quite efficient and not worth
replacing. This matches my experience, so I kept the standard Z440 CPU cooler.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I was quite happy to discover that I could just unplug the memory fans, and
configure my GPU to make less noise. Together with replacing the front/rear fans
with Noctua ones, the machine is much quieter now than before!</p>
<p>One downside of workstation-class hardware is that manufacturers (at least HP)
like to build custom parts and solutions. Using their own fan connectors instead
of standard connectors is such a pain! I‚Äôll be sure to stick to standard PC
hardware :)</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[25 Gigabit Linux internet router PC build]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/"/>
    <id>https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/</id>
    <published>2021-07-10T13:43:00+02:00</published>
    <content type="html"><![CDATA[<p>init7 recently announced that with their <a href="https://www.init7.net/en/internet/fiber7/">FTTH fiber offering
Fiber7</a>, they will now sell and
connect you with 25 Gbit/s (Fiber7-X2) or 10 Gbit/s (Fiber7-X) fiber optics, if
you want more than 1 Gbit/s.</p>
<p>While this offer will only become available at my location late this year (<a href="https://twitter.com/init7/status/1403287499175235584">or
possibly later due to the supply chain
shortage</a>), I already
wanted to get the hardware on my end sorted out.</p>
<p>After my <a href="/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/">previous
disappointment</a>
with the MikroTik CCR2004, I decided to try a custom PC build.</p>
<p>An alternative to many specialized devices, including routers, is to use a PC
with an expansion card. An internet router‚Äôs job is to configure a network
connection and forward network packets. So, in our case, we‚Äôll build a PC and
install some network expansion cards!</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_600x0_resize_q75_box.jpg"
  alt="router PC build" title="router PC build"
  width="600"
  height="607"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="goals">Goals</h2>
<p>For this PC internet router build, I had the following goals, highest priority
to lowest priority:</p>
<ol>
<li>Enough performance to saturate 25 Gbit/s, e.g. with two 10 Gbit/s downloads.</li>
<li>Silent: no loud fan noise.</li>
<li>Power-efficient: low power usage, as little heat as possible.</li>
<li>Low cost (well, for a high-end networking build‚Ä¶).</li>
</ol>
<h2 id="network-port-plan">Network Port Plan</h2>
<p>The simplest internet router has 2 network connections: one uplink to the
internet, and the local network. You can build a router without extra cards by
using a mainboard with 2 network ports.</p>
<p>Because there are no mainboards with SFP28 slots (for 25 Gbit/s SFP28 fiber
modules), we need at least 1 network card for our build. You might be able to
get by with a dual-port SFP28 network card if you have an SFP28-compatible
network switch already, or need just one fast connection.</p>
<p>I want to connect a few fast devices (directly and via fiber) to my router, so
I‚Äôm using 2 network cards: an SFP28 network card for the uplink, and a quad-port
10G SFP+ network card for the local network (LAN). This leaves us with the
following network ports and connections:</p>
<table>
<thead>
<tr>
<th>Network Card</th>
<th>max speed</th>
<th>cable</th>
<th>effective</th>
<th>Connection</th>
</tr>
</thead>
<tbody>
<tr>
<td>Intel XXV710</td>
<td>25 Gbit/s</td>
<td>fiber</td>
<td>25 Gbit/s</td>
<td>Fiber7-X2 uplink</td>
</tr>
<tr>
<td>Intel XXV710</td>
<td>25 Gbit/s</td>
<td>DAC</td>
<td>10 Gbit/s</td>
<td>workstation</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>RJ45</td>
<td>1 Gbit/s</td>
<td>rest (RJ45 Gigabit)</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>fiber</td>
<td>10 Gbit/s</td>
<td>MikroTik 1</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>fiber</td>
<td>10 Gbit/s</td>
<td>MikroTik 2</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>/</td>
<td>10 Gbit/s</td>
<td>(unused)</td>
</tr>
<tr>
<td>onboard</td>
<td>2.5 Gbit/s</td>
<td>RJ45</td>
<td>1 Gbit/s</td>
<td>(management)</td>
</tr>
</tbody>
</table>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_600x0_resize_q75_box.jpg"
  alt="network connectors" title="network connectors"
  width="600"
  height="800"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h2 id="hardware-selection">Hardware selection</h2>
<p>Now that we have defined the goals and network needs, let‚Äôs select the actual
hardware!</p>
<h3 id="network-cards">Network Cards</h3>
<p>My favorite store for 10 Gbit/s+ network equipment is
<a href="https://www.fs.com/">FS.COM</a>. They offer Intel-based cards:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_600x0_resize_q75_box.jpg"
  alt="Network cards" title="Network cards"
  width="600"
  height="450"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<ul>
<li>
<p>(347 CHF) PCIe 3.0 x8 Dual-Port 25G SFP28 Ethernet Network Card (Intel XXV710) <br>
<a href="https://www.fs.com/de/products/75603.html">FS.COM XXV710AM2-F2 #75603</a></p>
</li>
<li>
<p>(329 CHF) PCIe 3.0 x8 Quad-Port 10G SFP+ Ethernet Network Card (Intel XL710-BM1) <br>
<a href="https://www.fs.com/de/products/75602.html">FS.COM FTXL710BM1-F4 #75602</a></p>
</li>
</ul>
<p>Both cards work out of the box with the <a href="https://www.kernel.org/doc/Documentation/networking/i40e.txt"><code>i40e</code> Linux kernel
driver</a>, no
firmware blobs required.</p>
<p>For a good overview over the different available Intel cards, check out the
second page (‚ÄúProduct View‚Äù) in the card‚Äôs <a href="https://img-en.fs.com/file/user_manual/network-adapter-user-manual.pdf">User
Manual</a>.</p>
<h3 id="cpu-and-chipset">CPU and Chipset</h3>
<p>I read on many different sites that AMD‚Äôs current CPUs beat Intel‚Äôs CPUs in
terms of performance per watt. We can better achieve goals 2 and 3 (low noise
and low power usage) by using fewer watts, so we‚Äôll pick an AMD CPU and
mainboard for this build.</p>
<p>AMD‚Äôs current CPU generation is Zen 3, and <a href="https://en.wikipedia.org/wiki/List_of_AMD_Ryzen_processors#Zen_3_based">current Zen 3 based
CPUs</a>
can be divided into 65W <a href="https://en.wikipedia.org/wiki/Thermal_design_power">TDP (Thermal Design
Power)</a> and 105W TDP
models. Only one 65W model is available to customers right now: the Ryzen 5
5600X.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><p><strong>Update (2023):</strong> The <a href="https://www.digitec.ch/de/s1/product/amd-ryzen-7-pro-5750ge-46ghz-tray-am4-460-ghz-8-core-prozessor-20796931">AMD Ryzen 7 PRO
5750GE</a>
is now available, with a TDP of only 35W, and comparable performance.</p>
<p>In March 2023, I switched from the Ryzen 5 5600X to the Ryzen 7 PRO 5750GE, and
verified that my router can still forward and serve at 25 Gbit/s with ease.</p>
<p>The router now consumes 14W less power, and runs 7 to 10 ‚ÑÉ cooler!</p>
</div>
  </div>
</aside>

<p>Mainboards are built for/with a certain so-called chipset. Zen 3 CPUs use the
AM4 socket, for which <a href="https://en.wikipedia.org/wiki/Socket_AM4#Chipsets">8 different
chipsets</a> exist. Our network
cards need PCIe 3.0, so that disqualifies 5 chipsets right away: only the A520,
B550 and X570 chipsets remain.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note:</strong> Multiple people pointed out (thank you!) that the Wikipedia table only
lists PCIe lanes provided by the chipset, and strictly speaking, the older X470
chipset (released March 2018) supports CPUs which provide PCIe 3.0
lines. E.g. the <a href="https://www.asus.com/microsite/motherboard/AMD-X470/">ROG Strix
X470-F</a> with its x8/x8
mode should work, too.</div>
  </div>
</aside>
















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_600x0_resize_q75_box.jpg"
  alt="Ryzen 5" title="Ryzen 5"
  width="600"
  height="440"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h3 id="mainboard-pcie-bandwidth">Mainboard: PCIe bandwidth</h3>
<p>I originally tried using the ASUS PRIME X570-P mainboard, but I ran into two
problems:</p>
<p>Too loud: X570 mainboards need an annoyingly loud chipset fan for their 15W
TDP. Other chipsets such as the B550 don‚Äôt need a fan for their 5W TDP. With a
loud chipset fan, goal 2 (low noise) cannot be achieved. Only the
<a href="https://www.golem.de/news/sockel-am4-x570s-mainboards-mit-passivkuehlung-verfuegbar-2106-157434.html">recently-released X570<strong>S</strong>
variant</a>
comes without fans.</p>
<p>Not enough PCIe bandwidth/slots! This is how the ASUS tech specs describe the slots:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_600x0_resize_q75_box.jpg"
  
  width="600"
  height="244"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>This means the board has 2 slots (1 CPU, 1 chipset) that are physically wide
enough to hold a full-length x16 card, but only the first port can
electronically be used as an x16 slot. The other port only has PCIe lanes
electronically connected for x4, hence ‚Äúx16 (max at x4 mode)‚Äù.</p>
<p>Unfortunately, our network cards need electrical connection of all their PCIe x8
lanes to run at full speed. Perhaps Intel/FS.COM will one day offer a new
generation of network cards that use PCIe <strong>4.0</strong>, because PCIe 4.0 x4 achieves
the same 7.877 GB/s throughput as PCIe <strong>3.0</strong> x8. Until then, I needed to find
a new mainboard.</p>
<p>Searching mainboards by PCIe capabilities is rather tedious, as mainboard block
diagrams or PCIe tree diagrams are not consistently available from all mainboard
vendors.</p>
<p>Instead, we can look explicitly for a feature called <strong>PCIe Bifurcation</strong>. In a
nutshell, PCIe bifurcation lets us divide the PCIe bandwidth from the Ryzen CPU
from 1 PCIe 4.0 x16 into 1 PCIe 4.0 x8 + 1 PCIe 4.0 x8, definitely satisfying
our requirement for two x8 slots at full bandwidth.</p>
<p>I found a list of (only!) three B550 mainboards supporting PCIe Bifurcation in <a href="https://www.anandtech.com/show/15850/the-amd-b550-motherboard-overview-asus-gigabyte-msi-asrock-and-others/39">an
Anandtech
review</a>. Two
are made by Gigabyte, one by ASRock. I read the Gigabyte UEFI setup is rather
odd, so I went with the ASRock B550 Taichi mainboard.</p>
<h3 id="case">Case</h3>
<p>For the case, I needed a midi case (large enough for the B550 mainboard‚Äôs ATX
form factor) with plenty of options for large, low-spinning fans.</p>
<p>I stumbled upon the <a href="https://www.corsair.com/us/en/Categories/Products/Cases/Mid-Tower-ATX-Cases/4000D-Airflow-Tempered-Glass-Mid-Tower-ATX-Case/p/CC-9011200-WW">Corsair 4000D
Airflow</a>,
which is available for 80 CHF and <a href="https://www.gamersnexus.net/hwreviews/3624-corsair-4000d-airflow-case-review-vs-solid-panel">achieved positive
reviews</a>. I‚Äôm
pleased with the 4000D: there are no sharp corners, installation is quick, easy
and clean, and the front and top panels offer plenty of space for cooling behind
large air intakes:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_600x0_resize_q75_box.jpg"
  alt="Airflow case (from the top)" title="Airflow case (from the top)"
  width="600"
  height="699"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Inside, the case offers plenty of space and options for routing cables on the back side:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_600x0_resize_q75_box.jpg"
  alt="Airflow case (back)" title="Airflow case (back)"
  width="600"
  height="536"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Which in turn makes for a clean front side:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_600x0_resize_q75_box.jpg"
  alt="Airflow case (front)" title="Airflow case (front)"
  width="600"
  height="800"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h3 id="fans">Fans</h3>
<p>I have been happy with <a href="https://noctua.at/">Noctua</a> fans for many years. In this
build, I‚Äôm using only Noctua fans so that I can reach goal 2 (silent, no loud
fan noise):</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_600x0_resize_q75_box.jpg"
  alt="Noctua fans" title="Noctua fans"
  width="600"
  height="800"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>These fans are large (140mm), so they can spin on slow speeds and still be
effective.</p>
<p>The specific fan configuration I ended up with:</p>
<ul>
<li>1 Noctua NF-A14 PWM 140mm in the front, pulling air out of the case</li>
<li>1 Noctua NF-A14 PWM 140mm in the top, pulling air into the case</li>
<li>1 Noctua NF-A12x25 PWM 120mm in the back, pulling air into the case</li>
<li>1 Noctua NH-L12S CPU fan</li>
</ul>
<p>Note that this is most likely overkill: I can well imagine that I could turn off
one of these fans entirely without a noticeable effect on temperatures. But I
wanted to be on the safe side and have a lot of cooling capacity, as I don‚Äôt
know how hot the Intel network cards run in practice.</p>
<h3 id="fan-controller">Fan Controller</h3>
<p>The ASRock B550 Taichi <a href="https://www.techpowerup.com/review/asrock-b550-taichi/7.html">comes with a Nuvoton
NCT6683D-T</a> fan
controller.</p>
<p>Unfortunately, ASRock seems to have set the Customer ID register to 0 instead of
<code>CUSTOMER_ID_ASROCK</code>, so you need to load the <code>nct6683</code> Linux driver with its
<code>force</code> option.</p>
<p>Once the module is loaded, <code>lm-sensors</code> lists accurate PWM fan speeds, but the
temperature values are mislabeled and don‚Äôt quite match the temperatures I see
in the UEFI H/W Monitor:</p>
<pre tabindex="0"><code>nct6683-isa-0a20
Adapter: ISA adapter
fan1:              471 RPM  (min =    0 RPM)
fan2:                0 RPM  (min =    0 RPM)
fan3:                0 RPM  (min =    0 RPM)
fan4:                0 RPM  (min =    0 RPM)
fan5:                0 RPM  (min =    0 RPM)
fan6:                0 RPM  (min =    0 RPM)
fan7:                0 RPM  (min =    0 RPM)
Thermistor 14:     +45.5 C  (low  =  +0.0 C)
                            (high =  +0.0 C, hyst =  +0.0 C)
                            (crit =  +0.0 C)  sensor = thermistor
AMD TSI Addr 98h:  +40.0 C  (low  =  +0.0 C)
                            (high =  +0.0 C, hyst =  +0.0 C)
                            (crit =  +0.0 C)  sensor = AMD AMDSI
intrusion0:       OK
beep_enable:      disabled
</code></pre><p>At least with the <code>nct6683</code> Linux driver, there is no way to change the PWM fan
speed: the corresponding files in the <code>hwmon</code> interface are marked read-only.</p>
<p>At this point I accepted that I won‚Äôt be able to work with the fan controller
from Linux, and tried just configuring static fan control settings in the UEFI
setup.</p>
<p>But despite identical fan settings, one of my 140mm fans would end up turned
off. I‚Äôm not sure why ‚Äî is it an unclean PWM signal, or is there just a bug in
the fan controller?</p>
<p>Controlling the fans to reliably spin at a low speed is vital to reach goal 2
(low noise), so I looked around for third-party fan controllers and found the
<a href="https://www.corsair.com/eu/en/Categories/Products/Accessories-%7C-Parts/iCUE-CONTROLLERS/iCUE-Commander-PRO-Smart-RGB-Lighting-and-Fan-Speed-Controller/p/CL-9011110-WW">Corsair Commander
Pro</a>,
which <a href="https://blog.ktz.me/a-usb-fan-controller-that-now-works-under-linux/">a blog post explains is compatible with
Linux</a>.</p>
<h3 id="server-disk">Server Disk</h3>
<p>This part of the build is not router-related, but I figured if I have a fast
machine with a fast network connection, I could add a fast big disk to it and
retire my other server PC.</p>
<p>Specifically, I chose the Samsung 970 EVO Plus M.2 SSD with 2 TB of
capacity. This disk can <a href="https://www.tomshardware.com/reviews/samsung-970-evo-plus-ssd,5608.html">deliver 3500 MB/s of sequential read
throughput</a>,
which is more than the ‚âà3000 MB/s that a 25 Gbit/s link can handle.</p>
<h3 id="graphics-card">Graphics Card</h3>
<p>An important part of computer builds for me is making troubleshooting and
maintenance as easy as possible. In my current tech landscape, that translates
to connecting an HDMI monitor and a USB keyboard, for example to boot from a
different device, to enter the UEFI setup, or to look at Linux console messages.</p>
<p>Unfortunately, the Ryzen 5 5600X does not have integrated graphics, so to get
any graphics output, we need to install a graphics card. I chose the Zotac
GeForce GT 710 Zone Edition, because it was the cheapest available card (60 CHF)
that‚Äôs passively cooled.</p>
<p>An alternative to using a graphics card might be to use a PCIe IPMI card like
the <a href="https://www.asrockrack.com/general/productdetail.asp?Model=PAUL#Specifications">ASRock
PAUL</a>,
however these seem to be harder to find, and more expensive.</p>
<p>Longer-term, I think the best option would be to use the Ryzen 5 5600G with
integrated graphics, but that model only <a href="https://www.pcmag.com/news/amds-new-ryzen-5000-g-series-will-come-with-an-integrated-gpu">becomes available later this
year</a>.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Update (2023):</strong> As <a href="#cpu-and-chipset">described above</a>, I switched to the
Ryzen 7 PRO 5750GE, and its integrated HDMI output works like a charm :)</div>
  </div>
</aside>

<h3 id="component-list">Component List</h3>
<p>I‚Äôm listing 2 different options here. Option A is what I built (router+server),
but Option B is a lot cheaper if you only want a router. Both options use the
same base components:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>347 CHF</td>
<td>Network card</td>
<td><a href="https://www.fs.com/products/75603.html">FS.COM Intel XXV710, 2 √ó 25 Gbit/s (#75603)</a></td>
</tr>
<tr>
<td>329 CHF</td>
<td>Network card</td>
<td><a href="https://www.fs.com/products/75602.html">FS.COM Intel XL710, 4 √ó 10 Gbit/s (#75602)</a></td>
</tr>
<tr>
<td>395 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/amd-ryzen-7-pro-5750ge-46ghz-tray-am4-460-ghz-8-core-prozessor-20796931">Ryzen 7 PRO 5750GE</a></td>
</tr>
<tr>
<td>290 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asrock-b550-taichi-am4-amd-b550-atx-mainboard-13348335">ASRock B550 Taichi</a></td>
</tr>
<tr>
<td>92 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-4000d-airflow-midi-tower-pc-gehaeuse-13552873">Corsair 4000D Airflow (Midi Tower)</a></td>
</tr>
<tr>
<td>67 CHF</td>
<td>Fan control</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-commander-pro-extern-6x-luefter-kontroller-6332927">Corsair Commander Pro</a></td>
</tr>
<tr>
<td>65 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140mm-1x-pc-luefter-657800">2 √ó Noctua NF-A14 PWM (140mm)</a></td>
</tr>
<tr>
<td>62 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-l12s-7cm-cpu-kuehler-6817433">Noctua NH-L12S</a></td>
</tr>
<tr>
<td>35 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a12x25-pwm-120mm-1x-pc-luefter-9161307">1 √ó Noctua NF-A12x25 PWM (120mm)</a></td>
</tr>
<tr>
<td>60 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/zotac-geforce-gt-710-zone-edition-1gb-grafikkarte-7526609">Zotac GeForce GT 710 Zone Edition (1GB)</a></td>
</tr>
</tbody>
</table>
<p>Base total: 1671 CHF</p>
<p><strong>Option A: Server extension</strong>. Because I had some parts lying around, and because I
wanted to use my router for serving files (from large RAM cache/fast disk), I
went with the following parts:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>309 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/samsung-970-evo-plus-2000gb-m2-2280-ssd-10339167">Samsung 970 EVO Plus 2000GB, M.2 2280</a></td>
</tr>
<tr>
<td>439 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-hyperx-predator-rgb-4x-16gb-ddr4-3600-dimm-288-ram-14062636">64GB HyperX Predator RAM (4x, 16GB, DDR4-3600, DIMM 288)</a></td>
</tr>
<tr>
<td>127 CHF</td>
<td>Power supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-sf600-platinum-600w-pc-netzteil-9034178">Corsair SF600 Platinum (600W)</a></td>
</tr>
<tr>
<td>14 CHF</td>
<td>Power ext</td>
<td><a href="https://www.digitec.ch/de/s1/product/silverstone-atx-24-24pin-verlaengerung-30cm-modding-sleeving-3456447">Silverstone ATX 24-24Pin Extension (30cm)</a></td>
</tr>
<tr>
<td>10 CHF</td>
<td>Power ext</td>
<td><a href="https://www.digitec.ch/de/s1/product/silverstone-atx-extension-8-844pin-30cm-modding-sleeving-5808252">Silverstone ATX Extension 8-8(4+4)Pin (30cm)</a></td>
</tr>
</tbody>
</table>
<p>The Corsair SF600 power supply is not server-related, I just had it lying around. I‚Äôd
recommend going for the Corsair RM650x *2018* (which has longer cables) instead.</p>
<p>Server total: 2851 CHF</p>
<p><strong>Option B: Non-server (router only) alternative</strong>. If you‚Äôre <em>only</em> interested
in routing, you can opt for cheaper low-end disk and RAM, for example:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>112 CHF</td>
<td>Power supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm650x-2018-650w-pc-netzteil-8849945">Corsair RM650x *2018*</a></td>
</tr>
<tr>
<td>33 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-a400-120gb-m2-2280-ssd-10628775">Kingston A400 120GB M.2 SSD</a></td>
</tr>
<tr>
<td>29 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/crucial-ct4g4dfs8266-1x-4gb-ddr4-2666-dimm-288-ram-10447900">Crucial CT4G4DFS8266 4GB DDR4-2666 RAM</a></td>
</tr>
</tbody>
</table>
<p>Non-server total: 1845 CHF</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><p>I had the Noctua NH-L12S CPU fan lying around, so I re-used it.</p>
<p>Noctua <a href="https://www.golem.de/news/nh-p1-noctuas-passiver-cpu-kuehler-schafft-125-watt-2106-157334.html">recently released a passive CPU
cooler</a>,
which might be an interesting alternative.</p>
</div>
  </div>
</aside>

<h2 id="asrock-b550-taichi-mainboard-uefi-setup">ASRock B550 Taichi Mainboard UEFI Setup</h2>
<p>To enable PCIe Bifurcation for our two PCIe 3.0 x8 card setup:</p>
<ol>
<li>Set <code>Advanced &gt; AMD PBS &gt; PCIe/GFX Lanes Configuration</code> <br>
to <code>x8x8</code>.</li>
</ol>
<p>To always turn on the PC after power is lost:</p>
<ol>
<li>Set <code>Advanced &gt; Onboard Devices Configuration &gt; Restore On AC Power Loss</code> <br>
to <code>Power On</code>.</li>
</ol>
<p>To PXE boot (via UEFI) on the onboard ethernet port (management), but disable
slow option roms for PXE boot on the FS.COM network cards:</p>
<ol>
<li>Set <code>Boot &gt; Boot From Onboard LAN</code> <br>
to <code>Enabled</code>.</li>
<li>Set <code>Boot &gt; CSM (Compatibility Support Module) &gt; Launch PXE OpROM Policy</code> <br>
to <code>UEFI only</code>.</li>
</ol>
<h2 id="fan-controller-setup">Fan Controller Setup</h2>
<p>The <a href="https://www.corsair.com/eu/en/Categories/Products/Accessories-%7C-Parts/iCUE-CONTROLLERS/iCUE-Commander-PRO-Smart-RGB-Lighting-and-Fan-Speed-Controller/p/CL-9011110-WW">Corsair Commander Pro</a> fan controller is well-supported on Linux.</p>
<p>After enabling the Linux kernel option <code>CONFIG_SENSORS_CORSAIR_CPRO</code>, the device
shows up in the <code>hwmon</code> subsystem.</p>
<p>You can completely spin up (100% PWM) or turn off (0% PWM) a fan like so:</p>
<pre tabindex="0"><code># echo 255 &gt; /sys/class/hwmon/hwmon3/pwm1
# echo 0 &gt; /sys/class/hwmon/hwmon3/pwm1
</code></pre><p>I run my fans at 13% PWM, which translates to about 226 rpm:</p>
<pre tabindex="0"><code># echo 33 &gt; /sys/class/hwmon/hwmon3/pwm1
# cat /sys/class/hwmon/hwmon3/fan1_input
226
</code></pre><p>Conveniently, the Corsair Commander Pro stores your settings even when power is
lost. So you don‚Äôt even need to run a permanent fan control process, a one-off
adjustment might be sufficient.</p>
<h2 id="power-usage">Power Usage</h2>
<p>The PC consumes about 48W of power when idle (only management network connected)
by default without further tuning. Each extra network link increases power usage
by ‚âà1W:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_600x0_resize_q75_box.jpg"
  alt="graph showing power consumption when enabling network links" title="graph showing power consumption when enabling network links"
  width="600"
  height="370"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Enabling all <a href="https://wiki.gentoo.org/wiki/Ryzen#Kernel">Ryzen-related options</a>
in my Linux kernel and switching to the powersave CPU frequency governor lowers
power usage by ‚âà1W.</p>
<p>On some mainboards, you might need to <a href="https://twitter.com/falcon3754/status/1403102789367119876">force-enable Global
C-States</a> to save
power. Not on the B550 Taichi, though.</p>
<p>I tried undervolting the CPU, but that didn‚Äôt even make ‚âà1W of difference in
power usage. Potentially making my setup unreliable is not worth that little
power saving to me.</p>
<p>I measured these values using a <a href="https://www.conrad.ch/de/p/homematic-hm-es-pmsw1-pl-dn-r5-funk-schaltaktor-1-fach-funk-steckdose-2300-w-2507749.html">Homematic
HM-ES-PMSw1-Pl-DN-R5</a>
I had lying around.</p>
<h2 id="performance">Performance</h2>
<p>Goal 1 is to saturate 25 Gbit/s, for example using two 10 Gbit/s downloads. I‚Äôm
talking about large bulk transfers here, not many small transfers.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">If you‚Äôre interested in the ‚Äúmany small packets‚Äù scenario, check out <a href="https://netoptimizer.blogspot.com/2014/05/the-calculations-10gbits-wirespeed.html">‚ÄúThe
calculations: 10Gbit/s
wirespeed‚Äù</a>
for a good intro, and <a href="https://twitter.com/fragstone/status/1401807613642280963">Thomas Fragstein‚Äôs benchmark tool
recommendations</a>. I
haven‚Äôt run any such tests yet.</div>
  </div>
</aside>

<p>To get a feel for the performance/headroom of the router build, I ran 3 different tests.</p>
<h3 id="test-a-10-gbits-bridging-throughput">Test A: 10 Gbit/s bridging throughput</h3>
<p>For this test, I connected 2 PCs to the router‚Äôs XL710 network card and used <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 to generate a 10 Gbit/s TCP stream between the
2 PCs. The router doesn‚Äôt need to modify the packets in this scenario, only
forward them, so this should be the lightest load scenario.</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_600x0_resize_q75_box.jpg"
  alt="bridging throughput" title="bridging throughput"
  width="600"
  height="315"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h3 id="test-b-10-gbits-nat-throughput">Test B: 10 Gbit/s NAT throughput</h3>
<p>In this test, the 2 PCs were connected such that the router performs <a href="https://en.wikipedia.org/wiki/Network_address_translation">Network
Address Translation
(NAT)</a>, which is
required for downloads from the internet via IPv4.</p>
<p>This scenario is slightly more involved, as the router needs to modify
packets. But, as we can see below, a 10 Gbit/s NAT stream consumes barely more
resources than 10 Gbit/s bridging:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_600x0_resize_q75_box.jpg"
  alt="NAT throughput" title="NAT throughput"
  width="600"
  height="250"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<h3 id="test-c-4--10-gbits-tcp-streams">Test C: 4 √ó 10 Gbit/s TCP streams</h3>
<p>In this test, I wanted to max out the XL710 network card, so I connected 4 PCs
and started an <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 benchmark between each PC
and the router itself, simultaneously.</p>
<p>This scenario consumes about 16% CPU, meaning we‚Äôll most likely have plenty of
headroom even when all ports are maxed out!</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_600x0_resize_q75_box.jpg"
  alt="four 10 Gbit/s streams" title="four 10 Gbit/s streams"
  width="600"
  height="292"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>Tip: make sure to enable the <code>CONFIG_IRQ_TIME_ACCOUNTING</code> Linux kernel option to
<a href="https://tanelpoder.com/posts/linux-hiding-interrupt-cpu-usage/">include IRQ handlers in CPU usage
numbers</a> for
accurate measurements.</p>
<h2 id="alternatives-considered">Alternatives considered</h2>
<p>The passively-cooled SuperServer E302-9D comes with 2 SFP+ ports (10 Gbit/s). It
even comes with 2 PCIe 3.0 x8 capable slots. Unfortunately it seems impossible
to currently buy this machine, at least in Switzerland.</p>
<p>You can find a few more suggestions in the replies of <a href="https://twitter.com/zekjur/status/1361414105211437056">this Twitter
thread</a>. Most are either
unavailable, require a lot more DIY work (e.g. a custom case), or don‚Äôt support
25 Gbit/s.</p>
<h2 id="router-software-router7-porting">Router software: router7 porting</h2>
<p>I wrote <a href="https://router7.org/">router7</a>, my own small home internet router
software in Go, back in 2018, and have been using it ever since.</p>
<p>I don‚Äôt have time to support any users, so I don‚Äôt recommend anyone else use
router7, unless the project really excites you, and the lack of support doesn‚Äôt
bother you! Instead, you might be better served with a more established and
supported router software option. Popular options include
<a href="https://en.wikipedia.org/wiki/OPNsense">OPNsense</a> or
<a href="https://en.wikipedia.org/wiki/OpenWrt">OpenWrt</a>. See also Wikipedia‚Äôs <a href="https://en.wikipedia.org/wiki/List_of_router_and_firewall_distributions">List of
router and firewall
distributions</a>.</p>
<p>To make router7 work for this 25 Gbit/s router PC build, I had to make a few
adjustments.</p>
<p>Because we are using UEFI network boot instead of BIOS network boot, I first had
to make the PXE boot implementation in router7‚Äôs installer <a href="https://github.com/rtr7/tools/commits/00be57a557a5fb2bf8958fbc1417f57ab17fc54b">work with UEFI PXE
boot</a>.</p>
<p>I then enabled a few additional <a href="https://github.com/rtr7/kernel/commits/8694ece47fb07ffeea8a96dc48eb8faa3969250a">kernel options for network and storage
drivers</a>
in router7‚Äôs kernel.</p>
<p>To router7‚Äôs control plane code, I <a href="https://github.com/rtr7/router7/commits/b88ddd41c377087cc4b6d1fe6c7a5550399a730c">added bridge network device
configuration</a>,
which in my previous 2-port router setup was not needed.</p>
<p>During development, I compiled a few Linux programs statically or copied them
with their dependencies (‚Üí <a href="https://gokrazy.org/prototyping/">gokrazy
prototyping</a>) to run them on router7, such as
<a href="https://manpages.debian.org/sensors.1"><code>sensors(1)</code></a>
, <a href="https://manpages.debian.org/ethtool.8"><code>ethtool(8)</code></a>
,
as well as iproute2‚Äôs <a href="https://manpages.debian.org/ip.8"><code>ip(8)</code></a>
 and <a href="https://manpages.debian.org/bridge.8"><code>bridge(8)</code></a>
 implementation.</p>
<h2 id="next-steps">Next Steps</h2>
<p>Based on my tests, the hardware I selected seems to deliver enough performance
to use it for distributing a 25 Gbit/s upstream link across multiple 10 Gbit/s
devices.</p>
<p>I won‚Äôt know for sure until the <a href="https://twitter.com/fiber7_ch">fiber7</a> Point Of
Presence (POP, German Anschlusszentrale) close to my home is upgraded to support
25 Gbit/s ‚ÄúFiber7-X2‚Äù connections. As I mentioned, unfortunately <a href="https://twitter.com/init7/status/1403287499175235584">the upgrade
plan is delayed</a> due to
the component shortage. I‚Äôll keep you posted!</p>
<h2 id="other-builds">Other Builds</h2>
<p>In case my build doesn‚Äôt exactly match your requirements, perhaps these others
help inspire you:</p>
<ul>
<li><a href="https://medium.com/@sdier/new-internet-service-calls-for-a-new-router-4dbebbdc6dbd">Scott Dier‚Äôs Intel NUC 9 Pro build</a></li>
</ul>
<h2 id="appendix-a-dpdk-test">Appendix A: DPDK test</h2>
<p><a href="https://twitter.com/ipngnetworks">Pim</a> ran a <a href="https://www.dpdk.org/">DPDK</a>
based loadtester called <a href="https://trex-tgn.cisco.com/">T-Rex</a> on this
machine. Here‚Äôs his summary of the test:</p>
<p>For DPDK, this hardware does 4x10G at 64b frames. It does not do 6x10G as it
tops out at 62Mpps using 4 cores (of 15.5Mpps per core).</p>
<p>I couldn&rsquo;t test 25G symmetric [because we lacked a 25G DAC cable], but
extrapolating from the numbers, 3 CPUs source and sink ~24.6Gbit per core, so
we&rsquo;d probably make it, leaving 1 core for OS and 2 cores for controlplane.</p>
<p>If the machine had a 12 core Ryzen, it would saturate all NICs with room to
spare. So that&rsquo;s what I&rsquo;ll end up buying :)</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test.png"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_600x0_resize_box_3.png"
  alt="DPDK test" title="DPDK test"
  width="600"
  height="447"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Laptop review: ThinkPad X1 Extreme (Gen 2)]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/"/>
    <id>https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/</id>
    <published>2021-06-05T20:43:00+02:00</published>
    <content type="html"><![CDATA[














<a href="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/2021-06-02-thinkpad-x1-extreme.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/2021-06-02-thinkpad-x1-extreme_hu855bbe0a9c47ac557e5b09db74fa3b06_2918849_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/2021-06-02-thinkpad-x1-extreme_hu855bbe0a9c47ac557e5b09db74fa3b06_2918849_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/2021-06-02-thinkpad-x1-extreme_hu855bbe0a9c47ac557e5b09db74fa3b06_2918849_600x0_resize_q75_box.jpg"
  alt="ThinkPad X1 Extreme Gen 2, pear for scale" title="ThinkPad X1 Extreme Gen 2, pear for scale"
  width="600"
  height="450"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>For many of my school and university years, I used and liked my ThinkPad X200
ultraportable laptop. But now that these years are long gone, I realized my
use-case for laptops had changed: instead of carrying my laptop with me every
day, I am now only bringing it on occasion, for example when I travel to
conferences, visit friends, or do volunteer work.</p>
<p>After the ThinkPad X200, I used a few different laptops:</p>
<ul>
<li>MacBook Pro 13&quot; Retina, bought for its screen</li>
<li>ThinkPad X1 Carbon, which newly introduced a hi-dpi screen to ThinkPads</li>
<li>Dell XPS 9360, for a change, to try a device that ships with Linux</li>
</ul>
<p>With each of these devices, I have felt limited by the lack of connectors and
slim compute power that comes with the Ultrabook brand, even after years of
technical progress.</p>
<p>More compute power is nice to be able to work on projects with larger data sets,
for example debiman (scanning and converting all manpages in Debian), or distri
(building Linux packages).</p>
<p>More peripheral options such as USB ports are nice when connecting a keyboard,
trackball, USB-to-serial adapter, etc., to work on a micro controller or
Raspberry Pi project, for example.</p>
<p>So, I was ready to switch from the heaviest Ultrabooks to the lightest of the
‚Äúmobile workstation‚Äù category, when I stumbled upon Lenovo‚Äôs ThinkPad X1 Extreme
(Gen 2), and it piqued my curiosity.</p>
<h2 id="peripherals">Peripherals</h2>
<p>Let me start by going into the key peripherals of a laptop: keyboard, touchpad
and screen. I will talk about these independently from the remaining hardware
because they define the experience of using the computer.</p>
<h3 id="keyboard">Keyboard</h3>
<p>After having used the Dell XPS 9360 for a few years, I can confidently say that
the keyboard of the ThinkPads is definitely much better, and in a noticeable
way.</p>
<p>It‚Äôs not that the Dell keyboards are <em>bad</em>. But comparing the Dell and ThinkPad
side-by-side makes it really clear that the ThinkPad keyboards are the best
notebook keyboards.</p>
<p>On the ThinkPad keyboard, every key press lands exactly as I imagine. Never do I
need to hit a key twice because I didn‚Äôt press it just-right, and never do I
notice additional ghost key presses.</p>
<p>Even though I connect my external Kinesis Advantage keyboard when doing longer
stretches of work, the quality of the built-in keyboard matters: a good keyboard
enables using the laptop on the couch.</p>
<h3 id="touchpad">Touchpad</h3>
<p>Unfortunately, while the keyboard is great, I can‚Äôt say the same about the
touchpad. I mean, it‚Äôs not terrible, but it‚Äôs also not good by any stretch.</p>
<p>This seems to be the status quo with PC touchpads for decades. It really blows
my mind that Apple‚Äôs touchpads are consistently so much better!</p>
<p>My only hope is that <a href="https://github.com/sponsors/gitclear">Bill Harding
(GitClear)</a>, who is working on improving
the Linux touchpad experience, will eventually find a magic software tweak or
something‚Ä¶</p>
<p>As <a href="https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_X1_Extreme_(Gen_2)#Touchpad">mentioned on the
ArchWiki</a>,
I also had to adjust the sensitivity like so:</p>
<pre tabindex="0"><code>% xinput set-prop &#39;SynPS/2 Synaptics TouchPad&#39; &#39;libinput Accel Speed&#39; 0.5
</code></pre><h3 id="display">Display</h3>
<p>I have high demands regarding displays: since 2013, every device of mine has a
hi-dpi display.</p>
<p>The industry hasn‚Äôt improved displays across the board as fast as I‚Äôd like, so
non-hi-dpi displays are still quite common. The silver lining is that it makes
laptop selection a little easier for me: anything without a decent display I can
discard right away.</p>
<p>I‚Äôm glad to report that the 4K display in the ThinkPad X1 Extreme with its
3840x2160 pixels is sharp, bright, and generally has good viewing angles.</p>
<p>It‚Äôs also a touchscreen, which I don‚Äôt strictly need, but it‚Äôs nice to use it
from time to time.</p>
<p>I use the display in 200% scaling mode, i.e. I set <code>Xft.dpi: 192</code>. See also
<a href="https://wiki.archlinux.org/index.php/HiDPI">HiDPI in ArchWiki</a>.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Tip</strong>: In case your brightness control keys don‚Äôt work, check if the <a href="https://gitlab.freedesktop.org/drm/intel/issues/510">required
patches</a> have not been
applied in your environment yet.</div>
  </div>
</aside>

<h2 id="hardware">Hardware</h2>
<p>Spec-wise, the ThinkPad X1 Extreme is a beast!</p>















<a href="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/specs.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/specs_hub98e688078adf6db327505acb00135c2_814598_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/specs_hub98e688078adf6db327505acb00135c2_814598_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/specs_hub98e688078adf6db327505acb00135c2_814598_600x0_resize_q75_box.jpg"
  alt="ThinkPad X1 Extreme Specs" title="ThinkPad X1 Extreme Specs"
  width="600"
  height="475"
  style="

border: 1px solid #000;

"
  
  loading="lazy"></a>



<p>The build quality seems very robust to me.</p>
<p>Another big plus of the ThinkPad series over other laptop series is the
availability of the official Hardware Maintenance Manual: you can put ‚ÄúThinkPad
X1 Extreme Gen 2 Hardware Maintenance Manual‚Äù into Google and will find
<a href="https://download.lenovo.com/pccbbs/mobiles_pdf/p1_gen2_x1extreme_hmm_v1.pdf"><code>p1_gen2_x1extreme_hmm_v1.pdf</code></a>
as the first hit. This manual describes in detail how to repair or upgrade your
device if you want to (or have to) do it yourself.</p>
<h3 id="wifi">WiFi</h3>
<p>The built-in Intel AX200 WiFi interface works fine, provided you have a
new-enough <code>linux-firmware</code> package and kernel version installed.</p>
<p>I had trouble with Linux 5.6.0, and Linux 5.6.5 fixed it. Luckily, at the time
of writing, Linux 5.11 is the most recent release, so most distributions should
be recent enough for things to just work.</p>
<p>The WiFi card reaches almost the same download speed as the most modern WiFi
device I can test: a MacBook Air M1. Both are connected to my <a href="https://unifi-hd.ui.com/">UniFi
UAP-AC-HD</a> access point.</p>
<table>
<thead>
<tr>
<th>Laptop</th>
<th>Download</th>
<th>Upload</th>
</tr>
</thead>
<tbody>
<tr>
<td>ThinkPad X1 Extreme</td>
<td>500 Mbit/s</td>
<td>150 Mbit/s</td>
</tr>
<tr>
<td>MacBook Air M1</td>
<td>600 Mbit/s</td>
<td>500 Mbit/s</td>
</tr>
</tbody>
</table>
<p>I‚Äôm not sure why the upload speed is so low in comparison.</p>
<h3 id="gpu">GPU</h3>
<p>The GPU in this machine is by far the most troublesome bit of hardware.</p>
<p>I had hoped that after many years of laptops containing Intel/nVidia hybrid
graphics, this setup would largely work, but was disappointed.</p>
<p>Both the proprietary nVidia driver and the <code>nouveau</code> driver would not work
reliably for me. I ran into kernel error messages and hard-freezes, with even
SSH sessions to the machine breaking.</p>
<p>In the end, I blacklisted the <code>nouveau</code> driver to use Intel graphics only:</p>
<pre tabindex="0"><code>% echo blacklist nouveau | sudo tee /etc/modprobe.d/blacklist.conf 
</code></pre><p>Without the nVidia driver, the GPU will not go into powersave mode, so I remove
it from the PCI bus entirely to save power:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#007020">#!/bin/zsh
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span>
</span></span><span style="display:flex;"><span>sudo tee /sys/bus/pci/devices/0000<span style="color:#4070a0;font-weight:bold">\:</span>01<span style="color:#4070a0;font-weight:bold">\:</span>00.0/remove <span style="color:#666">&lt;&lt;&lt;</span><span style="color:#40a070">1</span>
</span></span><span style="display:flex;"><span>sudo tee /sys/bus/pci/devices/0000<span style="color:#4070a0;font-weight:bold">\:</span>01<span style="color:#4070a0;font-weight:bold">\:</span>00.1/remove <span style="color:#666">&lt;&lt;&lt;</span><span style="color:#40a070">1</span>
</span></span></code></pre></div><p>You can only re-awaken the GPU with a reboot.</p>
<p>Obviously this isn‚Äôt a great setup ‚Äî I would prefer to be able to actually use
the GPU. If you have any tips or a better experience, please let me know.</p>
<p>Also note that the HDMI port will be unusable if you go this route, as the HDMI
port is connected to the nVidia GPU only.</p>
<h3 id="battery-life">Battery life</h3>
<p>The 80 Wh battery lasts between 5 to 6 hours for me, without any extra power
saving tuning beyond what the Linux distribution Fedora 33 comes with by
default.</p>
<p>This is good enough for using the laptop away from a power socket from time to
time, which matches my expectation for this kind of mobile workstation.</p>
<h2 id="software-support">Software support</h2>
<p>Linux support is generally good on this machine! Yes, I provide a few pointers
in this article regarding problems, patches and old software versions. But, if
you use a newer Linux distribution, all of these fixes are included and things
just work out of the box. I tested with Fedora 33.</p>
<p>For a few months, I was using this laptop exclusively with my research Linux
distribution <a href="https://distr1.org/">distri</a>, so even if you just track upstream
software closely, the machine works well.</p>
<h3 id="firmware-updates">Firmware updates</h3>
<p>Lenovo partnered with the <a href="https://fwupd.org/">Linux Vendor Firmware Service Project
(LVFS)</a>, which means that through <code>fwupd</code>, ThinkPad laptops
such as this X1 Extreme can easily receive firmware updates!</p>
<p>This is a huge improvement in comparison to earlier ThinkPad models, where you
had to jump through hoops with Windows-only software, or CD images that you
needed to boot just right.</p>
<p>If your laptop has a very old firmware version (before <code>1.30</code>), you might be
affected by the <a href="https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_X1_Extreme_(Gen_2)#Skipping_keystrokes">skipping
keystrokes</a>
issues. You can check using the always-handy <a href="https://manpages.debian.org/lshw.1"><code>lshw(1)</code></a>

tool.</p>
<h2 id="performance">Performance</h2>
<p>The specific configuration of my ThinkPad is:</p>
<table>
<thead>
<tr>
<th></th>
<th>ThinkPad X1 Extreme Spec (2020)</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>Intel Core i7-9750H CPU @ 2.60GHz</td>
</tr>
<tr>
<td>RAM</td>
<td>2 √ó 32 GB Samsung M471A4G43MB1-CTD</td>
</tr>
<tr>
<td>Disk</td>
<td>2 √ó SAMSUNG MZVLB2T0HALB-000L7 NVMe disk</td>
</tr>
</tbody>
</table>
<p>You can google for CPU benchmarks and comparisons yourself, and those likely are
more scientific and carefully done than I have time for.</p>
<p>What I can provide however, is a comparison of working on one of my projects on
the ThinkPad vs. on my workstation, an Intel Core i9-9900K that I bought in
2018:</p>
<table>
<thead>
<tr>
<th></th>
<th>Workstation Spec (2018)</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>Intel(R) Core(TM) i9-9900K CPU @ 3.60GHz</td>
</tr>
<tr>
<td>RAM</td>
<td>4 √ó Corsair CMK32GX4M2A2666C16</td>
</tr>
<tr>
<td>Disk</td>
<td>Corsair Force MP600 M.2 NVMe disk</td>
</tr>
</tbody>
</table>
<p>Specifically, I am comparing how long my manpage static archive generator
<a href="https://github.com/Debian/debiman/">debiman</a> takes to analyze and render all
manpages in Debian unstable, using the following command:</p>
<pre tabindex="0"><code>ulimit -n 8192; time ~/go/bin/debiman \
  -keyring=/usr/share/keyrings/debian-archive-keyring.gpg \
  -sync_codenames=, \
  -sync_suites=unstable \
  -serving_dir=/srv/man/benchmark \
  -inject_assets=~/go/src/github.com/Debian/debiman/debian-assets \
  -concurrency_render=20 \
  -alternatives_dir=~/go/src/github.com/Debian/debiman/piuparts
</code></pre><p>On both machines, I ensured that:</p>
<ol>
<li>The CPU performance governor was set to <code>performance</code></li>
<li>A warm <code>apt-cacher-ng</code> cache was present, i.e. network download was not part of the test.</li>
<li>Linux kernel caches were dropped using <code>echo 3 | sudo tee /proc/sys/vm/drop_caches</code></li>
<li>I was using <a href="https://github.com/Debian/debiman/tree/f78c160f05c1f4d25c7836a6ca9198019947c1b5">debiman git revision <code>f78c160</code></a></li>
</ol>
<p>Here are the results:</p>
<table>
<thead>
<tr>
<th>Machine</th>
<th>Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>i9-9900K Workstation</td>
<td>4:57,10 (100%)</td>
</tr>
<tr>
<td>ThinkPad X1 Extreme (Gen 2)</td>
<td>7:19,56 (147%)</td>
</tr>
</tbody>
</table>
<p>This reaffirms my impression that even high-end laptop hardware just cannot beat
a workstation setup (which has more space and better thermals), but it comes
close enough to be useful.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Positives:</p>
<ul>
<li>
<p>The ergonomics of the device really are great. It is a pleasure to type on a
first-class, full-size ThinkPad keyboard. The screen has good quality and a
high resolution.</p>
</li>
<li>
<p>Performance-wise, this machine can almost replace a proper workstation.</p>
</li>
</ul>
<p>Negatives are:</p>
<ul>
<li>the mediocre battery life</li>
<li>an annoyingly loud fan that spins up too frequently</li>
<li>poor software/driver support for hybrid nVidia GPUs.</li>
</ul>
<p>Notably, all of these could be improved by better power saving, so perhaps it‚Äôs
just a matter of time until Linux kernel developers land some improvements‚Ä¶? :)</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Network Storage PC Hardware (2019)]]></title>
    <link href="https://michael.stapelberg.ch/posts/2019-10-23-nas/"/>
    <id>https://michael.stapelberg.ch/posts/2019-10-23-nas/</id>
    <published>2019-10-23T00:00:00+00:00</published>
    <content type="html"><![CDATA[<p>One of my two NAS builds recently died, so I bought a new one until I find some
time to debug the old one. Since a couple of people have been asking me what I
would recommend nowadays based on my <a href="/posts/2016-11-21-gigabit-nas-coreos/">November 2016 article ‚ÄúGigabit NAS
(running CoreOS)‚Äù</a>, I figured I would
share the new hardware listing:</p>
<table width="100%" style="margin-top: 1.5em; margin-bottom: 1.5em; margin-left: 2em">
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
<tr>
<td>54.00 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/en/s1/product/silverstone-sst-sg05bb-lite-cube-pc-cases-3525365">Silverstone SST-SG05BB-Lite (cube)</a></td>
</tr>
<tr>
<td valign="top">60.40 CHF</td>
<td valign="top">Mainboard</td>
<td><a href="https://www.digitec.ch/en/s1/product/asrock-ab350-gaming-itxac-am4-amd-b350-mini-itx-motherboards-7022839">AsRock AB350 Gaming-ITX/ac (AM4, AMD B350, Mini ITX)</a><br>
<strong>Be sure to <a href="https://www.asrock.com/MB/AMD/Fatal1ty%20AB350%20Gaming-ITXac/index.asp#BIOS">update the UEFI</a> to the latest version (6.00)!</strong></td>
</tr>
<tr>
<td>62.30 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/en/s1/product/amd-a6-9500e-2-am4-3ghz-processors-6436852">AMD A6-9500E (2, AM4, 3GHz)</a></td>
</tr>
<tr>
<td>20.10 CHF</td>
<td>Cooler</td>
<td><a href="https://www.digitec.ch/en/s1/product/arctic-alpine-690cm-cpu-coolers-11053306">Arctic Alpine AM4 Passive</a></td>
</tr>
<tr>
<td>42.80 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/en/s1/product/kingston-valueram-1x-8gb-ddr4-2400-dimm-288-memory-6149789">Kingston ValueRAM (1x, 8GB, DDR4-2400, DIMM 288)</a></td>
</tr>
<tr>
<td>29.00 CHF</td>
<td>Fan</td>
<td><a href="https://www.digitec.ch/en/s1/product/noctua-nf-s12a-uln-120mm-1x-pc-fans-2451401">Noctua Nf-s12a ULN (120mm, 1x)</a></td>
</tr>
<tr>
<td valign="top">55.00 CHF</td>
<td valign="top">PSU</td>
<td><a href="https://www.digitec.ch/en/s1/product/silverstone-st30sf-300w-sfx-300w-power-supply-computer-5808725">Silverstone ST30SF 300W SFX (300W)</a></td>
</tr>
<tr>
<td valign="top">27.50 CHF</td>
<td valign="top">System disk</td>
<td><a href="https://www.digitec.ch/en/s1/product/intenso-high-performance-120gb-25-ssd-5984710?tagIds=76-535">Intenso High Performance (120GB, 2.5") SATA</a></td>
</tr>
<tr>
<td>351.10 CHF</td>
<td colspan="2"><strong>total sum</strong></td>
</tr>
</table>
<p>In <a href="/posts/2016-11-21-gigabit-nas-coreos/">November 2016 I paid only 225 CHF</a>, i.e. 126 CHF less.</p>
<p>Why is this build so much more expensive? There are two major reasons:</p>
<h3 id="the-am4-platform">The AM4 platform</h3>
<p>The AM4 platform replaced the AM1 APU series as the cheapest broadly available
AMD platform.</p>
<p>As you might have gathered from the links in the hardware listing above, I
define ‚Äúbroadly available‚Äù as available at digitec, a large electronics shop in
Z√ºrich.</p>
<p>They offer same-day orders for pick-up in their Z√ºrich location during Weekdays
and on Saturdays, so it is kind of like being on a hardware support plan :-)</p>
<p>Unfortunately, the cheapest AM4 CPU is a lot more expensive (+ 23.31 CHF).</p>
<p>Also, there are (currently?) no AM4 mainboards with DC barrel power plugs,
meaning more expensive ATX power supplies (+ 26.30 CHF) become necessary.</p>
<h3 id="additional-components-fan-and-system-disk">Additional components: fan and system disk</h3>
<p>Definitely invest in the Noctua 120mm ULN (Ultra Low Noise) fan (+ 29.00
CHF). The fan that comes in the Silverstone case is pretty noisy, and that might
be bothersome if you don‚Äôt have the luxury of stashing your NAS away in the
basement.</p>
<p>In my last build, I had an SSD lying around that I used as system disk, this
time I had to buy one (+ 27.50 CHF).</p>
<p>Note that I intentionally picked a SATA SSD over an M.2 SSD: the M.2 slot of the
AB350 is on the back of the mainboard, so an M.2 SSD is harder to reach. The
performance disadvantage of a SATA SSD compared to an M.2 SSD might be
measurable, but irrelevant for my day-to-day usage. Quickly accessing the
physical hardware is more important.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Dell 8K4K monitor (Dell UP3218K)]]></title>
    <link href="https://michael.stapelberg.ch/posts/2017-12-11-dell-up3218k/"/>
    <id>https://michael.stapelberg.ch/posts/2017-12-11-dell-up3218k/</id>
    <published>2017-12-11T10:05:00+01:00</published>
    <content type="html"><![CDATA[<h3 id="background">Background</h3>
<p>Ever since I first used a MacBook Pro with Retina display back in 2013, I‚Äôve
been madly in love with hi-DPI displays. I had seen the device before, and
marvelled at brilliant font quality with which scientific papers would be
rendered. But it wasn‚Äôt until I had a chance to use the device for a few hours
to make i3 compatible with hi-DPI displays that I realized what a difference it
makes in the day-to-day life.</p>
<p>Note that when I say ‚Äúhi-DPI display‚Äù, I mean displays with an integer multiple
of 96 dpi, for example displays with 192 dpi or 288 dpi. I explain this because
some people use the same term to mean ‚Äúanything more than 96 dpi‚Äù.</p>
<p>In other words, some people are looking for many pixels (e.g. running a 32 inch
display with 3840x2160 pixels, i.e. 137 dpi, with 100% scaling), whereas I
desire crisp/sharp text (i.e. 200% scaling).</p>
<p>Hence, in 2014, I bought the Dell UP2414Q with 3840x2160 on 24&quot; (185 dpi), which
was one of the first non-Apple devices to offer a dpi that Apple would market as
‚ÄúRetina‚Äù.</p>
<p>After getting the Dell UP2414Q, I replaced all displays in my life with hi-DPI
displays one by one. I upgraded my phone, my personal laptop, my work laptop and
my monitor at work.</p>
<h3 id="dell-up3218k">Dell UP3218K</h3>
<p>In January 2017, Dell introduced the Dell Ultrasharp UP3218K monitor at the
Consumer Electronics Show (CES). It is the world‚Äôs first available 8K monitor,
meaning it has a resolution of 7680x4320 pixels at a refresh rate of 60 Hz. The
display‚Äôs dimensions are 698.1mm by 392.7mm (80cm diagonal, or 31.5 inches),
meaning the display shows 280 dpi.</p>
<p>While the display was available in the US for quite some time, it took until
October 2017 until it became available in Switzerland.</p>
<h3 id="compatibility">Compatibility</h3>
<p>The UP3218K requires connecting two separate DisplayPort 1.4 cables in order to
reach the native resolution and refresh rate. When connecting only one cable,
you will be limited to a refresh rate of 30 Hz, which is a very noticeable
annoyance on any display: you can literally see your mouse cursor lag
behind. Ugh.</p>
<p>Note that this mode of connection does not use Multi-Stream Transport (MST),
which was a trick that first-generation 4K displays used. Instead, it uses the
regular Single-Stream Transport (SST), but two cables.</p>
<p>As of November 2017, only latest-generation graphics cards support DisplayPort
1.4 at all, with e.g. the <a href="https://www.nvidia.com/en-us/geforce/products/10series/geforce-gtx-1060/">nVidia GTX
1060</a>
being marketed as ‚ÄúDisplayPort 1.2 Certified, DisplayPort 1.3/1.4 Ready‚Äù.</p>
<h4 id="amd-radeon-pro-wx7100">AMD Radeon Pro WX7100</h4>
<p>Hence, I thought I would play it safe and buy a graphics card which is
explicitly described as compatible with the UP3218K: I ordered an AMD Radeon Pro
WX7100.</p>
<p>Unfortunately, I have to report that the WX7100 is only able to drive the
monitor at native resolution when using Windows. On Linux, I was limited to
1920x1080 at 60Hz (!) when using the Open Source amdgpu driver. With the Closed
Source amdgpu-pro driver, I reached 3840x2160 at 60Hz, which is still not the
native resolution. Also, the amdgpu-pro driver is a hassle to install: it
requires an older kernel and isn‚Äôt packaged well in Debian.</p>
<h4 id="nvidia-geforce-gtx-1060">nVidia GeForce GTX 1060</h4>
<p>I returned the WX7100 in exchange for the cheapest and most quiet GeForce 10
series card with 2 DisplayPort outputs I could find. My choice was the <a href="https://www.msi.com/Graphics-card/GeForce-GTX-1060-GAMING-X-6G.html">MSI
GeForce GTX 1060 GAMING X 6G (MSI
V328-001R)</a>. The
card seems like overkill, given that I don‚Äôt intend to play games on this
machine, but lower-end cards all come with at most one DisplayPort output.</p>
<p>Regardless, I am happy with the card. It indeed is silent, and with the Closed
Source driver, it powers the UP3218K without any trouble. Notably, it supports
RandR 1.5, which I‚Äôll talk about a bit more later.</p>
<h4 id="compatibility-matrix">Compatibility Matrix</h4>
<table>
<thead>
<tr>
<th>Operating System</th>
<th>Graphics Card</th>
<th style="text-align:center">Driver</th>
<th>Resolution</th>
</tr>
</thead>
<tbody>
<tr>
<td>Windows</td>
<td>Radeon WX7100</td>
<td style="text-align:center">yes</td>
<td>7680x4320 @ 60 Hz</td>
</tr>
<tr>
<td>Windows</td>
<td>GeForce 1060</td>
<td style="text-align:center">yes</td>
<td>7680x4320 @ 60 Hz</td>
</tr>
<tr>
<td>Linux</td>
<td>Radeon WX7100</td>
<td style="text-align:center">amdgpu</td>
<td>1920x1080 @ 60 Hz</td>
</tr>
<tr>
<td>Linux</td>
<td>Radeon WX7100</td>
<td style="text-align:center">pro</td>
<td>3840x2160 @ 60 Hz</td>
</tr>
<tr>
<td>Linux</td>
<td>GeForce 1060</td>
<td style="text-align:center">nVidia</td>
<td>7680x4320 @ 60 Hz</td>
</tr>
</tbody>
</table>
<h4 id="recommendation">Recommendation</h4>
<p>If you want to play it safe, buy an nVidia card of the GeForce 10 series. Verify
that it says ‚ÄúDisplayPort 1.4 Ready‚Äù, and that it comes with two DisplayPort
outputs.</p>
<p>I read about <a href="https://heise.de/-3900646">improvements of the amdgpu driver for the upcoming Linux
4.15</a>, but I don‚Äôt know whether that will help with
the problems at hand.</p>
<h3 id="impressions">Impressions</h3>
<p>The unboxing experience is well-designed, and all components make a good
impression. All cables which you will need (two DisplayPort cables, a power
cable, a USB cable) are included and seem to be of high quality.</p>
<p>The display has a thin bezel, much thinner than my other monitors ViewSonic
VX2475Smhl-4K or Dell UP2414Q.</p>
<p>The power LED is white and not too bright. The on-screen menu reacts quickly and
is reasonably intuitive.</p>
<p>The built-in USB hub works flawlessy, even with devices which don‚Äôt work on my
standalone USB3 hub (for reasons which I have yet to find out).</p>
<h4 id="display-quality">Display Quality</h4>
<p>The display quality of the screen is stunningly good.</p>
<p>It was only when I configured 300% scaling that I realized why some Chromebooks
had a distinctly different look and feel from other computers I had used: I
always assumed they differed in font rendering somehow, but the actual
difference is just the screen DPI: fonts look distinctly better with 288 dpi
than with 192 dpi, which of course looks better than 96 dpi.</p>
<p>Some people might wonder whether an 8K display is any better than a 4K display,
and I now can answer that question with a decisive ‚Äúyes, one can easily see the
difference‚Äù. I‚Äôm not sure if the difference between a 288 dpi and a 384 dpi
display would be visible, but we‚Äôll see when we get there :-).</p>
<h4 id="glossy">Glossy</h4>
<p>What I didn‚Äôt expect is that the UP3218K is a glossy display, as opposed to a
matte display. Depending on the brightness and colors, you might see
reflections. With my preferred brightness of 50%, I can clearly see reflections
when displaying darker colors, e.g. on a black terminal emulator background, or
even in my grey Emacs theme.</p>
<p>While one can mentally ignore the reflections after a little while, I still
consider the glossyness a mild annoyance. I hope as 8K displays become more
prevalent, display vendors will offer matte 8K displays as well.</p>
<h4 id="scaling">Scaling</h4>
<p>I found it interesting that the display works well in both 200% scaling and 300%
scaling.</p>
<p>When running the display at 200% scaling, you get 3840x2160 (4K resolution)
‚Äúlogical pixels‚Äù, but sharper.</p>
<p>When running the display at 300% scaling, you get 2560x1440 ‚Äúlogical pixels‚Äù,
but extremely sharp.</p>
<p>I would say it is a subjective preference which of the two settings to use. Most
likely, people who prefer many pixels would run the display at 200%, whereas I
prefer the 300% scaling mode for the time being.</p>
<h3 id="linux-compatibility--configuration">Linux compatibility / configuration</h3>
<p>To use this display without gross hacks, ensure all relevant components in your
software stack support RandR 1.5. My known working configuration is:</p>
<ul>
<li>Xorg 1.19.5</li>
<li>nVidia driver 375.82</li>
<li>libxcb 1.12</li>
<li>i3 4.14</li>
<li>i3lock 2.10</li>
</ul>
<p>With the following command, you can create a RandR MONITOR object spanning the
DisplayPort outputs DP-4 and DP-2:</p>
<pre tabindex="0"><code>xrandr --setmonitor up3218k auto DP-4,DP-2
</code></pre><p>I place this command in my <code>~/.xsession</code> before starting <a href="https://i3wm.org/">i3</a>.</p>
<p>Theoretically, Xorg could create a MONITOR object automatically. I filed <a href="https://bugzilla.freedesktop.org/show_bug.cgi?id=103794">a
feature request</a> for
this.</p>
<h3 id="scaling-compatibility">Scaling compatibility</h3>
<p>With regards to scaling issues, the situation is very similar to any other
monitor which requires scaling. Applications which were updated to support 200%
scaling seem to work with 300% scaling just as well.</p>
<p>Of course, applications which were not yet updated to work with scaling look
even smaller than on 200% displays, so it becomes more of a nuisance to use
them. As far as I can tell, the most likely offender are Java applications such
as JDownloader.</p>
<h3 id="buzzing-noise">Buzzing noise</h3>
<p>Unfortunately, the monitor emits a high-pitched buzzing noise, very similar to
Coil Whine. The noise is loud enough to prevent focused work without listening
to music.</p>
<p>I verified that this symptom was happening with Windows and Linux, on two
different computers, with default monitor settings, and even when no input
source was connected at all.</p>
<p>Finally, I contacted Dell support about it. In the call I received on the next
business day, they were very forthcoming and offered to replace the monitor.</p>
<p>The replacement monitor still emits some noise, but much less pronounced. I
think I can easily ignore the noise.</p>
<p><strong>Update after 2+ years</strong>: I had honestly forgotten that the replacement monitor
also made noise. Maybe it went away, or my ears have gotten worse, or I just
didn‚Äôt notice for long enough.</p>
<h3 id="wakeup-issues">Wakeup issues</h3>
<p>Rarely (less than once a week), when waking up the monitor from DPMS standby
mode, only the left half of the screen would appear on my monitor.</p>
<p>This can be fixed by turning the monitor off and on again.</p>
<p>My theory is that one of the scalers does not manage to synchronize with the
video card, but I don‚Äôt know for sure.</p>
<p>Interestingly enough, I also encountered this issue with the Dell UP2414Q I
bought in 2014. My workaround is to power down that display using its power
button in the evenings, and power it up in the mornings.</p>
<p><strong>Update after 2+ years</strong>: I have now figured out that the monitor wakes up
reliably after:</p>
<ol>
<li>
<p>Swapping the cables around at my Graphics Card, i.e. using output <code>DP-4</code> for
the left monitor half and output <code>DP-0</code> for the right monitor half, not the
other way around:</p>
<pre tabindex="0"><code>xrandr \
--output DP-4 --mode 3840x4320 --panning 0x0+0+0 \
--output DP-0 --mode 3840x4320 --panning 0x0+3840+0 --right-of DP-4
</code></pre></li>
<li>
<p>When powering on the monitor, waiting until it shows the dialog box ‚ÄúNo
signal on DP1‚Äù, and only then waking up my machine to generate a signal.</p>
</li>
</ol>
<p>When disconnecting and re-connecting the monitor to another machine,
I found these steps the most reliable:</p>
<ol>
<li>Power off the monitor, then unplug the two DisplayPort cables.</li>
<li>Plug in both cables, then power the monitor on again.
<br>
An easy mistake to make is to not push the DisplayPort connector in all the
way. This issue usually manifests itself as the monitor still showing a picture
(because the second cable likely is plugged in correctly), but the full
resolution not being available.</li>
</ol>
<p>I have used these two steps twice a workday for weeks on end, and the monitor
came up reliably every single time.</p>
<h3 id="power-usage">Power Usage</h3>
<p>When the display is turned on, it consumes about 70W of power.</p>
<p>But, when the display enters ‚Äúpower saving mode‚Äù, for example because you ran
<code>xset dpms force off</code>, it still consumes 30W of power! Therefore, better turn it
off with the button every night, so that it consumes less than 1W.</p>
<h3 id="conclusion">Conclusion</h3>
<p>For me, this monitor is worth it: I am okay with paying the hefty Research &amp;
Development tax that first-to-market products such as this monitor have. I like
to think that I‚Äôm voting with my wallet to make sure vendors notice my interest
in ‚ÄúRetina‚Äù displays.</p>
<p>For most people, I would recommend to wait until the second or third generation
of 8K monitors. By then, I expect most issues to be resolved, compatibility to
not be a concern, and vendors focusing on extra features. Hopefully, we‚Äôll
eventually see matte 8K monitors with higher refresh rates than 60 Hz.</p>
<h3 id="technical-details">Technical details</h3>
<p>In the hope the following is useful (perhaps for debugging?) to anyone:</p>
<ul>
<li><a href="/dell-up3218k/edid.hex.txt">hex dump of the EDID data block</a></li>
<li><a href="/dell-up3218k/edid-decode.txt">decoded EDID block</a></li>
<li><a href="/dell-up3218k/xrandr--prop.txt"><code>xrandr --prop</code> output</a></li>
<li><a href="/dell-up3218k/xorg.0.log">Xorg.0.log</a></li>
</ul>
]]></content>
  </entry>
</feed>
