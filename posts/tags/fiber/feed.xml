<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Michael Stapelbergs Website: posts tagged fiber</title>
  <link href="https://michael.stapelberg.ch/posts/tags/fiber/feed.xml" rel="self"/>
  <link href="https://michael.stapelberg.ch/posts/tags/fiber/"/>


  <id>https://michael.stapelberg.ch/posts/tags/fiber/</id>
  <generator>Hugo -- gohugo.io</generator>
  <entry>
    <title type="html"><![CDATA[25 Gigabit Linux internet router PC build]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/"/>
    <id>https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/</id>
    <published>2021-07-10T13:43:00+02:00</published>
    <content type="html"><![CDATA[<p>init7 recently announced that with their <a href="https://www.init7.net/en/internet/fiber7/">FTTH fiber offering
Fiber7</a>, they will now sell and
connect you with 25 Gbit/s (Fiber7-X2) or 10 Gbit/s (Fiber7-X) fiber optics, if
you want more than 1 Gbit/s.</p>
<p>While this offer will only become available at my location late this year (<a href="https://twitter.com/init7/status/1403287499175235584">or
possibly later due to the supply chain
shortage</a>), I already
wanted to get the hardware on my end sorted out.</p>
<p>After my <a href="/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/">previous
disappointment</a>
with the MikroTik CCR2004, I decided to try a custom PC build.</p>
<p>An alternative to many specialized devices, including routers, is to use a PC
with an expansion card. An internet router’s job is to configure a network
connection and forward network packets. So, in our case, we’ll build a PC and
install some network expansion cards!</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_600x0_resize_q75_box.jpg"
  alt="router PC build" title="router PC build"
  width="600"
  height="607"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="goals">Goals</h2>
<p>For this PC internet router build, I had the following goals, highest priority
to lowest priority:</p>
<ol>
<li>Enough performance to saturate 25 Gbit/s, e.g. with two 10 Gbit/s downloads.</li>
<li>Silent: no loud fan noise.</li>
<li>Power-efficient: low power usage, as little heat as possible.</li>
<li>Low cost (well, for a high-end networking build…).</li>
</ol>
<h2 id="network-port-plan">Network Port Plan</h2>
<p>The simplest internet router has 2 network connections: one uplink to the
internet, and the local network. You can build a router without extra cards by
using a mainboard with 2 network ports.</p>
<p>Because there are no mainboards with SFP28 slots (for 25 Gbit/s SFP28 fiber
modules), we need at least 1 network card for our build. You might be able to
get by with a dual-port SFP28 network card if you have an SFP28-compatible
network switch already, or need just one fast connection.</p>
<p>I want to connect a few fast devices (directly and via fiber) to my router, so
I’m using 2 network cards: an SFP28 network card for the uplink, and a quad-port
10G SFP+ network card for the local network (LAN). This leaves us with the
following network ports and connections:</p>
<table>
<thead>
<tr>
<th>Network Card</th>
<th>max speed</th>
<th>cable</th>
<th>effective</th>
<th>Connection</th>
</tr>
</thead>
<tbody>
<tr>
<td>Intel XXV710</td>
<td>25 Gbit/s</td>
<td>fiber</td>
<td>25 Gbit/s</td>
<td>Fiber7-X2 uplink</td>
</tr>
<tr>
<td>Intel XXV710</td>
<td>25 Gbit/s</td>
<td>DAC</td>
<td>10 Gbit/s</td>
<td>workstation</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>RJ45</td>
<td>1 Gbit/s</td>
<td>rest (RJ45 Gigabit)</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>fiber</td>
<td>10 Gbit/s</td>
<td>MikroTik 1</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>fiber</td>
<td>10 Gbit/s</td>
<td>MikroTik 2</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>/</td>
<td>10 Gbit/s</td>
<td>(unused)</td>
</tr>
<tr>
<td>onboard</td>
<td>2.5 Gbit/s</td>
<td>RJ45</td>
<td>1 Gbit/s</td>
<td>(management)</td>
</tr>
</tbody>
</table>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_600x0_resize_q75_box.jpg"
  alt="network connectors" title="network connectors"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="hardware-selection">Hardware selection</h2>
<p>Now that we have defined the goals and network needs, let’s select the actual
hardware!</p>
<h3 id="network-cards">Network Cards</h3>
<p>My favorite store for 10 Gbit/s+ network equipment is
<a href="https://www.fs.com/">FS.COM</a>. They offer Intel-based cards:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_600x0_resize_q75_box.jpg"
  alt="Network cards" title="Network cards"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<ul>
<li>
<p>(347 CHF) PCIe 3.0 x8 Dual-Port 25G SFP28 Ethernet Network Card (Intel XXV710)<br>
<a href="https://www.fs.com/de/products/75603.html">FS.COM XXV710AM2-F2 #75603</a></p>
</li>
<li>
<p>(329 CHF) PCIe 3.0 x8 Quad-Port 10G SFP+ Ethernet Network Card (Intel XL710-BM1)<br>
<a href="https://www.fs.com/de/products/75602.html">FS.COM FTXL710BM1-F4 #75602</a></p>
</li>
</ul>
<p>Both cards work out of the box with the <a href="https://www.kernel.org/doc/Documentation/networking/i40e.txt"><code>i40e</code> Linux kernel
driver</a>, no
firmware blobs required.</p>
<p>For a good overview over the different available Intel cards, check out the
second page (“Product View”) in the card’s <a href="https://img-en.fs.com/file/user_manual/network-adapter-user-manual.pdf">User
Manual</a>.</p>
<h3 id="cpu-and-chipset">CPU and Chipset</h3>
<p>I read on many different sites that AMD’s current CPUs beat Intel’s CPUs in
terms of performance per watt. We can better achieve goals 2 and 3 (low noise
and low power usage) by using fewer watts, so we’ll pick an AMD CPU and
mainboard for this build.</p>
<p>AMD’s current CPU generation is Zen 3, and <a href="https://en.wikipedia.org/wiki/List_of_AMD_Ryzen_processors#Zen_3_based">current Zen 3 based
CPUs</a>
can be divided into 65W <a href="https://en.wikipedia.org/wiki/Thermal_design_power">TDP (Thermal Design
Power)</a> and 105W TDP
models. Only one 65W model is available to customers right now: the Ryzen 5
5600X.</p>
<p>Mainboards are built for/with a certain so-called chipset. Zen 3 CPUs use the
AM4 socket, for which <a href="https://en.wikipedia.org/wiki/Socket_AM4#Chipsets">8 different
chipsets</a> exist. Our network
cards need PCIe 3.0, so that disqualifies 5 chipsets right away: only the A520,
B550 and X570 chipsets remain.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note:</strong> Multiple people pointed out (thank you!) that the Wikipedia table only
lists PCIe lanes provided by the chipset, and strictly speaking, the older X470
chipset (released March 2018) supports CPUs which provide PCIe 3.0
lines. E.g. the <a href="https://www.asus.com/microsite/motherboard/AMD-X470/">ROG Strix
X470-F</a> with its x8/x8
mode should work, too.</div>
  </div>
</aside>
















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_600x0_resize_q75_box.jpg"
  alt="Ryzen 5" title="Ryzen 5"
  width="600"
  height="440"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="mainboard-pcie-bandwidth">Mainboard: PCIe bandwidth</h3>
<p>I originally tried using the ASUS PRIME X570-P mainboard, but I ran into two
problems:</p>
<p>Too loud: X570 mainboards need an annoyingly loud chipset fan for their 15W
TDP. Other chipsets such as the B550 don’t need a fan for their 5W TDP. With a
loud chipset fan, goal 2 (low noise) cannot be achieved. Only the
<a href="https://www.golem.de/news/sockel-am4-x570s-mainboards-mit-passivkuehlung-verfuegbar-2106-157434.html">recently-released X570<strong>S</strong>
variant</a>
comes without fans.</p>
<p>Not enough PCIe bandwidth/slots! This is how the ASUS tech specs describe the slots:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_600x0_resize_q75_box.jpg"
  
  width="600"
  height="244"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>This means the board has 2 slots (1 CPU, 1 chipset) that are physically wide
enough to hold a full-length x16 card, but only the first port can
electronically be used as an x16 slot. The other port only has PCIe lanes
electronically connected for x4, hence “x16 (max at x4 mode)”.</p>
<p>Unfortunately, our network cards need electrical connection of all their PCIe x8
lanes to run at full speed. Perhaps Intel/FS.COM will one day offer a new
generation of network cards that use PCIe <strong>4.0</strong>, because PCIe 4.0 x4 achieves
the same 7.877 GB/s throughput as PCIe <strong>3.0</strong> x8. Until then, I needed to find
a new mainboard.</p>
<p>Searching mainboards by PCIe capabilities is rather tedious, as mainboard block
diagrams or PCIe tree diagrams are not consistently available from all mainboard
vendors.</p>
<p>Instead, we can look explicitly for a feature called <strong>PCIe Bifurcation</strong>. In a
nutshell, PCIe bifurcation lets us divide the PCIe bandwidth from the Ryzen CPU
from 1 PCIe 4.0 x16 into 1 PCIe 4.0 x8 + 1 PCIe 4.0 x8, definitely satisfying
our requirement for two x8 slots at full bandwidth.</p>
<p>I found a list of (only!) three B550 mainboards supporting PCIe Bifurcation in <a href="https://www.anandtech.com/show/15850/the-amd-b550-motherboard-overview-asus-gigabyte-msi-asrock-and-others/39">an
Anandtech
review</a>. Two
are made by Gigabyte, one by ASRock. I read the Gigabyte UEFI setup is rather
odd, so I went with the ASRock B550 Taichi mainboard.</p>
<h3 id="case">Case</h3>
<p>For the case, I needed a midi case (large enough for the B550 mainboard’s ATX
form factor) with plenty of options for large, low-spinning fans.</p>
<p>I stumbled upon the <a href="https://www.corsair.com/us/en/Categories/Products/Cases/Mid-Tower-ATX-Cases/4000D-Airflow-Tempered-Glass-Mid-Tower-ATX-Case/p/CC-9011200-WW">Corsair 4000D
Airflow</a>,
which is available for 80 CHF and <a href="https://www.gamersnexus.net/hwreviews/3624-corsair-4000d-airflow-case-review-vs-solid-panel">achieved positive
reviews</a>. I’m
pleased with the 4000D: there are no sharp corners, installation is quick, easy
and clean, and the front and top panels offer plenty of space for cooling behind
large air intakes:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_600x0_resize_q75_box.jpg"
  alt="Airflow case (from the top)" title="Airflow case (from the top)"
  width="600"
  height="699"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Inside, the case offers plenty of space and options for routing cables on the back side:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_600x0_resize_q75_box.jpg"
  alt="Airflow case (back)" title="Airflow case (back)"
  width="600"
  height="536"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Which in turn makes for a clean front side:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_600x0_resize_q75_box.jpg"
  alt="Airflow case (front)" title="Airflow case (front)"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="fans">Fans</h3>
<p>I have been happy with <a href="https://noctua.at/">Noctua</a> fans for many years. In this
build, I’m using only Noctua fans so that I can reach goal 2 (silent, no loud
fan noise):</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_600x0_resize_q75_box.jpg"
  alt="Noctua fans" title="Noctua fans"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>These fans are large (140mm), so they can spin on slow speeds and still be
effective.</p>
<p>The specific fan configuration I ended up with:</p>
<ul>
<li>1 Noctua NF-A14 PWM 140mm in the front, pulling air out of the case</li>
<li>1 Noctua NF-A14 PWM 140mm in the top, pulling air into the case</li>
<li>1 Noctua NF-A12x25 PWM 120mm in the back, pulling air into the case</li>
<li>1 Noctua NH-L12S CPU fan</li>
</ul>
<p>Note that this is most likely overkill: I can well imagine that I could turn off
one of these fans entirely without a noticeable effect on temperatures. But I
wanted to be on the safe side and have a lot of cooling capacity, as I don’t
know how hot the Intel network cards run in practice.</p>
<h3 id="fan-controller">Fan Controller</h3>
<p>The ASRock B550 Taichi <a href="https://www.techpowerup.com/review/asrock-b550-taichi/7.html">comes with a Nuvoton
NCT6683D-T</a> fan
controller.</p>
<p>Unfortunately, ASRock seems to have set the Customer ID register to 0 instead of
<code>CUSTOMER_ID_ASROCK</code>, so you need to load the <code>nct6683</code> Linux driver with its
<code>force</code> option.</p>
<p>Once the module is loaded, <code>lm-sensors</code> lists accurate PWM fan speeds, but the
temperature values are mislabeled and don’t quite match the temperatures I see
in the UEFI H/W Monitor:</p>
<pre tabindex="0"><code>nct6683-isa-0a20
Adapter: ISA adapter
fan1:              471 RPM  (min =    0 RPM)
fan2:                0 RPM  (min =    0 RPM)
fan3:                0 RPM  (min =    0 RPM)
fan4:                0 RPM  (min =    0 RPM)
fan5:                0 RPM  (min =    0 RPM)
fan6:                0 RPM  (min =    0 RPM)
fan7:                0 RPM  (min =    0 RPM)
Thermistor 14:     +45.5 C  (low  =  +0.0 C)
                            (high =  +0.0 C, hyst =  +0.0 C)
                            (crit =  +0.0 C)  sensor = thermistor
AMD TSI Addr 98h:  +40.0 C  (low  =  +0.0 C)
                            (high =  +0.0 C, hyst =  +0.0 C)
                            (crit =  +0.0 C)  sensor = AMD AMDSI
intrusion0:       OK
beep_enable:      disabled
</code></pre><p>At least with the <code>nct6683</code> Linux driver, there is no way to change the PWM fan
speed: the corresponding files in the <code>hwmon</code> interface are marked read-only.</p>
<p>At this point I accepted that I won’t be able to work with the fan controller
from Linux, and tried just configuring static fan control settings in the UEFI
setup.</p>
<p>But despite identical fan settings, one of my 140mm fans would end up turned
off. I’m not sure why — is it an unclean PWM signal, or is there just a bug in
the fan controller?</p>
<p>Controlling the fans to reliably spin at a low speed is vital to reach goal 2
(low noise), so I looked around for third-party fan controllers and found the
<a href="https://www.corsair.com/eu/en/Categories/Products/Accessories-%7C-Parts/iCUE-CONTROLLERS/iCUE-Commander-PRO-Smart-RGB-Lighting-and-Fan-Speed-Controller/p/CL-9011110-WW">Corsair Commander
Pro</a>,
which <a href="https://blog.ktz.me/a-usb-fan-controller-that-now-works-under-linux/">a blog post explains is compatible with
Linux</a>.</p>
<h3 id="server-disk">Server Disk</h3>
<p>This part of the build is not router-related, but I figured if I have a fast
machine with a fast network connection, I could add a fast big disk to it and
retire my other server PC.</p>
<p>Specifically, I chose the Samsung 970 EVO Plus M.2 SSD with 2 TB of
capacity. This disk can <a href="https://www.tomshardware.com/reviews/samsung-970-evo-plus-ssd,5608.html">deliver 3500 MB/s of sequential read
throughput</a>,
which is more than the ≈3000 MB/s that a 25 Gbit/s link can handle.</p>
<h3 id="graphics-card">Graphics Card</h3>
<p>An important part of computer builds for me is making troubleshooting and
maintenance as easy as possible. In my current tech landscape, that translates
to connecting an HDMI monitor and a USB keyboard, for example to boot from a
different device, to enter the UEFI setup, or to look at Linux console messages.</p>
<p>Unfortunately, the Ryzen 5 5600X does not have integrated graphics, so to get
any graphics output, we need to install a graphics card. I chose the Zotac
GeForce GT 710 Zone Edition, because it was the cheapest available card (60 CHF)
that’s passively cooled.</p>
<p>An alternative to using a graphics card might be to use a PCIe IPMI card like
the <a href="https://www.asrockrack.com/general/productdetail.asp?Model=PAUL#Specifications">ASRock
PAUL</a>,
however these seem to be harder to find, and more expensive.</p>
<p>Longer-term, I think the best option would be to use the Ryzen 5 5600G with
integrated graphics, but that model only <a href="https://www.pcmag.com/news/amds-new-ryzen-5000-g-series-will-come-with-an-integrated-gpu">becomes available later this
year</a>.</p>
<h3 id="component-list">Component List</h3>
<p>I’m listing 2 different options here. Option A is what I built (router+server),
but Option B is a lot cheaper if you only want a router. Both options use the
same base components:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>347 CHF</td>
<td>Network card</td>
<td><a href="https://www.fs.com/products/75603.html">FS.COM Intel XXV710, 2 × 25 Gbit/s (#75603)</a></td>
</tr>
<tr>
<td>329 CHF</td>
<td>Network card</td>
<td><a href="https://www.fs.com/products/75602.html">FS.COM Intel XL710, 4 × 10 Gbit/s (#75602)</a></td>
</tr>
<tr>
<td>314 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/amd-ryzen-5-5600x-am4-370ghz-6-core-prozessor-13987919">Ryzen 5 5600X</a></td>
</tr>
<tr>
<td>290 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asrock-b550-taichi-am4-amd-b550-atx-mainboard-13348335">ASRock B550 Taichi</a></td>
</tr>
<tr>
<td>92 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-4000d-airflow-midi-tower-pc-gehaeuse-13552873">Corsair 4000D Airflow (Midi Tower)</a></td>
</tr>
<tr>
<td>67 CHF</td>
<td>Fan control</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-commander-pro-extern-6x-luefter-kontroller-6332927">Corsair Commander Pro</a></td>
</tr>
<tr>
<td>65 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140mm-1x-pc-luefter-657800">2 × Noctua NF-A14 PWM (140mm)</a></td>
</tr>
<tr>
<td>62 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-l12s-7cm-cpu-kuehler-6817433">Noctua NH-L12S</a></td>
</tr>
<tr>
<td>35 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a12x25-pwm-120mm-1x-pc-luefter-9161307">1 × Noctua NF-A12x25 PWM (120mm)</a></td>
</tr>
<tr>
<td>60 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/zotac-geforce-gt-710-zone-edition-1gb-grafikkarte-7526609">Zotac GeForce GT 710 Zone Edition (1GB)</a></td>
</tr>
</tbody>
</table>
<p>Base total: 1590 CHF</p>
<p><strong>Option A: Server extension</strong>. Because I had some parts lying around, and because I
wanted to use my router for serving files (from large RAM cache/fast disk), I
went with the following parts:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>309 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/samsung-970-evo-plus-2000gb-m2-2280-ssd-10339167">Samsung 970 EVO Plus 2000GB, M.2 2280</a></td>
</tr>
<tr>
<td>439 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-hyperx-predator-rgb-4x-16gb-ddr4-3600-dimm-288-ram-14062636">64GB HyperX Predator RAM (4x, 16GB, DDR4-3600, DIMM 288)</a></td>
</tr>
<tr>
<td>127 CHF</td>
<td>Power supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-sf600-platinum-600w-pc-netzteil-9034178">Corsair SF600 Platinum (600W)</a></td>
</tr>
<tr>
<td>14 CHF</td>
<td>Power ext</td>
<td><a href="https://www.digitec.ch/de/s1/product/silverstone-atx-24-24pin-verlaengerung-30cm-modding-sleeving-3456447">Silverstone ATX 24-24Pin Extension (30cm)</a></td>
</tr>
<tr>
<td>10 CHF</td>
<td>Power ext</td>
<td><a href="https://www.digitec.ch/de/s1/product/silverstone-atx-extension-8-844pin-30cm-modding-sleeving-5808252">Silverstone ATX Extension 8-8(4+4)Pin (30cm)</a></td>
</tr>
</tbody>
</table>
<p>The Corsair SF600 power supply is not server-related, I just had it lying around. I’d
recommend going for the Corsair RM650x *2018* (which has longer cables) instead.</p>
<p>Server total: 2770 CHF</p>
<p><strong>Option B: Non-server (router only) alternative</strong>. If you’re <em>only</em> interested
in routing, you can opt for cheaper low-end disk and RAM, for example:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>112 CHF</td>
<td>Power supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm650x-2018-650w-pc-netzteil-8849945">Corsair RM650x *2018*</a></td>
</tr>
<tr>
<td>33 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-a400-120gb-m2-2280-ssd-10628775">Kingston A400 120GB M.2 SSD</a></td>
</tr>
<tr>
<td>29 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/crucial-ct4g4dfs8266-1x-4gb-ddr4-2666-dimm-288-ram-10447900">Crucial CT4G4DFS8266 4GB DDR4-2666 RAM</a></td>
</tr>
</tbody>
</table>
<p>Non-server total: 1764 CHF</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><p>I had the Noctua NH-L12S CPU fan lying around, so I re-used it.</p>
<p>Noctua <a href="https://www.golem.de/news/nh-p1-noctuas-passiver-cpu-kuehler-schafft-125-watt-2106-157334.html">recently released a passive CPU
cooler</a>,
which might be an interesting alternative.</p>
</div>
  </div>
</aside>

<h2 id="asrock-b550-taichi-mainboard-uefi-setup">ASRock B550 Taichi Mainboard UEFI Setup</h2>
<p>To enable PCIe Bifurcation for our two PCIe 3.0 x8 card setup:</p>
<ol>
<li>Set <code>Advanced &gt; AMD PBS &gt; PCIe/GFX Lanes Configuration</code><br>
to <code>x8x8</code>.</li>
</ol>
<p>To always turn on the PC after power is lost:</p>
<ol>
<li>Set <code>Advanced &gt; Onboard Devices Configuration &gt; Restore On AC Power Loss</code><br>
to <code>Power On</code>.</li>
</ol>
<p>To PXE boot (via UEFI) on the onboard ethernet port (management), but disable
slow option roms for PXE boot on the FS.COM network cards:</p>
<ol>
<li>Set <code>Boot &gt; Boot From Onboard LAN</code><br>
to <code>Enabled</code>.</li>
<li>Set <code>Boot &gt; CSM (Compatibility Support Module) &gt; Launch PXE OpROM Policy</code><br>
to <code>UEFI only</code>.</li>
</ol>
<h2 id="fan-controller-setup">Fan Controller Setup</h2>
<p>The <a href="https://www.corsair.com/eu/en/Categories/Products/Accessories-%7C-Parts/iCUE-CONTROLLERS/iCUE-Commander-PRO-Smart-RGB-Lighting-and-Fan-Speed-Controller/p/CL-9011110-WW">Corsair Commander Pro</a> fan controller is well-supported on Linux.</p>
<p>After enabling the Linux kernel option <code>CONFIG_SENSORS_CORSAIR_CPRO</code>, the device
shows up in the <code>hwmon</code> subsystem.</p>
<p>You can completely spin up (100% PWM) or turn off (0% PWM) a fan like so:</p>
<pre tabindex="0"><code># echo 255 &gt; /sys/class/hwmon/hwmon3/pwm1
# echo 0 &gt; /sys/class/hwmon/hwmon3/pwm1
</code></pre><p>I run my fans at 13% PWM, which translates to about 226 rpm:</p>
<pre tabindex="0"><code># echo 33 &gt; /sys/class/hwmon/hwmon3/pwm1
# cat /sys/class/hwmon/hwmon3/fan1_input
226
</code></pre><p>Conveniently, the Corsair Commander Pro stores your settings even when power is
lost. So you don’t even need to run a permanent fan control process, a one-off
adjustment might be sufficient.</p>
<h2 id="power-usage">Power Usage</h2>
<p>The PC consumes about 48W of power when idle (only management network connected)
by default without further tuning. Each extra network link increases power usage
by ≈1W:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_600x0_resize_q75_box.jpg"
  alt="graph showing power consumption when enabling network links" title="graph showing power consumption when enabling network links"
  width="600"
  height="370"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Enabling all <a href="https://wiki.gentoo.org/wiki/Ryzen#Kernel">Ryzen-related options</a>
in my Linux kernel and switching to the powersave CPU frequency governor lowers
power usage by ≈1W.</p>
<p>On some mainboards, you might need to <a href="https://twitter.com/falcon3754/status/1403102789367119876">force-enable Global
C-States</a> to save
power. Not on the B550 Taichi, though.</p>
<p>I tried undervolting the CPU, but that didn’t even make ≈1W of difference in
power usage. Potentially making my setup unreliable is not worth that little
power saving to me.</p>
<p>I measured these values using a <a href="https://www.conrad.ch/de/p/homematic-hm-es-pmsw1-pl-dn-r5-funk-schaltaktor-1-fach-funk-steckdose-2300-w-2507749.html">Homematic
HM-ES-PMSw1-Pl-DN-R5</a>
I had lying around.</p>
<h2 id="performance">Performance</h2>
<p>Goal 1 is to saturate 25 Gbit/s, for example using two 10 Gbit/s downloads. I’m
talking about large bulk transfers here, not many small transfers.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">If you’re interested in the “many small packets” scenario, check out <a href="https://netoptimizer.blogspot.com/2014/05/the-calculations-10gbits-wirespeed.html">“The
calculations: 10Gbit/s
wirespeed”</a>
for a good intro, and <a href="https://twitter.com/fragstone/status/1401807613642280963">Thomas Fragstein’s benchmark tool
recommendations</a>. I
haven’t run any such tests yet.</div>
  </div>
</aside>

<p>To get a feel for the performance/headroom of the router build, I ran 3 different tests.</p>
<h3 id="test-a-10-gbits-bridging-throughput">Test A: 10 Gbit/s bridging throughput</h3>
<p>For this test, I connected 2 PCs to the router’s XL710 network card and used <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 to generate a 10 Gbit/s TCP stream between the
2 PCs. The router doesn’t need to modify the packets in this scenario, only
forward them, so this should be the lightest load scenario.</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_600x0_resize_q75_box.jpg"
  alt="bridging throughput" title="bridging throughput"
  width="600"
  height="315"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="test-b-10-gbits-nat-throughput">Test B: 10 Gbit/s NAT throughput</h3>
<p>In this test, the 2 PCs were connected such that the router performs <a href="https://en.wikipedia.org/wiki/Network_address_translation">Network
Address Translation
(NAT)</a>, which is
required for downloads from the internet via IPv4.</p>
<p>This scenario is slightly more involved, as the router needs to modify
packets. But, as we can see below, a 10 Gbit/s NAT stream consumes barely more
resources than 10 Gbit/s bridging:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_600x0_resize_q75_box.jpg"
  alt="NAT throughput" title="NAT throughput"
  width="600"
  height="250"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="test-c-4--10-gbits-tcp-streams">Test C: 4 × 10 Gbit/s TCP streams</h3>
<p>In this test, I wanted to max out the XL710 network card, so I connected 4 PCs
and started an <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 benchmark between each PC
and the router itself, simultaneously.</p>
<p>This scenario consumes about 16% CPU, meaning we’ll most likely have plenty of
headroom even when all ports are maxed out!</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_600x0_resize_q75_box.jpg"
  alt="four 10 Gbit/s streams" title="four 10 Gbit/s streams"
  width="600"
  height="292"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Tip: make sure to enable the <code>CONFIG_IRQ_TIME_ACCOUNTING</code> Linux kernel option to
<a href="https://tanelpoder.com/posts/linux-hiding-interrupt-cpu-usage/">include IRQ handlers in CPU usage
numbers</a> for
accurate measurements.</p>
<h2 id="alternatives-considered">Alternatives considered</h2>
<p>The passively-cooled SuperServer E302-9D comes with 2 SFP+ ports (10 Gbit/s). It
even comes with 2 PCIe 3.0 x8 capable slots. Unfortunately it seems impossible
to currently buy this machine, at least in Switzerland.</p>
<p>You can find a few more suggestions in the replies of <a href="https://twitter.com/zekjur/status/1361414105211437056">this Twitter
thread</a>. Most are either
unavailable, require a lot more DIY work (e.g. a custom case), or don’t support
25 Gbit/s.</p>
<h2 id="router-software-router7-porting">Router software: router7 porting</h2>
<p>I wrote <a href="https://router7.org/">router7</a>, my own small home internet router
software in Go, back in 2018, and have been using it ever since.</p>
<p>I don’t have time to support any users, so I don’t recommend anyone else use
router7, unless the project really excites you, and the lack of support doesn’t
bother you! Instead, you might be better served with a more established and
supported router software option. Popular options include
<a href="https://en.wikipedia.org/wiki/OPNsense">OPNsense</a> or
<a href="https://en.wikipedia.org/wiki/OpenWrt">OpenWrt</a>. See also Wikipedia’s <a href="https://en.wikipedia.org/wiki/List_of_router_and_firewall_distributions">List of
router and firewall
distributions</a>.</p>
<p>To make router7 work for this 25 Gbit/s router PC build, I had to make a few
adjustments.</p>
<p>Because we are using UEFI network boot instead of BIOS network boot, I first had
to make the PXE boot implementation in router7’s installer <a href="https://github.com/rtr7/tools/commits/00be57a557a5fb2bf8958fbc1417f57ab17fc54b">work with UEFI PXE
boot</a>.</p>
<p>I then enabled a few additional <a href="https://github.com/rtr7/kernel/commits/8694ece47fb07ffeea8a96dc48eb8faa3969250a">kernel options for network and storage
drivers</a>
in router7’s kernel.</p>
<p>To router7’s control plane code, I <a href="https://github.com/rtr7/router7/commits/b88ddd41c377087cc4b6d1fe6c7a5550399a730c">added bridge network device
configuration</a>,
which in my previous 2-port router setup was not needed.</p>
<p>During development, I compiled a few Linux programs statically or copied them
with their dependencies (→ <a href="https://gokrazy.org/prototyping/">gokrazy
prototyping</a>) to run them on router7, such as
<a href="https://manpages.debian.org/sensors.1"><code>sensors(1)</code></a>
, <a href="https://manpages.debian.org/ethtool.8"><code>ethtool(8)</code></a>
,
as well as iproute2’s <a href="https://manpages.debian.org/ip.8"><code>ip(8)</code></a>
 and <a href="https://manpages.debian.org/bridge.8"><code>bridge(8)</code></a>
 implementation.</p>
<h2 id="next-steps">Next Steps</h2>
<p>Based on my tests, the hardware I selected seems to deliver enough performance
to use it for distributing a 25 Gbit/s upstream link across multiple 10 Gbit/s
devices.</p>
<p>I won’t know for sure until the <a href="https://twitter.com/fiber7_ch">fiber7</a> Point Of
Presence (POP, German Anschlusszentrale) close to my home is upgraded to support
25 Gbit/s “Fiber7-X2” connections. As I mentioned, unfortunately <a href="https://twitter.com/init7/status/1403287499175235584">the upgrade
plan is delayed</a> due to
the component shortage. I’ll keep you posted!</p>
<h2 id="other-builds">Other Builds</h2>
<p>In case my build doesn’t exactly match your requirements, perhaps these others
help inspire you:</p>
<ul>
<li><a href="https://medium.com/@sdier/new-internet-service-calls-for-a-new-router-4dbebbdc6dbd">Scott Dier’s Intel NUC 9 Pro build</a></li>
</ul>
<h2 id="appendix-a-dpdk-test">Appendix A: DPDK test</h2>
<p><a href="https://twitter.com/ipngnetworks">Pim</a> ran a <a href="https://www.dpdk.org/">DPDK</a>
based loadtester called <a href="https://trex-tgn.cisco.com/">T-Rex</a> on this
machine. Here’s his summary of the test:</p>
<p>For DPDK, this hardware does 4x10G at 64b frames. It does not do 6x10G as it
tops out at 62Mpps using 4 cores (of 15.5Mpps per core).</p>
<p>I couldn&rsquo;t test 25G symmetric [because we lacked a 25G DAC cable], but
extrapolating from the numbers, 3 CPUs source and sink ~24.6Gbit per core, so
we&rsquo;d probably make it, leaving 1 core for OS and 2 cores for controlplane.</p>
<p>If the machine had a 12 core Ryzen, it would saturate all NICs with room to
spare. So that&rsquo;s what I&rsquo;ll end up buying :)</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test.png"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_600x0_resize_box_3.png"
  alt="DPDK test" title="DPDK test"
  width="600"
  height="447"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[How I configured and then promptly returned a MikroTik CCR2004 router for Fiber7]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/"/>
    <id>https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/</id>
    <published>2021-05-28T14:57:00+02:00</published>
    <content type="html"><![CDATA[<p>init7 recently announced that with their <a href="https://www.init7.net/en/internet/fiber7/">FTTH fiber offering
Fiber7</a>, they will now sell and
connect you with 25 Gbit/s (Fiber7-X2) or 10 Gbit/s (Fiber7-X) fiber optics, if
you want more than 1 Gbit/s.</p>
<p>This is possible thanks to the upgrade of their network infrastructure as part
of their “lifecycle management”, meaning the old networking gear was declared as
end-of-life. The new networking gear supports not only SFP+ modules (10 Gbit/s),
but also SFP28 modules (25 Gbit/s).</p>
<p>Availability depends on the <a href="https://www.init7.net/en/infrastructure/fiber7-pops/">POP (Point Of Presence, German «Anschlusszentrale»)
you’re connected to</a>. My
POP is planned to be upgraded in September.</p>
<p>Nevertheless, I wanted to already prepare my end of the connection, and ordered
the only router that <a href="https://www.init7.net/en/internet/hardware/">init7 currently lists as compatible with
Fiber7-X/X2</a>: the MikroTik
CCR2004-1G-12S+2XS.</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/mikrotik-ccr2004.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_600x0_resize_q75_box.jpg"
  alt="MikroTik CCR2004-1G-12S&#43;2XS" title="MikroTik CCR2004-1G-12S&#43;2XS"
  width="600"
  height="347"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>The rest of this article walks through what I needed to configure (a lot,
compared to Ubiquiti or OpenWRT) in the hope that it helps other MikroTik users,
and then ends in <a href="#returned">Why I returned it</a>.</p>
<h2 id="configuration">Configuration</h2>
<p>Connect an Ethernet cable to the management port on the MikroTik and:</p>
<ol>
<li>log into the system using <code>ssh admin@192.168.88.1</code></li>
<li>point a web browser to “Webfig” at http://192.168.88.1/ (no login required)</li>
</ol>
<h2 id="update-firmware">Update firmware</h2>
<p>Update the CCR2004 to the latest firmware version. At the time of writing, the
Long-term RouterOS track is <a href="https://mikrotik.com/download">at version 6.47.9</a>
for the CCR2004 (ARM64):</p>
<ol>
<li>Use <code>/system package print</code> to display the current version.</li>
<li>Upload <code>routeros-arm64-6.47.9.npk</code> using Webfig.</li>
<li><code>/system reboot</code> and verify that <code>/system package print</code> shows <code>6.47.9</code> now.</li>
<li><code>/system routerboard upgrade</code> to upgrade the firmware of the underlying chipsets, etc. Enter <code>y</code> at the prompt, wait for a response of &ldquo;echo: system,info,critical Firmware upgraded successfully, please reboot for changes to take effect&rdquo;</li>
<li><code>/system reboot</code> again and verify that <code>/system routerboard print</code> has the line <code>current-firmware:6.47.9</code> now.</li>
</ol>
<h2 id="set-up-auth">Set up auth</h2>
<p>Set a password to prevent others from logging into the router:</p>
<pre tabindex="0"><code>/user set admin password=secret
</code></pre><p>Additionally, you can enable passwordless SSH key login, if you
want.</p>
<ol>
<li>
<p>Create an RSA key, because <a href="https://forum.mikrotik.com/viewtopic.php?t=109143">ed25519 keys are not
supported</a>:</p>
<pre tabindex="0"><code>% ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key: /home/michael/.ssh/id_mikrotik
</code></pre></li>
<li>
<p>Upload the <code>id_mikrotik.pub</code> file in Webfig</p>
</li>
<li>
<p>Import the SSH public key for the <code>admin</code> user:</p>
<pre tabindex="0"><code>/user ssh-keys import user=admin public-key-file=id_mikrotik.pub
</code></pre></li>
</ol>
<h2 id="lock-down-the-router">Lock down the router</h2>
<ol>
<li>
<p><a href="https://help.mikrotik.com/docs/display/ROS/Webfig#Webfig-EnableHTTPS">Enable HTTPS in Webfig</a>.</p>
</li>
<li>
<p>Disable all remote access except for SSH and HTTPS:</p>
<pre tabindex="0"><code>/ip service disable telnet,ftp,www,api,api-ssl,winbox
</code></pre></li>
<li>
<p>Follow <a href="https://wiki.mikrotik.com/wiki/Manual:Securing_Your_Router#Neighbor_Discovery">MikroTik Securing Your
Router</a>
recommendations:</p>
<pre tabindex="0"><code>/tool mac-server set allowed-interface-list=none
/tool mac-server mac-winbox set allowed-interface-list=none
/tool mac-server ping set enabled=no
/tool bandwidth-server set enabled=no
/ip ssh set strong-crypto=yes
/ip neighbor discovery-settings set discover-interface-list=none
</code></pre></li>
</ol>
<h2 id="enable-dhcpv6-client">Enable DHCPv6 Client</h2>
<p>For some reason, you need to explicitly enable IPv6 in 2021:</p>
<pre tabindex="0"><code>/system package enable ipv6
/system reboot
</code></pre><p>MikroTik says this is a precaution so that users don’t end up with default-open
firewall settings for IPv6. But then why don’t they just add some default
firewall rules?!</p>
<p>Anyway, to configure and immediately enable the DHCPv6 client, use:</p>
<pre tabindex="0"><code>/ipv6 dhcp-client add pool-name=fiber7 pool-prefix-length=64 interface=sfp28-1 add-default-route=yes use-peer-dns=no request=address,prefix
</code></pre><h3 id="modify-the-ipv6-duid">Modify the IPv6 DUID</h3>
<p>Unfortunately, MikroTik does not offer any user interface to set the IPv6 DUID,
which I need to configure to obtain my static IPv6 network prefix from my
provider’s DHCPv6 server.</p>
<p>Luckily, the DUID is included in backup files, so we can edit it and restore
from backup:</p>
<ol>
<li>
<p>Run <code>/system backup save</code></p>
</li>
<li>
<p>Download the backup file in Webfig by navigating to Files → Backup → Download.</p>
</li>
<li>
<p>Convert the backup file to hex in textual form, edit the DUID and convert it back to binary:</p>
<pre tabindex="0"><code>% xxd MikroTik-19700102-0111.backup MikroTik-19700102-0111.backup.hex

% emacs MikroTik-19700102-0111.backup.hex
# Search for “dhcp/duid” in the file and edit accordingly:
# got:  00030001085531dfa69e

% xxd -r MikroTik-19700102-0111.backup.hex MikroTik-19700102-0111-patched.backup
</code></pre></li>
<li>
<p>Upload the file in Webfig, then restore the backup:</p>
<p><code>/system backup load name=MikroTik-19700102-0111-patched.backup</code></p>
</li>
</ol>
<h2 id="enable-ipv6-router-advertisements">Enable IPv6 Router Advertisements</h2>
<p>To make the router assign an IPv6 address from the obtained pool for itself, and
then send IPv6 Router Advertisements to the network, set:</p>
<pre tabindex="0"><code>/ipv6 address add address=::1 from-pool=fiber7 interface=bridge1
/ipv6 nd add interface=bridge1 managed-address-configuration=yes other-configuration=yes
</code></pre><h2 id="enable-dhcpv4-client">Enable DHCPv4 Client</h2>
<p>To configure and immediately enable the <a href="https://wiki.mikrotik.com/wiki/Manual:IP/DHCP_Client">DHCPv4
client</a> on the upstream
port, use:</p>
<pre tabindex="0"><code>/ip dhcp-client add interface=sfp28-1 disabled=no
</code></pre><p>I also changed the MAC address to match my old router’s address, just to take
maximum precaution to avoid any Port Security related issues with my provider’s
DHCP server:</p>
<pre tabindex="0"><code>/interface ethernet set sfp28-1 mac-address=00:0d:fa:4c:0c:31
</code></pre><h2 id="enable-dns-server">Enable DNS Server</h2>
<p>By default, the Mikrotik Router will not respond to DNS Queries, when enabling remote requests make sure to firewall the DNS server from responding to DNS Queries from the greater internet. Otherwise you will find yourself participating in DNS DDOS attacks.</p>
<pre tabindex="0"><code>/ip dns set allow-remote-requests=yes
/ip firewall filter add chain=input protocol=tcp port=53 in-interface=sfp28-1 action=drop
/ip firewall filter add chain=input protocol=udp port=53 in-interface=sfp28-1 action=drop
</code></pre><h2 id="enable-dhcpv4-server">Enable DHCPv4 Server</h2>
<p>First, let’s bundle all SFP+ ports into a single bridge interface:</p>
<pre tabindex="0"><code>/interface bridge add name=bridge1
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus1 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus2 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus3 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus4 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus5 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus6 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus7 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus8 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus9 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus10 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus11 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus12 hw=yes
</code></pre><p>This means we’ll use the device like a big switch with routing between the
switch and the uplink port <code>sfp28-1</code>.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note</strong>: I don’t know if this configuration reduces performance. I find
MikroTik’s documentation regarding hardware offloading and performance not the
clearest. Then again, the CCR2004 has no hardware offloading whatsoever (?) <a href="https://forum.mikrotik.com/viewtopic.php?t=173065">as
per a forum post</a>.</div>
  </div>
</aside>

<p>To configure the DHCPv4 Server, configure an IP address, then start the setup
wizard:</p>
<pre tabindex="0"><code>/ip address add address=10.0.0.1/24 interface=bridge1
/ip dhcp-server setup
Select interface to run DHCP server on

dhcp server interface: bridge1
Select network for DHCP addresses

dhcp address space: 10.0.0.0/24
Select gateway for given network

gateway for dhcp network: 10.0.0.1
Select pool of ip addresses given out by DHCP server

addresses to give out: 10.0.0.2-10.0.0.240
Select DNS servers

dns servers: 10.0.0.1,8.8.8.8
Select lease time

lease time: 20m
</code></pre><h2 id="enable-ipv4-nat">Enable IPv4 NAT</h2>
<p>We need NAT to route all IPv4 traffic over our single public IP address:</p>
<pre tabindex="0"><code>/ip firewall nat add action=masquerade chain=srcnat out-interface=sfp28-1
</code></pre><p>Disable NAT services for security, e.g. to mitigate against NAT slipstreaming
attacks:</p>
<pre tabindex="0"><code>/ip firewall service-port disable ftp,tftp,irc,h323,sip,pptp,udplite,dccp,sctp
</code></pre><p>I can observe ≈10-20% CPU load when doing a Gigabit speed test over IPv4.</p>
<h2 id="todo-list">TODO list</h2>
<p>The following features I did not get around to configuring, but they were on my
list:</p>
<ul>
<li><a href="https://help.mikrotik.com/docs/display/ROS/First+Time+Configuration">IPv4 port forwardings</a></li>
<li>Cloudflare DynDNS update script</li>
<li><a href="https://wiki.mikrotik.com/wiki/Setting_static_DNS_record_for_each_DHCP_lease">DNS resolution for DHCP hostnames</a></li>
</ul>
<h2 id="returned">Why I returned it</h2>
<p>Initially, I thought the device’s fan spins up only at boot, and then the large
heatsink takes care of all cooling needs. Unfortunately, after an hour or so
into my experiment, I noticed that the MikroTik would spin up the fan for a
whole minute or so occasionally! Very annoying.</p>
<p>I also ran into weird DNS slow-downs, which I didn’t fully diagnose. In
Wireshark, it looked like my machine sent 2 DNS queries but received only 1 DNS
result, and then waited for a timeout.</p>
<p>I also noticed that I have a few more unexpected dependencies such as my home
automation using DHCP lease state by subscribing to an MQTT topic. Addressing
this issue and other similar little problems would have taken a bunch more time
and would have resulted in a less reliable system than I have today.</p>
<p>Since I last used MikroTik in 2014 the software seems to have barely changed. I
wish they finally implemented some table-stakes features like DNS resolution for
DHCP hostnames.</p>
<p>Given all the above, I no longer felt like getting enough value for the money
from the MikroTik, and found it easier to just switch back to <a href="https://router7.org/">my own
router7</a> and return the MikroTik.</p>
<p>I will probably stick with the router7 software, but exchange the PC Engines APU
with the smallest PC that has enough PCI-E bandwidth for a multi-port SFP28
network card.</p>
<h2 id="appendix-a-full-configuration">Appendix A: Full configuration</h2>
<pre tabindex="0"><code># may/28/2021 11:40:15 by RouterOS 6.47.9
# software id = 6YZE-HKM8
#
# model = CCR2004-1G-12S+2XS
/interface bridge
add name=bridge1
/interface ethernet
set [ find default-name=sfp28-1 ] auto-negotiation=no mac-address=00:0d:fa:4c:0c:31
/interface wireless security-profiles
set [ find default=yes ] supplicant-identity=MikroTik
/ip pool
add name=dhcp_pool0 ranges=10.0.0.2-10.0.0.240
/ip dhcp-server
add address-pool=dhcp_pool0 disabled=no interface=bridge1 lease-time=20m name=dhcp1
/interface bridge port
add bridge=bridge1 interface=sfp-sfpplus1
add bridge=bridge1 interface=sfp-sfpplus2
add bridge=bridge1 interface=sfp-sfpplus3
add bridge=bridge1 interface=sfp-sfpplus4
add bridge=bridge1 interface=sfp-sfpplus5
add bridge=bridge1 interface=sfp-sfpplus6
add bridge=bridge1 interface=sfp-sfpplus7
add bridge=bridge1 interface=sfp-sfpplus8
add bridge=bridge1 interface=sfp-sfpplus9
add bridge=bridge1 interface=sfp-sfpplus10
add bridge=bridge1 interface=sfp-sfpplus11
add bridge=bridge1 interface=sfp-sfpplus12
/ip neighbor discovery-settings
set discover-interface-list=none
/ip address
add address=192.168.88.1/24 comment=defconf interface=ether1 network=192.168.88.0
add address=10.0.0.1/24 interface=bridge1 network=10.0.0.0
/ip dhcp-client
add disabled=no interface=sfp28-1 use-peer-dns=no
/ip dhcp-server lease
add address=10.0.0.54 mac-address=DC:A6:32:02:AA:10
/ip dhcp-server network
add address=10.0.0.0/24 dns-server=10.0.0.1 domain=lan gateway=10.0.0.1
/ip dns
set allow-remote-requests=yes servers=8.8.8.8,8.8.4.4,2001:4860:4860::8888,2001:4860:4860::8844
/ip firewall nat
add action=masquerade chain=srcnat out-interface=sfp28-1 to-addresses=0.0.0.0
/ip firewall service-port
set ftp disabled=yes
set tftp disabled=yes
set irc disabled=yes
set h323 disabled=yes
set sip disabled=yes
set pptp disabled=yes
set udplite disabled=yes
set dccp disabled=yes
set sctp disabled=yes
/ip service
set telnet disabled=yes
set ftp disabled=yes
set www disabled=yes
set www-ssl certificate=webfig disabled=no
set api disabled=yes
set winbox disabled=yes
set api-ssl disabled=yes
/ip ssh
set strong-crypto=yes
/ipv6 address
add address=::1 from-pool=fiber7 interface=bridge1
/ipv6 dhcp-client
add add-default-route=yes interface=sfp28-1 pool-name=fiber7 request=address,prefix use-peer-dns=no
/ipv6 nd
add interface=bridge1 managed-address-configuration=yes other-configuration=yes
/system clock
set time-zone-name=Europe/Zurich
/system logging
add topics=dhcp
/tool bandwidth-server
set enabled=no
/tool mac-server
set allowed-interface-list=none
/tool mac-server mac-winbox
set allowed-interface-list=none
/tool mac-server ping
set enabled=no
</code></pre>]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Home network 10 Gbit/s upgrade]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/"/>
    <id>https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/</id>
    <published>2021-05-16T17:33:16+02:00</published>
    <content type="html"><![CDATA[<p>After <a href="/posts/2020-08-09-fiber-link-home-network/">adding a fiber link to my home
network</a>, I am upgrading that link
from 1 Gbit/s to 10 Gbit/s.</p>
<p>As a reminder, conceptually the fiber link is built using two media converters
from/to ethernet:</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-08-04-media-converters.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_600x0_resize_q75_box.jpg"
  alt="0.9mm thin fiber cables" title="0.9mm thin fiber cables"
  width="600"
  height="217"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Schematically, this is what’s connected to both ends:</p>




<a href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-05-15-bottleneck-1g.svg"><img
  src="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-05-15-bottleneck-1g.svg"
  alt="1 Gbit/s bottleneck" title="1 Gbit/s bottleneck"
  style="border: 1px solid #000; margin-right: 1rem"
  
  loading="lazy"></a>


<p>All links are 1 Gbit/s, so it’s easy to see that, for example, transfers between
chuchi↔router7 and storage2↔midna cannot both use 1 Gbit/s at the same time.</p>
<p>This upgrade serves 2 purposes:</p>
<ol>
<li>
<p><strong>Raise the floor to 1 Gbit/s end-to-end</strong>: Ensure that serving large files
(e.g. distri Linux images and packages) does no longer impact, and is no
longer impacted by, other bandwidth flows that also use this transfer link in
my home network, e.g. daily backups.</p>
</li>
<li>
<p><strong>Raise the ceiling to 10 Gbit/s</strong>: Make it possible to selectively upgrade
Linux PCs on either end of the link to 10 Gbit/s peak bandwidth.</p>
</li>
</ol>
<p>Note that the internet uplink remains untouched at 1 Gbit/s — only transfers
within the home network can happen at 10 Gbit/s.</p>
<h2 id="replacing-the-media-converters-with-mikrotik-switches">Replacing the media converters with Mikrotik switches</h2>
<p>We first replace both media converters and switches with a <a href="https://mikrotik.com/product/crs305_1g_4s_in">Mikrotik
CRS305-1G-4S+IN</a>.</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-07-30-mikrotiks-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-07-30-mikrotiks-featured_hu0957e5d484a34f5f279de33468b78758_1267758_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-07-30-mikrotiks-featured_hu0957e5d484a34f5f279de33468b78758_1267758_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-07-30-mikrotiks-featured_hu0957e5d484a34f5f279de33468b78758_1267758_600x0_resize_q75_box.jpg"
  alt="Mikrotik CRS305-1G-4S&#43;IN" title="Mikrotik CRS305-1G-4S&#43;IN"
  width="600"
  height="411"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>This device <a href="https://www.digitec.ch/de/s1/product/mikrotik-crs305-1g-4sin-5ports-switch-9876046">costs 149 CHF on digitec</a> and comes with 5 ports:</p>
<ul>
<li>1 × RJ45 Ethernet port for management, can be used as a regular 1 Gbit/s port.</li>
<li>4 × SFP+ ports</li>
</ul>
<p>Each SFP+ port can be used with either an RJ-45 Ethernet or a fiber SFP+ module,
but beware! As <a href="https://twitter.com/Nexus2kSwiss/status/1394395280120897544">Nexus2kSwiss points out on
twitter</a>, the
Mikrotik supports <strong>at most 2 RJ-45 SFPs at a time</strong>!</p>
<h2 id="fiber-module-upgrade">Fiber module upgrade</h2>
<p>I’m using 10 Gbit/s fiber SFP+ modules for the fiber link between my kitchen and
living room.</p>
<p>To make use of the 10 Gbit/s link between the switches, all devices that should
get their guaranteed 1 Gbit/s end-to-end connection need to be connected
directly to a Mikrotik switch.</p>
<p>I’m connecting the PCs to the switch using Direct Attach Cables (DAC) where
possible. The advantage of DAC cables over RJ45 SFP+ modules is their lower
power usage and heat.</p>
<p>The resulting list of SFP modules used in the two Mikrotik switches looks like
so:</p>
<table>
<thead>
<tr>
<th>Mikrotik 1 SFP</th>
<th>speed</th>
<th></th>
<th>speed</th>
<th>Mikrotik 2 SFP</th>
</tr>
</thead>
<tbody>
<tr>
<td>chuchi</td>
<td>10 Gbit/s DAC</td>
<td></td>
<td>10 Gbit/s DAC</td>
<td>midna</td>
</tr>
<tr>
<td>storage2</td>
<td>1 Gbit/s  RJ45</td>
<td></td>
<td>1 Gbit/s RJ45</td>
<td>router7</td>
</tr>
<tr>
<td></td>
<td>10 Gbit/s BiDi</td>
<td>⬅ BiDi fiber link ➡</td>
<td>10 Gbit/s BiDi</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="hardware-sourcing">Hardware sourcing</h2>
<p>The total cost of this upgrade is 676 CHF, with the biggest chunk spent on the
Mellanox ConnectX-3 network cards and MikroTik switches.</p>
<h3 id="fs-fiber-store-order">FS (Fiber Store) order</h3>
<p><a href="https://www.FS.COM">FS.COM</a> was my go-to source for anything
fiber-related. Everything they have is very affordable, and products in stock at
their German warehouse arrive in Switzerland (and presumably other European
countries, too) within the same week.</p>
<table>
<thead>
<tr>
<th>num</th>
<th>price</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>1 ×</td>
<td>34 CHF</td>
<td><a href="https://www.fs.com/de/products/74681.html">Generic Compatible 10GBASE-BX BiDi SFP+ 1270nm-TX/1330nm-RX 10km DOM Transceiver Module, FS P/N: SFP-10G-BX #74681</a></td>
</tr>
<tr>
<td>1 ×</td>
<td>34 CHF</td>
<td><a href="https://www.fs.com/de/products/74682.html">Generic Compatible 10GBASE-BX BiDi SFP+ 1330nm-TX/1270nm-RX 10km DOM Transceiver Module, FS P/N: SFP-10G-BX #74682</a></td>
</tr>
<tr>
<td>2 ×</td>
<td>14 CHF</td>
<td><a href="https://www.fs.com/de/products/74621.html">3m Generic Compatible 10G SFP+ Passive Direct Attach Copper Twinax Cable</a></td>
</tr>
<tr>
<td>0 ×</td>
<td>56 CHF</td>
<td><del><a href="https://www.fs.com/de/products/74680.html">SFP+ Transceiver Modul - Generisch kompatibel 10GBASE-T SFP+ Kupfer RJ-45 30m, FS P/N: SFP-10G-T #74680</a></del></td>
</tr>
</tbody>
</table>
<h3 id="digitec-order">digitec order</h3>
<p>There are a few items that <a href="https://www.FS.COM">FS.COM</a> doesn’t stock. These I
bought at <a href="https://www.digitec.ch/">digitec</a>, a big and popular electronics
store in Switzerland. My thinking is that if products are available at digitec,
they most likely are available at your preferred big electronics store, too.</p>
<table>
<thead>
<tr>
<th>num</th>
<th>price</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>2 ×</td>
<td>149 CHF</td>
<td><a href="https://www.digitec.ch/de/s1/product/mikrotik-crs305-1g-4sin-5ports-switch-9876046">Mikrotik CRS305-1G-4S+IN</a> switch</td>
</tr>
</tbody>
</table>
<h3 id="misc-order">misc order</h3>
<p>The Mellanox cards are not as widely available as I’d like.</p>
<p>I’m waiting for an FS.COM card to arrive, which might be a better choice.</p>
<table>
<thead>
<tr>
<th>num</th>
<th>price</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>2 ×</td>
<td>129 EUR</td>
<td><a href="https://www.heise.de/preisvergleich/nvidia-mellanox-connectx-3-en-10g-mcx311a-xcat-a2508412.html">Mellanox ConnectX-3 MCX311A-XCAT</a></td>
</tr>
</tbody>
</table>
<h2 id="mikrotik-switch-setup">Mikrotik switch setup</h2>
<p>I want to use my switches only as switches, not for any routing or other layer 3
features that might reduce bandwidth, so I first reboot the <a href="https://mikrotik.com/product/crs305_1g_4s_in">MikroTik
CRS305-1G-4S+</a> into SwOS:</p>
<ol>
<li>
<p>In the web interface menu, navigate to <em>System → Routerboard →
Settings</em>, open the <em>Boot OS</em> drop-down and select option
<em>SwOS</em>.</p>
</li>
<li>
<p>In the web interface menu, navigate to <em>System → Reboot</em>.</p>
</li>
<li>
<p>After the device rebooted, change the hostname which was reset to <code>MikroTik</code>.</p>
</li>
</ol>
<p>Next, upgrade the firmware to 2.12 to fix a weird issue with certain
combinations of SFP modules (SFP-10G-BX in SFP1, SFP-10G-T in SFP2):</p>
<ol>
<li>In the SwOS web interface, select the <em>Upgrade</em> tab, then click
<em>Download &amp; Upgrade</em>.</li>
</ol>
<h2 id="network-card-setup-linux">Network card setup (Linux)</h2>
<p>After booting with the Mellanox ConnectX3 in a PCIe slot, the card should show
up in <a href="https://manpages.debian.org/dmesg.8"><code>dmesg(8)</code></a>
:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">mlx4_core: Mellanox ConnectX core driver v4.0-0
mlx4_core: Initializing 0000:03:00.0
mlx4_core 0000:03:00.0: DMFS high rate steer mode is: disabled performance optimized steering
<span style="display:block;width:100%;background-color:#d8d8d8">mlx4_core 0000:03:00.0: 31.504 Gb/s available PCIe bandwidth (8.0 GT/s PCIe x4 link)
</span>mlx4_en: Mellanox ConnectX HCA Ethernet driver v4.0-0
mlx4_en 0000:03:00.0: Activating port:1
mlx4_en: 0000:03:00.0: Port 1: Using 16 TX rings
mlx4_en: 0000:03:00.0: Port 1: Using 16 RX rings
mlx4_en: 0000:03:00.0: Port 1: Initializing port
mlx4_en 0000:03:00.0: registered PHC clock
mlx4_core 0000:03:00.0 enp3s0: renamed from eth0
&lt;mlx4_ib&gt; mlx4_ib_add: mlx4_ib: Mellanox ConnectX InfiniBand driver v4.0-0
&lt;mlx4_ib&gt; mlx4_ib_add: counter index 1 for port 1 allocated 1
mlx4_en: enp3s0: Steering Mode 1
mlx4_en: enp3s0: Link Up</code></pre></div>
<p>Another way to verify the device is running at maximum speed on the computer’s
PCIe bus, is to ensure <code>LnkSta</code> matches <code>LnkCap</code> in the <a href="https://manpages.debian.org/lspci.8"><code>lspci(8)</code></a>
 output:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">% sudo lspci -vv
03:00.0 Ethernet controller: Mellanox Technologies MT27500 Family [ConnectX-3]
	Subsystem: Mellanox Technologies Device 0055
[…]
	Capabilities: [60] Express (v2) Endpoint, MSI 00
[…]
<span style="display:block;width:100%;background-color:#d8d8d8">		LnkCap:	Port #8, Speed 8GT/s, Width x4, ASPM L0s, Exit Latency L0s unlimited
</span>			ClockPM- Surprise- LLActRep- BwNot- ASPMOptComp+
		LnkCtl:	ASPM Disabled; RCB 64 bytes, Disabled- CommClk+
			ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt-
<span style="display:block;width:100%;background-color:#d8d8d8">		LnkSta:	Speed 8GT/s (ok), Width x4 (ok)
</span>			TrErr- Train- SlotClk+ DLActive- BWMgmt- ABWMgmt-
[…]</code></pre></div>
<p>You can verify your network link is running at 10 Gbit/s using <a href="https://manpages.debian.org/ethtool.8"><code>ethtool(8)</code></a>
:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">% sudo ethtool enp3s0
Settings for enp3s0:
	Supported ports: [ FIBRE ]
	Supported link modes:   1000baseKX/Full
	                        10000baseKR/Full
	Supported pause frame use: Symmetric Receive-only
	Supports auto-negotiation: No
	Supported FEC modes: Not reported
	Advertised link modes:  1000baseKX/Full
	                        10000baseKR/Full
	Advertised pause frame use: Symmetric
	Advertised auto-negotiation: No
	Advertised FEC modes: Not reported
<span style="display:block;width:100%;background-color:#d8d8d8">	Speed: 10000Mb/s
</span>	Duplex: Full
	Auto-negotiation: off
	Port: Direct Attach Copper
	PHYAD: 0
	Transceiver: internal
	Supports Wake-on: d
	Wake-on: d
        Current message level: 0x00000014 (20)
                               link ifdown
	Link detected: yes</code></pre></div>
<h2 id="benchmarking-batch-transfers">Benchmarking batch transfers</h2>
<p>As mentioned in the introduction, routing 10 Gbit/s is out of scope in this
article. If you’re interested in routing performance, check out Andree Toonk’s
<a href="https://toonk.io/linux-kernel-and-measuring-network-throughput/index.html">post which confirms that Linux can route 10 Gbit/s at line
rate</a>.</p>
<p>The following sections cover individual batch transfers of large files, not many
small flows.</p>
<h3 id="iperf3-speed-test">iperf3 speed test</h3>
<p>Out of the box, the speeds that <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 measures
are decent:</p>
<pre tabindex="0"><code>chuchi % iperf3 --version
iperf 3.6 (cJSON 1.5.2)
Linux chuchi 4.19.0-16-amd64 #1 SMP Debian 4.19.181-1 (2021-03-19) x86_64
Optional features available: CPU affinity setting, IPv6 flow label, SCTP, TCP congestion algorithm setting, sendfile / zerocopy, socket pacing, authentication

chuchi % iperf3 --server
[…]

midna % iperf3 --version          
iperf 3.9 (cJSON 1.7.13)
Linux midna 5.12.1-arch1-1 #1 SMP PREEMPT Sun, 02 May 2021 12:43:58 +0000 x86_64
Optional features available: CPU affinity setting, IPv6 flow label, TCP congestion algorithm setting, sendfile / zerocopy, socket pacing, authentication

midna % iperf3 --client chuchi.lan
Connecting to host 10.0.0.173, port 5201
[  5] local 10.0.0.76 port 43168 connected to 10.0.0.173 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-1.00   sec  1.10 GBytes  9.42 Gbits/sec    0   1.62 MBytes       
[  5]   1.00-2.00   sec  1.09 GBytes  9.41 Gbits/sec    0   1.70 MBytes       
[  5]   2.00-3.00   sec  1.10 GBytes  9.41 Gbits/sec    0   1.70 MBytes       
[  5]   3.00-4.00   sec  1.09 GBytes  9.41 Gbits/sec    0   1.78 MBytes       
[  5]   4.00-5.00   sec  1.09 GBytes  9.41 Gbits/sec    0   1.87 MBytes       
[  5]   5.00-6.00   sec  1.10 GBytes  9.42 Gbits/sec    0   1.87 MBytes       
[  5]   6.00-7.00   sec  1.10 GBytes  9.42 Gbits/sec    0   1.87 MBytes       
[  5]   7.00-8.00   sec  1.10 GBytes  9.41 Gbits/sec    0   1.87 MBytes       
[  5]   8.00-9.00   sec  1.09 GBytes  9.41 Gbits/sec    0   1.96 MBytes       
[  5]   9.00-10.00  sec  1.09 GBytes  9.38 Gbits/sec  402   1.52 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.00  sec  11.0 GBytes  9.41 Gbits/sec  402             sender
[  5]   0.00-10.00  sec  11.0 GBytes  9.40 Gbits/sec                  receiver

iperf Done.
</code></pre><h3 id="http-speed-test">HTTP speed test</h3>
<p>Downloading a file from an <a href="https://manpages.debian.org/nginx.1"><code>nginx(1)</code></a>
 web server using <a href="https://manpages.debian.org/curl.1"><code>curl(1)</code></a>
 is fast, too:</p>
<pre tabindex="0"><code>% curl -o /dev/null http://chuchi.lan/distri/supersilverhaze/img/distri-disk.img.zst
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  934M  100  934M    0     0  1118M      0 --:--:-- --:--:-- --:--:-- 1117M
</code></pre><p>Note that this download was served from RAM (Linux page cache). The next upgrade
I need to do in this machine is replace the SATA SSD with an NVMe SSD, because
the disk is now the bottleneck.</p>
<h2 id="conclusion">Conclusion</h2>
<p>This was a pleasantly simple upgrade: plug in a bunch of new hardware and batch
transfers become faster.</p>
<p>The Mikrotik switch provides great value for money, and the Mellanox ConnectX-3
cards work well, provided you can find them.</p>
<h2 id="appendix-a-switching-from-rj45-sfp-modules-to-direct-attach-cables">Appendix A: Switching from RJ45 SFP+ modules to Direct Attach Cables</h2>
<p>Originally, I connected all PCs to the MikroTik switches with RJ45 SFP+ modules
for two reasons:</p>
<ol>
<li>I bought <a href="https://www.digitec.ch/de/s1/product/intel-x550-t2-pci-express-30-netzwerkadapter-5926807">Intel
X550-T2</a>
PCIe 10 Gbit/s network cards that RJ45 as my first choice.</li>
<li>The SFP+ modules are backwards-compatible and can be used with 1 Gbit/s RJ45
devices, too, which makes for a nice incremental upgrade path.</li>
</ol>
<p>However, I later was made aware that the RJ45 SFP+ modules use significantly
more power and run significantly hotter than Direct Attach Cables (DAC).</p>
<p>I measured it: each RJ45 SFP+ module was causing my BiDi SFP+ module to run 5℃
hotter!</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-06-06-sfp-temperatures.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-06-06-sfp-temperatures_hu7dc6d141e645d7cfd271ec6844fcfc18_272504_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-06-06-sfp-temperatures_hu7dc6d141e645d7cfd271ec6844fcfc18_272504_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-06-06-sfp-temperatures_hu7dc6d141e645d7cfd271ec6844fcfc18_272504_600x0_resize_q75_box.jpg"
  
  width="600"
  height="269"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Around 06/02 I replaced one RJ45 SFP+ module with a Direct Attach Cable.</p>
<p>Around 06/06 I replaced the remaining RJ45 SFP+ module with another Direct
Attach Cable.</p>
<p>As you can see, this caused a 10℃ drop in temperature of the BiDi SFP+ module.</p>
<p>The MikroTik is still uncomfortably hot, making it hard to work with when it’s
powered on.</p>
<h2 id="appendix-b-network-card-setup-linux-with-intel-x550-t2">Appendix B: Network card setup (Linux) with Intel X550-T2</h2>
<p>For reference, here is the Network card setup (Linux) section, but with the
Intel X550-T2 that I previously used.</p>
<p>After booting with the Intel X550-T2 in a PCIe slot, the card should show up in
<a href="https://manpages.debian.org/dmesg.8"><code>dmesg(8)</code></a>
:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">ixgbe: Intel(R) 10 Gigabit PCI Express Network Driver
ixgbe 0000:03:00.0: Multiqueue Enabled: Rx Queue count = 16, Tx Queue count = 16 XDP Queue count = 0
<span style="display:block;width:100%;background-color:#d8d8d8">ixgbe 0000:03:00.0: 31.504 Gb/s available PCIe bandwidth (8.0 GT/s PCIe x4 link)
</span>ixgbe 0000:03:00.0: MAC: 4, PHY: 0, PBA No: H86377-006
ixgbe 0000:03:00.0: Intel(R) 10 Gigabit Network Connection
libphy: ixgbe-mdio: probed
ixgbe 0000:03:00.1: Multiqueue Enabled: Rx Queue count = 16, Tx Queue count = 16 XDP Queue count = 0
<span style="display:block;width:100%;background-color:#d8d8d8">ixgbe 0000:03:00.1: 31.504 Gb/s available PCIe bandwidth (8.0 GT/s PCIe x4 link)
</span>ixgbe 0000:03:00.1: MAC: 4, PHY: 0, PBA No: H86377-006
tun: Universal TUN/TAP device driver, 1.6
ixgbe 0000:03:00.1: Intel(R) 10 Gigabit Network Connection
libphy: ixgbe-mdio: probed
ixgbe 0000:03:00.0 enp3s0f0: renamed from eth0
ixgbe 0000:03:00.1 enp3s0f1: renamed from eth1
pps pps0: new PPS source ptp1
ixgbe 0000:03:00.0: registered PHC device on enp3s0f0
pps pps1: new PPS source ptp2
ixgbe 0000:03:00.1: registered PHC device on enp3s0f1</code></pre></div>
<p>I think if you only use 1 of the card’s 2 network ports, you might not hit any
bottlenecks even when running the card only at <a href="https://en.wikipedia.org/wiki/PCI_Express#History_and_revisions">PCIe 3.0 ×2 link
speed</a>, but I
haven’t verified this!</p>
<p>Another way to verify the device is running at maximum speed on the computer’s
PCIe bus, is to ensure <code>LnkSta</code> matches <code>LnkCap</code> in the <a href="https://manpages.debian.org/lspci.8"><code>lspci(8)</code></a>
 output:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">% sudo lspci -vv
[…]
03:00.0 Ethernet controller: Intel Corporation Ethernet Controller 10G X550T (rev 01)
        Subsystem: Intel Corporation Ethernet Converged Network Adapter X550-T2
[…]
        Capabilities: [a0] Express (v2) Endpoint, MSI 00
[…]
<span style="display:block;width:100%;background-color:#d8d8d8">                LnkCap: Port #0, Speed 8GT/s, Width x4, ASPM L0s L1, Exit Latency L0s &lt;2us, L1 &lt;16us
</span>                        ClockPM- Surprise- LLActRep- BwNot- ASPMOptComp+
                LnkCtl: ASPM Disabled; RCB 64 bytes, Disabled- CommClk+
                        ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt-
<span style="display:block;width:100%;background-color:#d8d8d8">                LnkSta: Speed 8GT/s (ok), Width x4 (ok)
</span>                        TrErr- Train- SlotClk+ DLActive- BWMgmt- ABWMgmt-
[…]</code></pre></div>
<p>You can verify your network link is running at 10 Gbit/s using <a href="https://manpages.debian.org/ethtool.8"><code>ethtool(8)</code></a>
:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">% sudo ethtool enp3s0f1 
Settings for enp3s0f1:
	Supported ports: [ TP ]
	Supported link modes:   100baseT/Full
	                        1000baseT/Full
<span style="display:block;width:100%;background-color:#d8d8d8">	                        10000baseT/Full
</span>	                        2500baseT/Full
	                        5000baseT/Full
	Supported pause frame use: Symmetric
	Supports auto-negotiation: Yes
	Supported FEC modes: Not reported
	Advertised link modes:  100baseT/Full
	                        1000baseT/Full
	                        10000baseT/Full
	Advertised pause frame use: Symmetric
	Advertised auto-negotiation: Yes
	Advertised FEC modes: Not reported
<span style="display:block;width:100%;background-color:#d8d8d8">	Speed: 10000Mb/s
</span>	Duplex: Full
	Auto-negotiation: on
	Port: Twisted Pair
	PHYAD: 0
	Transceiver: internal
	MDI-X: Unknown
	Supports Wake-on: d
	Wake-on: d
        Current message level: 0x00000007 (7)
                               drv probe link
	Link detected: yes</code></pre></div>
<h2 id="appendix-c-bios-update-for-mellanox-connectx-3">Appendix C: BIOS update for Mellanox ConnectX-3</h2>
<p>On my Supermicro X11SSZ-QF mainboard, the Mellanox ConnectX-3 would not
establish a link. The Mellanox Linux kernel driver logged a number of errors:</p>
<pre tabindex="0"><code>kernel: mlx4_en: enp1s0: CQE error - cqn 0x8e, ci 0x0, vendor syndrome: 0x57 syndrome: 0x4
kernel: mlx4_en: enp1s0: Related WQE - qpn 0x20d, wqe index 0x0, wqe size 0x40
kernel: mlx4_en: enp1s0: Scheduling port restart
kernel: mlx4_core 0000:01:00.0: Internal error detected:
kernel: mlx4_core 0000:01:00.0: device is going to be reset
kernel: mlx4_core 0000:01:00.0: crdump: devlink snapshot disabled, skipping
kernel: mlx4_core 0000:01:00.0: device was reset successfully
kernel: mlx4_en 0000:01:00.0: Internal error detected, restarting device
kernel: &lt;mlx4_ib&gt; mlx4_ib_handle_catas_error: mlx4_ib_handle_catas_error was started
kernel: &lt;mlx4_ib&gt; mlx4_ib_handle_catas_error: mlx4_ib_handle_catas_error ended
kernel: mlx4_core 0000:01:00.0: command 0x21 failed: fw status = 0x1
kernel: pcieport 0000:00:1c.0: AER: Uncorrected (Fatal) error received: 0000:00:1c.0
kernel: pcieport 0000:00:1c.0: PCIe Bus Error: severity=Uncorrected (Fatal), type=Transaction Layer, (Receiver ID)
kernel: mlx4_core 0000:01:00.0: command 0x43 failed: fw status = 0x1
kernel: infiniband mlx4_0: ib_query_port failed (-5)
kernel: pcieport 0000:00:1c.0:   device [8086:a110] error status/mask=00040000/00010000
kernel: pcieport 0000:00:1c.0:    [18] MalfTLP                (First)
kernel: pcieport 0000:00:1c.0: AER:   TLP Header: 4a000001 01000004 00000000 00000000
kernel: mlx4_core 0000:01:00.0: mlx4_pci_err_detected was called
kernel: mlx4_core 0000:01:00.0: Fail to set mac in port 1 during unregister
systemd-networkd[313]: enp1s0: Link DOWN
kernel: mlx4_en: enp1s0: Failed activating Rx CQ
kernel: mlx4_en: enp1s0: Failed restarting port 1
kernel: mlx4_en: enp1s0: Link Down
kernel: mlx4_en: enp1s0: Close port called
systemd-networkd[313]: enp1s0: Lost carrier
kernel: mlx4_en 0000:01:00.0: removed PHC
kernel: mlx4_core 0000:01:00.0: mlx4_restart_one_up: ERROR: mlx4_load_one failed, pci_name=0000:01:00.0, err=-5
kernel: mlx4_core 0000:01:00.0: mlx4_restart_one was ended, ret=-5
systemd-networkd[313]: enp1s0: DHCPv6 lease lost
kernel: pcieport 0000:00:1c.0: AER: Root Port link has been reset
kernel: mlx4_core 0000:01:00.0: mlx4_pci_resume was called
kernel: mlx4_core 0000:01:00.0: Multiple PFs not yet supported - Skipping PF
kernel: mlx4_core 0000:01:00.0: mlx4_pci_resume: mlx4_load_one failed, err=-22
kernel: pcieport 0000:00:1c.0: AER: device recovery successful
</code></pre><p>What helped was to update the X11SSZ-QF BIOS to the latest version.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Adding a fiber link to my home network]]></title>
    <link href="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/"/>
    <id>https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/</id>
    <published>2020-08-09T14:53:53+02:00</published>
    <content type="html"><![CDATA[<h2 id="motivation">Motivation</h2>
<p>Despite using a FTTH internet connection since 2014, aside from the one fiber
uplink, I had always used network gear with 1 Gbit/s links over regular old rj45
cat5(e) cables.</p>
<hr>
<p>I liked the simplicity and uniformity of that setup, but decided it’s time to
add at least one fiber connection, to <strong>get rid of a temporary ethernet cable</strong>
that connected my kitchen with the rest of my network that is largely in the
living room and office.</p>
<p>The temporary ethernet cable was an experiment to verify that running a server
or two in my kitchen actually works (it does!). I used a <a href="https://www.digitec.ch/de/s1/product/hama-cat-6-flach-we-1000cm-netzwerkkabel-7465292">flat ethernet
cable</a>,
which is great for test setups like that, as you can often tape it onto the
walls and still close the doors.</p>
<p>So, we will replace one ethernet cable with one fiber cable and converters at
each end:</p>















<a href="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-media-converters.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_600x0_resize_q75_box.jpg"
  alt="0.9mm thin fiber cables" title="0.9mm thin fiber cables"
  width="600"
  height="217"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Why is it good to switch from copper ethernet cables to fiber in this case?
Fiber cables are <strong>smaller and hence easier to fit</strong> into existing cable
ducts. While regular ethernet cable is way too thick to fit into any of the
existing ducts in my flat, I was hoping that fiber might fit!</p>
<p>When I actually received the cables, I was surprised <strong>how much thinner</strong> fiber
cables actually can be: there are 0.9mm cables, which are so thin, they can be
hidden in plain sight! I had only ever seen 2mm fiber cables before, and the
0.9mm cables are incredibly light, flexible and thin! Even pasta is typically
thicker:</p>















<a href="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-glasnudeln.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-glasnudeln_huff6805db50351ab1fa4ea96b741ae340_1675440_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-glasnudeln_huff6805db50351ab1fa4ea96b741ae340_1675440_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-glasnudeln_huff6805db50351ab1fa4ea96b741ae340_1675440_600x0_resize_q75_box.jpg"
  alt="Preparing a delicious pot of glass noodles ;)" title="Preparing a delicious pot of glass noodles ;)"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p><small><em>Preparing a delicious pot of glass noodles ;)</em></small></p>
<hr>
<p>The cable shown above comes from <a href="https://www.FS.COM/company/about_us.html">the fiber store
FS.COM</a>, which different people have
praised on multiple occasions, so naturally I was curious to give them a shot
myself.</p>
<p>Also, for the longest time, it was my understanding that fiber connectors can
only be put onto fiber cables using expensive (≫2000 CHF) machines. A while ago
I heard about <strong>field assembly connectors</strong> so I wanted to verify that those
indeed work.</p>
<hr>
<p>Aside from practical reasons, playing around with fiber networking also makes
for a good hobby during a pandemic :)</p>
<h2 id="hardware-selection">Hardware Selection</h2>
<p>I ordered all my fiber equipment at <a href="https://www.FS.COM">FS.COM</a>: everything
they have is very affordable, and products in stock at their German warehouse
arrive in Switzerland (and presumably other European countries) within the same
week.</p>
<p>If you are in the luxurious position to have enough physical space and agility
to pull through an entire fiber cable, <strong>without having to remove any
connectors</strong>, you can make a new network connection with just a few parts:</p>
<table>
<thead>
<tr>
<th>amt</th>
<th>price</th>
<th>total</th>
<th>article</th>
<th>note</th>
</tr>
</thead>
<tbody>
<tr>
<td>2x</td>
<td>36 CHF</td>
<td>72 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/17237.html">#17237</a></td>
<td><a href="https://www.FS.COM/de-en/products/17237.html">1 Gbit/s media converter RJ45/SFP</a></td>
</tr>
<tr>
<td>1x</td>
<td>8.5 CHF</td>
<td>8.5 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/75339.html">#39135</a></td>
<td><a href="https://www.FS.COM/de-en/products/75339.html">1 Gbit/s BiDi SFP 1310nm-TX/1550nm-RX</a></td>
</tr>
<tr>
<td>1x</td>
<td>11 CHF</td>
<td>11 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/75340.html">#39138</a></td>
<td><a href="https://www.FS.COM/de-en/products/75340.html">1 Gbit/s BiDi SFP 1550nm-TX/1310nm-RX</a></td>
</tr>
<tr>
<td>1x</td>
<td>2.3 CHF</td>
<td>2.3 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/12285.html">#12285</a></td>
<td><a href="https://www.FS.COM/de-en/products/12285.html">fiber cable, 0.9mm LC UPC/LC UPC simplex</a></td>
</tr>
</tbody>
</table>
<p>I recommend buying an extra fiber cable or two so that you can accidentally
damage a cable and still have enough spares.</p>
<p>Total cost thus far: just under 100 CHF. If you have existing switches with a
free SFP slot, you can use those instead of the media converters and save most
of the cost.</p>
<hr>
<p>If you need to <strong>temporarily remove</strong> one or both of the fiber cable connector(s),
you also need field assembly connectors and a few tools in addition:</p>
<table>
<thead>
<tr>
<th>amt</th>
<th>price</th>
<th>total</th>
<th>article</th>
<th>note</th>
</tr>
</thead>
<tbody>
<tr>
<td>2x</td>
<td>4 CHF</td>
<td>8 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/35165.html">#35165</a></td>
<td><a href="https://www.FS.COM/de-en/products/35165.html">LC/UPC 0.9mm pre-polished field assembly connector</a></td>
</tr>
<tr>
<td>1x</td>
<td>110 CHF</td>
<td>110 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/14341.html">#14341</a></td>
<td><a href="https://www.FS.COM/de-en/products/14341.html">High Precision Fibre Optic Cleaver FS-08C</a></td>
</tr>
<tr>
<td>1x</td>
<td>26 CHF</td>
<td>26 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/14346.html">#14346</a></td>
<td><a href="https://www.FS.COM/de-en/products/14346.html">Fibre Optic Kevlar Cutter</a></td>
</tr>
<tr>
<td>1x</td>
<td>14 CHF</td>
<td>14 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/72812.html">#72812</a></td>
<td><a href="https://www.FS.COM/de-en/products/72812.html">Fibre Optical Stripper</a></td>
</tr>
</tbody>
</table>
<p>I recommend buying twice the number of field assembly connectors, for practicing.</p>
<p>Personally, I screwed up two connectors before figuring out <a href="#field-assembly-connectors">how the process
goes</a>.</p>
<p>Total cost: about 160 CHF for the field assembly equipment, so 260 CHF in total.</p>
<hr>
<p>To boost your confidence in the resulting fiber, the following items are nice to
have, but you can get by without, if you’re on a budget.</p>
<table>
<thead>
<tr>
<th>price</th>
<th>article</th>
<th>note</th>
</tr>
</thead>
<tbody>
<tr>
<td>18 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/35388.html">#35388</a></td>
<td><a href="https://www.FS.COM/de-en/products/35388.html">FVFL-204 Visual Fault Locator</a></td>
</tr>
<tr>
<td>9.40 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/82730.html">#82730</a></td>
<td><a href="https://www.FS.COM/de-en/products/82730.html">2.5mm to 1.25mm adapter for Visual Fault Locator</a></td>
</tr>
<tr>
<td>4.10 CHF</td>
<td><a href="https://www.FS.COM/de-en/products/14010.html">#14010</a></td>
<td><a href="https://www.FS.COM/de-en/products/14010.html">1.25mm fiber clean swabs (100pcs)</a></td>
</tr>
</tbody>
</table>
<p>With the visual fault locator, you can shine a light through your fiber. You can
verify correct connector assembly by looking at how the light comes out of the
connector.</p>
<p>The fiber cleaning swabs are good to have in general, but for the field assembly
connector, you need to use alcohol-soaked wipes anyway (which FS.COM does not
stock).</p>
<p>The total cost for everything is just under 300 CHF.</p>
<h3 id="hardware-selection-process">Hardware Selection Process</h3>
<p>The large selection at FS.COM can be overwhelming to navigate at first. My
selection process went something like this:</p>
<p>My first constraint is using bi-directional (BiDi) fiber optics modules so that
I only need to lay a single fiber cable, as opposed to two fiber cables.</p>
<p>The second constraint is to use field assembly connectors.</p>
<p>If possible, I wanted to use <a href="https://community.FS.COM/blog/why-not-use-bend-insensitive-fiber-optic-cable-to-reduce-bend-radius.html">bend-insensitive
fiber</a>
so that I wouldn’t need to pay so much attention to the bend radius and have
more flexibility in where and how I can lay fiber.</p>
<p>With these constraints, there aren’t too many products left to combine. An
obvious and good choice are 0.9mm fiber cable using LC/UPC connectors.</p>
<h3 id="fscom-details">FS.COM details</h3>
<p>As of 2020-08-05, FS.COM states they have 5 warehouses in 4 locations:</p>
<ul>
<li>Delaware (US)</li>
<li>Munich (Germany)</li>
<li>Melbourne (Australia)</li>
<li>Shenzhen (China)</li>
</ul>
<p>They recently built another, bigger (7 km²) warehouse in Shenzhen, and now
produce inventory for the whole year.</p>
<p>By 2019, FS.COM had over 300,000 registered corporate customers, reaching nearly
200 million USD yearly sales.</p>
<h2 id="delivery-times">Delivery times</h2>
<p>As mentioned before, delivery times are quick when the products are in stock at
FS.COM’s German warehouse.</p>
<p>In my case, I put in my order on 2020-Jun-26.</p>
<p>The items that shipped from the German warehouse arrived on 2020-Jul-01.</p>
<p>Some items had to be manufactured and/or shipped from Asia. Those items arrived
after 3 more weeks, on 2020-Jul-24.</p>
<p>Unfortunately, FS.COM doesn’t stock any 0.9mm fiber cables in their German
warehouse right now, so be prepared for a few weeks of waiting time.</p>
<h2 id="laying-the-fiber">Laying The Fiber</h2>
<p>Use a cable puller to pull the fiber through existing cable ducts where
possible.</p>
<ul>
<li>
<p>In general, buy the thinnest one you can find. I have <a href="https://www.distrelec.ch/en/cable-pull-strap-10m-tools-495005/p/18092626">this 4mm diameter cable
puller</a>,
but a 3mm or even 2mm one would work in more situations.</p>
</li>
<li>
<p>I found it worthwhile to buy a brand one. It is distinctly better to handle
(less stiff, i.e. more flexible) than the cheap one I got, and thinner, too,
which is always good.</p>
</li>
</ul>
<p>In my experience, it generally did not work well to <strong>push</strong> the fiber into an
existing duct or alongside an existing cable. I really needed a cable
<strong>puller</strong>.</p>
<p>If you’re lucky and have enough space in your duct(s), you can leave the
existing connectors on the fiber. I have successfully just used a piece of tape
to fix the fiber connector on the cable puller, pushing down the nose
temporarily:</p>















<a href="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-cable-puller.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-cable-puller_hu671a386c131e99c47b0e8674d4173388_933240_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-cable-puller_hu671a386c131e99c47b0e8674d4173388_933240_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-cable-puller_hu671a386c131e99c47b0e8674d4173388_933240_600x0_resize_q75_box.jpg"
  alt="fiber cable taped to cable puller" title="fiber cable taped to cable puller"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Where there are no existing ducts, you may need to lay the fiber on top of the
wall. Obviously, this is tricky as soon as you need to make a connection going
through a wall: whereas copper ethernet cables can be bent and squeezed into
door frames, you quickly risk breaking fiber cables.</p>
<p>Luckily, the fiber is very light, so it’s very easy to fix to the wall with a
piece of tape:</p>















<a href="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-wand-kabel.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-wand-kabel_hu266a050a008f40ca1627a87ee11d809f_563690_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-wand-kabel_hu266a050a008f40ca1627a87ee11d809f_563690_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-wand-kabel_hu266a050a008f40ca1627a87ee11d809f_563690_600x0_resize_q75_box.jpg"
  alt="fiber cables on the wall" title="fiber cables on the wall"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>You can see the upstream internet fiber in the top right corner, which is rather
thick in comparison to my 0.9mm yellow fiber that’s barely visible in the middle
of the picture.</p>
<p>Note how the fiber entirely disappears behind the existing duct atop the
door!</p>
<p>Above, you can see the flat ethernet cable I have been using as a temporary
experiment.</p>
<hr>
<p>Where there is an existing cable that you can temporarily remove, it might be
possible to remove it, put the fiber in, and put the old cable back in,
too. This is possible because the 0.9mm fiber cable is so thin!</p>
<p>I’m using this technique to cross another wall where the existing cable duct is
too full, but there is a cable that can be removed and put back after pulling
the fiber through:</p>















<a href="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-loch.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-loch_hu72eb317f66154a6cd4cb4580e2e045bd_823912_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-loch_hu72eb317f66154a6cd4cb4580e2e045bd_823912_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-loch_hu72eb317f66154a6cd4cb4580e2e045bd_823912_600x0_resize_q75_box.jpg"
  alt="fiber cable next to existing cable" title="fiber cable next to existing cable"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>…and on the other side of the wall:</p>















<a href="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-dose.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-dose_hubb166f4dcb345f6dba1f730b24be242a_880410_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-dose_hubb166f4dcb345f6dba1f730b24be242a_880410_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-04-dose_hubb166f4dcb345f6dba1f730b24be242a_880410_600x0_resize_q75_box.jpg"
  alt="fiber cable next to existing socket" title="fiber cable next to existing socket"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Note how the fiber is thin enough to fit between the socket and duct!</p>
<hr>
<p><strong>Note:</strong> despite measuring how long a fiber cable I would need, my cable turned
out too short! While the cable was just as long as I had measured, with
distances exceeding 10m, it is a good idea to <strong>add a few meters spare</strong> on each
side of the connection.</p>
<h2 id="field-assembly-connectors">Field assembly connectors</h2>
<p>To give you an overview, these are the required steps at a high level:</p>
<ol>
<li>Cut the fiber with the <a href="https://www.FS.COM/de-en/products/14346.html">Fibre Optic Kevlar Cutter</a></li>
<li>Strip the fiber with the <a href="https://www.FS.COM/de-en/products/72812.html">Fibre Optical Stripper</a></li>
<li>Put the field assembly <em>jacket</em> onto the fiber</li>
<li>Cut the stripped fiber cleanly with the <a href="https://www.FS.COM/de-en/products/14341.html">High Precision Fibre Optic Cleaver FS-08C</a></li>
<li>Put the field assembly <em>connector</em> onto the fiber</li>
</ol>
<hr>
<p>I thought the following resources were useful:</p>
<ol>
<li>Pictograms: <a href="https://img-en.fs.com/file/user_manual/lc-field-assembly-connector-quick-start-guide-v1.0.pdf">PDF: FS.COM LC UPC field assembley connectors quick start
guide</a></li>
<li>Pictures: <a href="https://www.fs.com/de-en/products/35165.html">Installation Procedure on
FS.COM</a></li>
<li>Video: <a href="https://www.youtube.com/watch?v=epTzemeJjAw">YouTube: Terminate Fiber in 5
Minutes</a>: this video shows a
different product, but I found it helpful to see any field assembly connector
on video, and this is one of the better videos I could find.</li>
</ol>
<!-- TODO: include a link to my own video once published -->
<hr>
<p><strong>Beware:</strong> the little paper booklet that comes with the field assembly
connector contains measurements which are <strong>not to scale</strong>. I have suggested to
FS.COM that they fix this, but until then, you’ll need to use e.g. a tape
measure.</p>
<hr>
<p>For establishing an intuition of their different sizes, here are the different connectors:</p>















<a href="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-07-fiber-cable-connector-size-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-07-fiber-cable-connector-size-featured_hu6d8d68e7ce7a86b2365302ce19348267_984529_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-07-fiber-cable-connector-size-featured_hu6d8d68e7ce7a86b2365302ce19348267_984529_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2020-08-09-fiber-link-home-network/2020-08-07-fiber-cable-connector-size-featured_hu6d8d68e7ce7a86b2365302ce19348267_984529_600x0_resize_q75_box.jpg"
  alt="fiber cable connectors" title="fiber cable connectors"
  width="600"
  height="398"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>From left to right:</p>
<ul>
<li>2.0mm fiber cable</li>
<li>cat6 ethernet cable</li>
<li>0.9mm fiber cable (LC/UPC factory)</li>
<li>0.9mm fiber cable (LC/UPC field assembly connector)</li>
</ul>
<p>The 0.9mm fiber cables come with smaller connectors than the 2.0mm fiber cables,
and that alone might be a reason to prefer them in some situations.</p>
<p>The field assembly connectors are pretty bulky in comparison, but since you can
attach them yourself after pulling only the cable through the walls and/or
ducts, you usually don’t care too much about their size.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Modern fiber cables available at FS.COM are:</p>
<ul>
<li>thinner than I expected</li>
<li>more robust than I expected</li>
<li>cheaper than I expected</li>
<li>survive tighter bend radiuses than I expected</li>
</ul>
<p>Replacing this particular connection with a fiber connection was a smooth
process overall, and I would recommend it in other situations as well.</p>
<hr>
<p>I would claim that it is <strong>totally feasible</strong> for anyone with an hour of
patience to learn how to put a field assembly connector onto a fiber cable.</p>
<p>If labor cost is expensive in your country or you just like doing things
yourself, I can definitely recommend this approach. In case you mess the
connector up and don’t want to fix it yourself, you can always call an
electrician!</p>
<hr>
<p>Stay tuned for the next part, where I upgrade the 1G link to a 10G link!</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Fiber7 performance]]></title>
    <link href="https://michael.stapelberg.ch/posts/2014-09-05-fiber7_performance/"/>
    <id>https://michael.stapelberg.ch/posts/2014-09-05-fiber7_performance/</id>
    <published>2014-09-05T12:00:00+00:00</published>
    <content type="html"><![CDATA[<p>
Ever since I moved to Zürich, I wanted to get a fiber internet connection. I’ve
lived with a 6 Mbps DSL line at my parent’s place for about 10 years, so I was
looking forward to a lot more Megabits and a lot less latency. For reasons that
I won’t go into in this article, it took me about a year to get a fiber
connection, and in the end I had to go with Swisscom (instead of <a
href="http://www.init7.ch/">init7</a> on top of EWZ).
</p>
<p>
But then <a href="http://www.fiber7.ch/">fiber7</a> launched. They provide a 1
Gbps symmetrical connection (Swisscom provided a 1 Gbps/100 Mbps down/up
connection) for a lot less money than Swisscom, and with native, static IPv6.
</p>
<p>
A couple of people are interested in how fiber7 performs, and after being
connected for about 2 months, I think I can answer this question by now :-).
</p>
<h2>Latency</h2>
<p>
I started running smokeping to see how my internet connection performs back
when I was with Swisscom, because they had some routing issues to certain
networks. This would manifest itself with getting 50 KB/s transfer rates,
which is unacceptable for image boards or any other demanding application.
</p>
<p>
So, here is the smokeping output for google.ch during the time period that
covers both my Swisscom line, the temporary cablecom connection and finally
fiber7:
</p>
<p><img src="/Bilder/fiber_ping_google_ch_annotated.png" width="800" height="424"
alt="smokeping latency to google.ch (annotated)"></p>
<p>
What you can see is that with Swisscom, I had a 6 ms ping time to google.ch.
Interestingly, once I used the MikroTik RB2011 instead of the Swisscom-provided
internet box, the latency improved to 5&nbsp;ms.
</p>
<p>
Afterwards, latency changed twice. For the first change, I’m not sure what
happened. It could be that Swisscom turned up a new, less loaded port to peer
with Google. Or perhaps they configured their systems in a different way, or
exchanged some hardware. The second change is relatively obvious: Swisscom
enabled GGC, the <a href="https://peering.google.com/about/ggc.html">Google
Global Cache</a>. GGC is a caching server provided by Google that is placed
within the ISP’s own network, typically providing much better latencies (due to
being placed very close to the customer) and reducing the traffic between the
ISP and Google. I’m confident that Swisscom uses that because of the reverse
pointer record of the IP address to which google.ch resolves to. So with that,
latency is between 1&nbsp;ms and 3&nbsp;ms.
</p>
<p>
Because switching to Fiber7 involves recabling the physical fiber connection in
the POP, there is a 2-day downtime involved. During that time I used <a
href="http://www.upc-cablecom.ch/en/get-cable/cable-information/basic-digital-offer/">UPC
cablecom’s free offering</a>, which is a 2&nbsp;Mbps cable connection that you can
use for free (as long as you pay for the cable connection itself, and after
paying 50 CHF for the modem itself).
</p>
<p>
As you can see on the graph, the cable connection has a surprisingly good
latency of around 8&nbsp;ms to google.ch — until you start using it. Then it’s
clear that 2 Mbps is not enough and the latency shoots through the roof.
</p>
<p>
The pleasant surprise is that fiber7’s ping time to google.ch is about
0.6&nbsp;ms (!). They achieve such low latency <a
href="https://twitter.com/fiber7_ch/status/508344516622159872">with a dedicated
10 gig interconnect to Google at the Interxion in Glattbrugg</a>.
</p>
<h2>Longer-term performance</h2>
<p><img src="/Bilder/fiber_ping_google_ch_week.png" width="697" height="315"
alt="smokeping latency measurements to google.ch over more than a week"></p>
<p>
Let me say that I’m very happy with the performance of my internet connection.
Some of the measurements where packet loss is registered may be outside of
fiber7’s control, or even caused by me, when recabling my equipment for
example. Overall, the latency is fine and consistent, much more so than with
Swisscom. I have never experienced an internet outage during the two months
I’ve been with fiber7 now.
</p>
<p>
Also, while I am not continuously monitoring my bandwidth, rest assured that
whenever I download something, I am able to utilize the full Gigabit, meaning I
get an aggregate speed of 118 MB/s from servers that support it. Such servers
are for example one-click hosters like uploaded, but also Debian mirrors (as
soon as you download from multiple ones in parallel).
</p>
<h2>Conclusion</h2>
<p>
tl;dr: fiber7 delivers. Incredible latency, no outages (yet), full download speed.
</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Configuring a Ubiquiti EdgeRouter Lite (Erlite-3) for Fiber7]]></title>
    <link href="https://michael.stapelberg.ch/posts/2014-08-11-fiber7_ubnt_erlite/"/>
    <id>https://michael.stapelberg.ch/posts/2014-08-11-fiber7_ubnt_erlite/</id>
    <published>2014-08-11T09:55:00+00:00</published>
    <content type="html"><![CDATA[<p>
I immediately ordered a <a href="http://www.fiber7.ch/">fiber7</a> internet
connection once it became available, and I’ve been connected since a few weeks.
They offer a 1 Gbps symmetrical fiber connection, with native (static) IPv6 and
no traffic limit — for 65 CHF per month (about 54 €).
</p>
<p>
In the order form, they let you choose whether you want to order a
pre-configured MikroTik RB2011UiAS-2HnD including fiber optic and fiber patch
cable. I assumed this would be an excellent choice, so I ordered it.
</p>
<p>
I really like the MikroTik device. Its CLI and web interface are well
thought-out and easy to use once you understand their way of thinking. It’s
small, absolutely silent and just works. However, there’s one shortcoming: it
doesn’t do IPv4 hardware acceleration (they call it “fast path”) when you
enable NAT, which you need for a fiber7 connection. Thus, the top bandwidth
maxes out at 500 to 600 Mbps, so effectively you only use half of your
available bandwidth.
</p>
<p>
Therefore, I looked around for other routers which can do a full Gigabit
WAN-to-LAN, i.e. with IPv4-NAT enabled. The selection of routers that can do
that is very small, see for example <a
href="http://www.smallnetbuilder.com/lanwan/router-charts/view">the
smallnetbuilder WAN-to-LAN router charts</a>.
</p>
<p>
In my first try, I went with the Netgear R7000 (“Nighthawk”) which is the
highest-performing router with regards to WAN-to-LAN bandwidth on
smallnetbuilder. It indeed does hardware acceleration for IPv4-NAT, so you
<strong>can</strong> reach the full 118 MB/s TCP bandwidth that a Gigabit line
offers. However, the firmware does not do DHCPv6-PD (Prefix Delegation), even
though it’s certified as IPv6-ready. There are alternative firmwares, e.g.
Tomato and DD-WRT. Tomato (v121 as of writing) comes with the kernel module
that enables IPv4-NAT hardware acceleration, but has a nasty bug: the latency
jumps up to 500ms for most of your packets, which is clearly not acceptable.
DD-WRT does not come with such a kernel module because they use a newer kernel,
so the speed maxes out at 400 Mbps (that’s what they claim, I didn’t even
bother testing it).
</p>
<h2>Ubiquiti EdgeRouter Lite (Erlite-3)</h2>
<p>
So, as a second try, I ordered what everyone recommended me in the first place:
the <a href="http://www.ubnt.com/edgemax/edgerouter-lite/">Ubiquiti EdgeRouter
Lite (Erlite-3)</a>.
</p>
<p>
The EdgeRouter Lite (tested with firmware v1.5.0 and v1.6.0) offers IPv4 and
IPv6 offloading, and in fact reaches Gigabit line rate (118 MB/s measured TCP
performance). An unwelcome surprise is that hardware acceleration only works
when <strong>not</strong> using bridging at all, so if you want to connect two
devices to your router in the same subnet, like a computer and a switch, you
cannot do that. Effectively, the EdgeRouter needs to sit between the internet
connection and a switch.
</p>
<p>
With regards to the web interface of EdgeOS: the web interface feels very
polished and modern, but it seems to lack a number of features that are only
accessible in the CLI interface. The MikroTik web interface had a much higher
coverage of features. In general, I like how Ubiquiti does many things right,
though: firmware updates are quick and painless, the model selection and
download on their website is very simple to find and use, and you even get a
link to the relevant GPL tarball without asking :).
</p>
<h2>Properly disconnecting your old router</h2>
<p>
First of all, you should disconnect the MikroTik (or your current router) from
the network. I recommend doing that by explicitly disabling both DHCP clients,
so that the fiber7 router knows you are not using the old device any more. This
is important because fiber7 uses a Cisco feature called “IP source guard”,
which will disable any MAC address on your port that does not have a DHCP
lease. Therefore, if you just switch routers, you need to wait for the old
lease to expire before you get a new lease. In my first tests, this worked
relatively well, but then a lease got stuck for some reason and I had to
escalate the problem to their NOC. So, better disable the DHCP:
</p>
<pre>
/ip dhcp-client set disabled=yes numbers=0
/ipv6 dhcp-client set disabled=yes numbers=0
</pre>
<h2>Configuring the EdgeRouter Lite for fiber7</h2>
<p>
In my configuration, I connect a switch to eth0 and a media converter (the
TP-LINK MC220L) to eth1. Pay attention to configure the media converter to
“auto”, not “force”. In both cases you’ll get a link, but with “force”, you
will not get any replies to your packets.
</p>
<p>
A general tip: if you mess up your IP configuration, you can always use the
link-local address of the EdgeRouter and SSH into that. Find the link-local
address using <code>ping6 ff02::1%eth0</code>.
</p>
<p>
After logging into the web interface, set the eth1 address to DHCP and it
should get a public IPv4 address from fiber7. Afterwards, enable NAT by
clicking on NAT → Add Source NAT Rule. Set the outbound interface to eth1 and
select the “masquerade” radio button. You’ll also need to switch to the
“services” tab and enable a DHCP and DNS server. This should give you IPv4
connectivity to the internet.
</p>
<p>
Now on to IPv6. Since EdgeOS version 1.6.0, DHCPv6-PD is an easily usable
feature. Log into the router using <code>ssh ubnt@192.168.1.1</code>, then run
the following commands:
</p>
<pre>
configure
set interfaces ethernet eth1 dhcpv6-pd pd 0 prefix-length /48
set interfaces ethernet eth1 dhcpv6-pd pd 0 interface eth0 service slaac
set interfaces ethernet eth1 dhcpv6-pd pd 0 interface eth0 prefix-id :0
commit
save
exit
reboot
</pre>
<p>
The <code>prefix-length</code> specifies how big the prefix is that the ISP is
giving us; a <code>/48</code> in the case of fiber7. The next lines specify
that we want to use <a href="http://en.wikipedia.org/wiki/SLAAC">SLAAC</a> to
hand out addresses of the delegated prefix on <code>eth0</code>. The
<code>prefix-id</code> is used for the part after the /48, so if you set it to
e.g. <code>ff23</code>, and your prefix is <code>2a02:168:4a09::/48</code>, the
EdgeRouter will announce <code>2a02:168:4a09:ff23::/64</code> on
<code>eth0</code>.
</p>
<p>
For me, the reboot was necessary after changing settings, so try rebooting if
things don’t work as they should.
</p>
<p>
When running <code>ip -6 address show dev eth0</code> you should see that
the router added an IPv6 address like
<code>2a02:168:4a09:0:de9f:dbff:fe81:a905/64</code> to eth0.
</p>
<p>
That’s it! On clients you should be able to <code>ping6 google.ch</code> now
and get replies.
</p>
<h2>Bonus: Configuring a DHCPv6-DUID</h2>
<p>
fiber7 wants to hand out static IPv6 prefixes based on the DHCPv6 option 37,
but that’s not ready yet. Until then, they offer you to set a static prefix
based on your DUID (a device identifier based on the MAC address of your
router). Since I switched from the MikroTik, I needed to port its DUID to the
EdgeRouter to keep my static prefix.
</p>
<p>
Luckily, wide-dhcpv6 reads a file called dhcp6c_duid that you can create with
the proper DUID. The file starts with a 16-bit integer containing the length of
the DUID, followed by the raw DUID:
</p>
<pre>
echo -en '\x00\x0a\x00\x03\x00\x01\x4c\x5e\x0c\x43\xbf\x39' > /var/lib/dhcpv6/dhcp6c_duid
</pre>
<h2>Conclusion</h2>
<p>
I can see why fiber7 went with the MikroTik as their offer for customers: it
combines a media converter (for fiber to ethernet), a router, a switch and a
wifi router. In my configuration, those are now all separate devices: the
TP-LINK MC220L (27 CHF), the Ubiquiti EdgeRouter Lite Erlite-3 (170 CHF) and
the TP-LINK WDR4300 (57 CHF). The ping latency to google.ch has gone up from
0.6ms to 0.7ms due to the additional device, but the download rate is about
twice as high, so I think this is the setup that I’ll keep for a while — until
somebody comes up with an all-in-one device that provides the same features and
achieves the same rates :-).
</p>
<h2>Appendix: IPv6 with EdgeOS &lt; 1.7.0</h2>
<p>
For EdgeOS 1.6.0, you’ll need to add router advertisement settings:
</p>
<pre>
configure
set interfaces ethernet eth1 dhcpv6-pd pd 0 prefix-length /48
set interfaces ethernet eth1 dhcpv6-pd pd 0 interface eth0 service slaac
set interfaces ethernet eth1 dhcpv6-pd pd 0 interface eth0 prefix-id :0
set interfaces ethernet eth0 ipv6 router-advert prefix ::/64
set interfaces ethernet eth0 ipv6 router-advert radvd-options
  "RDNSS 2001:4860:4860::8888 {};"
commit
save
exit
reboot
</pre>
<h2>Appendix: IPv6 with EdgeOS &lt; 1.6.0</h2>
<p>
IPv6 is a bit harder, since EdgeOS in its current version (1.5.0) does not
support DHCPv6-PD via its Web or CLI interface. The necessary software
(wide-dhcpv6) is included, though, so we can configure it manually.
</p>
<p>
For the next steps, you need to know the transfer network IP range, which seems
to be different for every fiber7 POP (location). You can get it by either using
DHCPv6 and looking at the address you get, by checking your MikroTik
configuration (if you have one) or by asking fiber7. In my case, the range is
<code>2a02:168:2000:5::/64</code>, but I’ve heard from others that they have
<code>2a02:168:2000:9::/64</code>.
</p>
<p>
Use <code>ssh ubnt@192.168.1.1</code> to log into the CLI. In order to set the
proper IPv6 address on the transfer network, run <code>ip -6 address show dev
eth1</code> and look for a line that says <code>inet6
fe80::de9f:dbff:fe81:a906/64 scope link</code>. Copy everything after the
<code>::</code> and prefix it with <code>2a02:168:2000:5:</code> (your fiber7
transfer network range), then configure that as static IPv6 address on eth1 and
set the default route (and enable IPv6 offloading):
</p>
<pre>
configure
set system offload ipv6 forwarding enable
set interfaces ethernet eth1 address 2a02:168:2000:5:de9f:dbff:fe81:a906/64
set protocols static route6 ::/0 next-hop 2a02:168:2000:5::1 interface eth1
commit
save
exit
</pre>
<p>
Now you should be able to run <code>ping6 google.ch</code> and get a reply.
We still need to enable DHCPv6 though so that the router gets a prefix and
hands that out to its clients. Run <code>sudo -s</code> to get a root shell and
configure DHCPv6:
</p>
<pre>
cat >/etc/wide-dhcpv6/dhcp6c-script-zkj <<'EOT'
#!/bin/sh
# wide-dhcpv6-client 20080615-12 does not properly close
# file descriptors when starting the script.
# https://bugs.debian.org/757848
exec 4>&- 5>&- 6>&- 7>&-
# To prevent radvd from sending the final router advertisment
# that unconfigures the prefixes.
killall -KILL radvd
/etc/init.d/radvd restart
exit 0
EOT
chmod +x /etc/wide-dhcpv6/dhcp6c-script-zkj
<p>cat &gt;/etc/wide-dhcpv6/dhcp6c.conf &laquo;&lsquo;EOT&rsquo;
interface eth1 {
send ia-pd 0;
request domain-name-servers;
script &ldquo;/etc/wide-dhcpv6/dhcp6c-script-zkj&rdquo;;
};</p>
<p>id-assoc pd 0 {
prefix-interface eth0 {
sla-id 1;
sla-len 0;
};
};
EOT</p>
<p>sed -i &rsquo;s/eth0/eth1/g' /etc/default/wide-dhcpv6-client</p>
<p>cat &gt;/config/scripts/post-config.d/dhcpv6.sh &laquo;&lsquo;EOT&rsquo;
#!/bin/sh
/etc/init.d/wide-dhcpv6-client start
EOT
chmod +x /config/scripts/post-config.d/dhcpv6.sh</p>
<p>/config/scripts/post-config.d/dhcpv6.sh
</pre></p>
<p>
Now, when running <code>ip -6 address show dev eth0</code> you should see that
the router added an IPv6 address like
<code>2a02:168:4a09:0:de9f:dbff:fe81:a905/48</code> to eth0. Let’s enable
router advertisments so that clients get an IPv6 address, route and DNS server:
</p>
<pre>
configure
set interfaces ethernet eth0 ipv6 router-advert prefix ::/64
set interfaces ethernet eth0 ipv6 router-advert radvd-options
  "RDNSS 2001:4860:4860::8888 {};"
commit
save
exit
</pre>
<p>
That’s it! On clients you should be able to <code>ping6 google.ch</code> now and get replies.
</p>
]]></content>
  </entry>
</feed>
