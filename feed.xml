<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Michael Stapelbergs Website</title>
  <link href="https://michael.stapelberg.ch/feed.xml" rel="self"/>
  <link href="https://michael.stapelberg.ch/"/>
  <id>https://michael.stapelberg.ch/</id>
  <generator>Hugo -- gohugo.io</generator>
  <entry>
    <title type="html"><![CDATA[gokrazy: instance-centric configuration released üéâ]]></title>
    <link href="https://michael.stapelberg.ch/posts/2023-01-15-gokrazy-instance-centric-config/"/>
    <id>https://michael.stapelberg.ch/posts/2023-01-15-gokrazy-instance-centric-config/</id>
    <published>2023-01-15T19:38:00+01:00</published>
    <content type="html"><![CDATA[<p><a href="https://gokrazy.org/">gokrazy</a> is an appliance platform for Go programs: with
just a few commands, you can deploy your Go program(s) on a Raspberry Pi or a
(typically small) PC.</p>
<p>I‚Äôm excited to let you know that gokrazy now comes with a re-designed <code>gok</code>
command line tool and gokrazy instance configuration mechanism!</p>
<h2 id="context-gokrazy-in-a-few-words">Context: gokrazy in a few words</h2>
<img src="gokrazy-logo.png" align="right" width="200" style="margin-left: 1.5em" alt="gokrazy logo">
<p>The traditional way to run Go software on a Raspberry Pi would be to install
Raspbian or some other Linux distribution onto the SD card, copy over your
program(s) and then maintain that installation (do regular updates).</p>
<p>I thought it would be nicer to run my Raspberry Pis such that <strong>only Go
software</strong> is run by the Linux kernel on it, without any traditional Linux
distribution programs like package managers or even the usual <a href="https://en.wikipedia.org/wiki/GNU_Core_Utilities">GNU Core
Utilities</a>.</p>
<p>gokrazy builds Go programs into a read-only SquashFS root file system
image. When that image is started on a Raspberry Pi, a minimal init system
supervises the Go programs, and a DHCP and NTP client configure the IP address
and synchronize the time, respectively. After the first installation, all
subsequent updates can be done over the network, with an A/B partitioning
scheme.</p>
<p>I use gokrazy to, for example:</p>
<ul>
<li>
<p><a href="https://github.com/stapelberg/scan2drive">Scan incoming paper mail into PDF files on Google
Drive</a>.</p>
</li>
<li>
<p>Connect to the internet using <a href="https://router7.org/">router7, my small home internet
router</a> written in Go, running on a <a href="/posts/2021-07-10-linux-25gbit-internet-router-pc-build/">fast router PC
build</a> that handles a
<a href="/posts/2022-04-23-fiber7-25gbit-upgrade/">25 Gbit/s Fiber To The Home
connection</a>.</p>
</li>
<li>
<p><a href="/posts/2021-01-10-mqtt-introduction/">Automate the lights in my home</a>, and
<a href="https://github.com/stapelberg/hmgo">control and monitor the heating</a>.</p>
</li>
<li>
<p>Offer <a href="https://gokrazy.org/packages/tailscale/">Tailscale access</a> to a
Raspberry Pi Zero 2 W in my home network to then send Wake On Lan (WOL)
packets before SSH&rsquo;ing into my normally-suspended computers. See also my post
<a href="/posts/2022-08-27-out-of-band-remote-console/">DIY out-of-band management: remote console server
(2022)</a>.</p>
</li>
</ul>
<h2 id="before-and-after">Before and after</h2>
<p>Previously, the concept of gokrazy instance configuration was only a
convention. Each gokrazy build was created using the <code>gokr-packer</code> CLI tool, and
configured by the packer‚Äôs command-line flags, parameters, config files in
<code>~/.config</code> and per-package config files in the current directory
(e.g. <code>flags/github.com/gokrazy/breakglass/flags.txt</code>).</p>
<p>Now, all gokrazy commands and tools understand the <code>--instance</code> flag (or <code>-i</code>
for short), which determines the directory from which the <a href="https://gokrazy.org/userguide/instance-config/">Instance
Config</a> is read. For a gokrazy
instance named ‚Äúhello‚Äù, the default directory is <code>~/gokrazy/hello</code>, which
contains the <code>config.json</code> file.</p>
<h2 id="example-creating-an-instance-for-a-go-working-copy">Example: creating an instance for a Go working copy</h2>
<p>Let‚Äôs say I have <a href="https://github.com/evcc-io/evcc">the evcc repository</a> cloned
as <code>~/src/evcc</code>. evcc is an electric vehicle charge controller with PV
integration, written in Go.</p>
<p>Now I want to run <code>evcc</code> on my Raspberry Pi using gokrazy. First, I create a new
instance:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>% gok -i evcc new
</span></span><span style="display:flex;"><span>gokrazy instance configuration created in /home/michael/gokrazy/evcc/config.json
</span></span><span style="display:flex;"><span><span style="color:#666">(</span>Use <span style="color:#4070a0">&#39;gok -i evcc edit&#39;</span> to edit the configuration interactively.<span style="color:#666">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Use <span style="color:#4070a0">&#39;gok -i evcc add&#39;</span> to add packages to this instance
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>To deploy this gokrazy instance, see <span style="color:#4070a0">&#39;gok help overwrite&#39;</span>
</span></span></code></pre></div><p>Now let‚Äôs add our working copy of <code>evcc</code> to the instance:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>% gok -i evcc add .
</span></span><span style="display:flex;"><span>2023/01/15 18:55:39 Adding the following package to gokrazy instance <span style="color:#4070a0">&#34;evcc&#34;</span>:
</span></span><span style="display:flex;"><span>  Go package  : github.com/evcc-io/evcc
</span></span><span style="display:flex;"><span>  in Go module: github.com/evcc-io/evcc
</span></span><span style="display:flex;"><span>  in <span style="color:#007020">local</span> dir: /tmp/evcc
</span></span><span style="display:flex;"><span>2023/01/15 18:55:39 Creating gokrazy builddir <span style="color:#007020;font-weight:bold">for</span> package github.com/evcc-io/evcc
</span></span><span style="display:flex;"><span>2023/01/15 18:55:39 Creating go.mod with replace directive
</span></span><span style="display:flex;"><span>go: creating new go.mod: module gokrazy/build/github.com/evcc-io/evcc
</span></span><span style="display:flex;"><span>2023/01/15 18:55:39 Adding package to gokrazy config
</span></span><span style="display:flex;"><span>2023/01/15 18:55:39 All <span style="color:#007020;font-weight:bold">done</span>! Next, use <span style="color:#4070a0">&#39;gok overwrite&#39;</span> <span style="color:#666">(</span>first deployment<span style="color:#666">)</span>, <span style="color:#4070a0">&#39;gok update&#39;</span> <span style="color:#666">(</span>following deployments<span style="color:#666">)</span> or <span style="color:#4070a0">&#39;gok run&#39;</span> <span style="color:#666">(</span>run on running instance temporarily<span style="color:#666">)</span>
</span></span></code></pre></div><p>We might want to monitor this Raspberry Pi‚Äôs stats later, so let‚Äôs add the
Prometheus node exporter to our gokrazy instance, too:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>% gok -i evcc add github.com/prometheus/node_exporter
</span></span><span style="display:flex;"><span>2023/01/15 19:04:05 Adding github.com/prometheus/node_exporter as a <span style="color:#666">(</span>non-local<span style="color:#666">)</span> package to gokrazy instance evcc
</span></span><span style="display:flex;"><span>2023/01/15 19:04:05 Creating gokrazy builddir <span style="color:#007020;font-weight:bold">for</span> package github.com/prometheus/node_exporter
</span></span><span style="display:flex;"><span>2023/01/15 19:04:05 Creating go.mod before calling go get
</span></span><span style="display:flex;"><span>go: creating new go.mod: module gokrazy/build/github.com/prometheus/node_exporter
</span></span><span style="display:flex;"><span>2023/01/15 19:04:05 running <span style="color:#666">[</span>go get github.com/prometheus/node_exporter@latest<span style="color:#666">]</span>
</span></span><span style="display:flex;"><span>go: downloading github.com/prometheus/node_exporter v1.5.0
</span></span><span style="display:flex;"><span><span style="color:#666">[</span>‚Ä¶<span style="color:#666">]</span>
</span></span><span style="display:flex;"><span>2023/01/15 19:04:07 Adding package to gokrazy config
</span></span></code></pre></div><p>It‚Äôs time to insert an SD card (<code>/dev/sdx</code>), which we will overwrite with a
gokrazy build:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>% gok -i evcc overwrite --full /dev/sdx
</span></span></code></pre></div><p>See <a href="https://gokrazy.org/quickstart/">gokrazy quickstart</a> for more detailed instructions.</p>
<h2 id="automation">Automation</h2>
<p>The new <code>gok</code> subcommands (<code>add</code>, <code>update</code>, etc.) are much easier to manage than
long <code>gokr-packer</code> command lines.</p>
<p>The new <a href="https://gokrazy.org/userguide/automation/">Automation page</a> shows how
to automate common tasks, be it daily updates via <code>cron</code>, or automated building
in Continuous Integration environments like GitHub Actions.</p>
<h2 id="migration">Migration</h2>
<p>Are you already a gokrazy user? If so, see <a href="https://gokrazy.org/userguide/migration-guide/">the Instance Config Migration
Guide</a> for how to switch from
the old <code>gokr-packer</code> tool to the new <code>gok</code> command.</p>
<h2 id="feedback--questions">Feedback / Questions?</h2>
<p>If you have any questions, please feel free to reach out at <a href="https://github.com/gokrazy/gokrazy/discussions">gokrazy GitHub
Discussions</a> üëã</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[DIY out-of-band management: remote power button]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/"/>
    <id>https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/</id>
    <published>2022-10-09T16:27:00+02:00</published>
    <content type="html"><![CDATA[<p>I was pleasantly surprised by how easy it was to make it possible to push a PC‚Äôs
power button remotely via MQTT by wiring up an ESP32 microcontroller, a MOSFET,
a resistor, and a few jumper wires.</p>
<p>While a commercial solution like IPMI offers many more features like remote
serial, or remote image mounting, this DIY solution feels really magical, and
has great price performance if all you need is power management.</p>















<a href="https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/IMG_1085_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/IMG_1085_featured_huf7f7db33074cb268ff172c7a33b2b9a7_1568716_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/IMG_1085_featured_huf7f7db33074cb268ff172c7a33b2b9a7_1568716_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-10-09-remote-power-button/IMG_1085_featured_huf7f7db33074cb268ff172c7a33b2b9a7_1568716_600x0_resize_q75_box.jpg"
  alt="The inside of a PC case, where an ESP32 micro controller on an Adafruit Perma-Proto bread board is mounted inside the case and wired up to the mainboard with jumper wires for remote power control" title="The inside of a PC case, where an ESP32 micro controller on an Adafruit Perma-Proto bread board is mounted inside the case and wired up to the mainboard with jumper wires for remote power control"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="motivation">Motivation</h2>
<p>To save power, I want to shut down my <a href="/posts/2019-10-23-nas/">network storage PC</a> when it isn‚Äôt currently needed.</p>
<p>For this plan to work out, my daily backup automation needs to be able to turn on the network storage PC, and power it back off when done.</p>
<p>Usually, I implement that via <a href="https://en.wikipedia.org/wiki/Wake-on-LAN">Wake On LAN
(WOL)</a>. But, for this particular
machine, I don‚Äôt have an ethernet network link, I only <a href="/posts/2020-08-09-fiber-link-home-network/">have a fiber
link</a>. Unfortunately, it seems like
none of the 3 different 10 Gbit/s network cards I tested has functioning Wake On
LAN, and when I asked on Twitter, none of my followers had ever seen functioning
WOL on any 10 Gbit/s card. I suppose it‚Äôs not a priority for the typical target
audience of these network cards, which go into always-on servers.</p>
<p>I didn‚Äôt want to run an extra 10 Gbit/s switch just for WOL over an ethernet
connection, because switches like the MikroTik CRS305-1G-4S+IN consume at least
10W. As the network storage PC only consumes about 20W overall, I wanted a more
power-efficient option.</p>
<h2 id="hardware-and-wiring">Hardware and Wiring</h2>
<p>The core of this DIY remote power button is a WiFi-enabled micro controller such
as the ESP32. To power the micro controller, I use the 5V standby power on the
mainboard‚Äôs USB 2.0 pin headers, which is also available when the PC is turned
off and only the power supply (PSU) is turned on. A micro controller with an
on-board 5V voltage regulator is convenient for this.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">I verified the 5V standby power with a multimeter in DC power measurement
mode. Some embedded machines don‚Äôt have always-on 5V standby power, even if they
use an ATX power supply!</div>
  </div>
</aside>

<p>Aside from the micro controller, we also need a transistor or logic-level MOSFET
to simulate a push of the power button, and a resistor to control the
transistor. An opto coupler is not needed, since the ESP32 is powered from the
mainboard, not from a separate power supply.</p>
<p>The mainboard‚Äôs front panel header contains a <code>POWERBTN#</code> signal (3.3V), and a
<code>GND</code> signal. When connecting a typical PC case power button to the header, you
don‚Äôt need to pay attention to the polarity. This is because the power button
just physically connects the two signals.</p>
<p>In our case, the polarity matters, because we need the 3.3V on the transistor‚Äôs
drain pin, otherwise we won‚Äôt be able to control the transistor via its base
pin. The <code>POWERBTN#</code> 3.3V signal is typically labeled <code>+</code> on the mainboard (or
in the manual), whereas <code>GND</code> is labeled <code>-</code>. If you are unsure, double-check
the voltage using a multimeter.</p>
<h2 id="bill-of-materials">Bill of Materials</h2>
<ul>
<li>WiFi-enabled microcontroller with 5V power input, e.g. the <a href="https://docs.platformio.org/en/latest/boards/espressif32/pico32.html#board-espressif32-pico32">Espressif ESP32
Pico
Kit</a></li>
<li>transistor or logic-level MOSFET for working with 3.3V, e.g. <a href="https://www.digikey.com/en/products/detail/onsemi/2N7000/244278">2N7000
(‚Üídigikey)</a></li>
<li>1K resistor for controlling the transistor,
e.g. <a href="https://www.digikey.com/en/products/detail/stackpole-electronics-inc/CF14JT1K00/1741314">CF14JT1K00</a></li>
<li>a bread board and/or case for mounting, e.g. <a href="https://www.adafruit.com/product/571">Adafruit
Perma-Proto</a>.</li>
</ul>
<h2 id="schematic">Schematic</h2>
<p><a href="2022-10-08-remote-power-button.svg"><img src="2022-10-08-remote-power-button.svg" width="100%"></a></p>
<h2 id="software-esphome">Software: ESPHome</h2>
<p>I wanted a quick solution (with ideally no custom firmware development) and was
already familiar with <a href="https://esphome.io/">ESPHome</a>, which turns out to very
easily implement the functionality I wanted :)</p>
<p>In addition to a standard ESPHome configuration, I have added the following
lines to make the GPIO pin available through MQTT, and make it a momentary
switch instead of a toggle switch, so that it briefly presses the power button
and doesn‚Äôt hold the power button:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#062873;font-weight:bold">switch</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span>- <span style="color:#062873;font-weight:bold">platform</span>:<span style="color:#bbb"> </span>gpio<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">pin</span>:<span style="color:#bbb"> </span><span style="color:#40a070">25</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">id</span>:<span style="color:#bbb"> </span>powerbtn<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">name</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;powerbtn&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">restore_mode</span>:<span style="color:#bbb"> </span>ALWAYS_OFF<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">on_turn_on</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span>- <span style="color:#062873;font-weight:bold">delay</span>:<span style="color:#bbb"> </span>500ms<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span>- <span style="color:#062873;font-weight:bold">switch.turn_off</span>:<span style="color:#bbb"> </span>powerbtn<span style="color:#bbb">
</span></span></span></code></pre></div><p>I have elided the full configuration for brevity, but you can click here to see it:</p>
<details>
<summary>full ESPHome YAML configuration</summary>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#062873;font-weight:bold">esphome</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">name</span>:<span style="color:#bbb"> </span>poweresp<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">esp32</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">board</span>:<span style="color:#bbb"> </span>pico32<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">framework</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">type</span>:<span style="color:#bbb"> </span>arduino<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#60a0b0;font-style:italic"># Enable logging</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">logger</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">mqtt</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">broker</span>:<span style="color:#bbb"> </span><span style="color:#40a070">10.0.0.54</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">ota</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">password</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">wifi</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">ssid</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;essid&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">password</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;secret&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#60a0b0;font-style:italic"># Enable fallback hotspot (captive portal) in case wifi connection fails</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">ap</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">ssid</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;Poweresp Fallback Hotspot&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">password</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;secret2&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">captive_portal</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">switch</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span>- <span style="color:#062873;font-weight:bold">platform</span>:<span style="color:#bbb"> </span>gpio<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">pin</span>:<span style="color:#bbb"> </span><span style="color:#40a070">25</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">id</span>:<span style="color:#bbb"> </span>powerbtn<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">name</span>:<span style="color:#bbb"> </span><span style="color:#4070a0">&#34;powerbtn&#34;</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">restore_mode</span>:<span style="color:#bbb"> </span>ALWAYS_OFF<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">on_turn_on</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span>- <span style="color:#062873;font-weight:bold">delay</span>:<span style="color:#bbb"> </span>500ms<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span>- <span style="color:#062873;font-weight:bold">switch.turn_off</span>:<span style="color:#bbb"> </span>powerbtn<span style="color:#bbb">
</span></span></span></code></pre></div></details>
<p>For the first flash, I used:</p>
<pre tabindex="0"><code>docker run --rm \
  -v &#34;${PWD}&#34;:/config \
  --device=/dev/ttyUSB0 \
  -it \
  esphome/esphome \
    run poweresp.yaml
</code></pre><p>To update over the network after making changes (serial connection no longer needed), I used:</p>
<pre tabindex="0"><code>docker run --rm \
  -v &#34;${PWD}&#34;:/config \
  -it \
  esphome/esphome \
    run poweresp.yaml
</code></pre><p>In case you want to learn more about the relevant ESPHome concepts, here are a
few pointers:</p>
<ul>
<li><a href="https://esphome.io/components/wifi.html">https://esphome.io/components/wifi.html</a> might need to set <code>use_address</code></li>
<li><a href="https://esphome.io/components/switch/index.html">https://esphome.io/components/switch/index.html</a>
<ul>
<li>and <a href="https://esphome.io/components/switch/gpio.html">https://esphome.io/components/switch/gpio.html</a></li>
</ul>
</li>
<li><a href="https://esphome.io/components/mqtt.html">https://esphome.io/components/mqtt.html</a></li>
</ul>
<h2 id="integration-into-automation">Integration into automation</h2>
<p>To push the power button remotely from Go, I‚Äôm using the following code:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">pushMainboardPower</span>(mqttBroker, clientID <span style="color:#902000">string</span>) <span style="color:#902000">error</span> {
</span></span><span style="display:flex;"><span>	opts <span style="color:#666">:=</span> mqtt.<span style="color:#06287e">NewClientOptions</span>().<span style="color:#06287e">AddBroker</span>(mqttBroker)
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> hostname, err <span style="color:#666">:=</span> os.<span style="color:#06287e">Hostname</span>(); err <span style="color:#666">==</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		clientID <span style="color:#666">+=</span> <span style="color:#4070a0">&#34;@&#34;</span> <span style="color:#666">+</span> hostname
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	opts.<span style="color:#06287e">SetClientID</span>(clientID)
</span></span><span style="display:flex;"><span>	opts.<span style="color:#06287e">SetConnectRetry</span>(<span style="color:#007020;font-weight:bold">true</span>)
</span></span><span style="display:flex;"><span>	mqttClient <span style="color:#666">:=</span> mqtt.<span style="color:#06287e">NewClient</span>(opts)
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> token <span style="color:#666">:=</span> mqttClient.<span style="color:#06287e">Connect</span>(); token.<span style="color:#06287e">Wait</span>() <span style="color:#666">&amp;&amp;</span> token.<span style="color:#06287e">Error</span>() <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">return</span> fmt.<span style="color:#06287e">Errorf</span>(<span style="color:#4070a0">&#34;connecting to MQTT: %v&#34;</span>, token.<span style="color:#06287e">Error</span>())
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">const</span> topic = <span style="color:#4070a0">&#34;poweresp/switch/powerbtn/command&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">const</span> qos = <span style="color:#40a070">0</span> <span style="color:#60a0b0;font-style:italic">// at most once (no re-transmissions)
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>	<span style="color:#007020;font-weight:bold">const</span> retained = <span style="color:#007020;font-weight:bold">false</span>
</span></span><span style="display:flex;"><span>	token <span style="color:#666">:=</span> mqttClient.<span style="color:#06287e">Publish</span>(topic, qos, retained, <span style="color:#007020">string</span>(<span style="color:#4070a0">&#34;on&#34;</span>))
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> token.<span style="color:#06287e">Wait</span>() <span style="color:#666">&amp;&amp;</span> token.<span style="color:#06287e">Error</span>() <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">return</span> fmt.<span style="color:#06287e">Errorf</span>(<span style="color:#4070a0">&#34;publishing to MQTT: %v&#34;</span>, token.<span style="color:#06287e">Error</span>())
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020;font-weight:bold">nil</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="conclusion">Conclusion</h2>
<p>I hope this small project write-up is useful to others in a similar situation!</p>
<p>If you need more features than that, check out the next step on the feature and
complexity ladder: <a href="https://pikvm.org/">PiKVM</a> or
<a href="https://tinypilotkvm.com/">TinyPilot</a>. See also <a href="https://www.jeffgeerling.com/blog/2021/raspberry-pi-kvms-compared-tinypilot-and-pi-kvm-v3">this comparison by Jeff
Geerling</a>.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[DIY out-of-band management: remote console server]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/"/>
    <id>https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/</id>
    <published>2022-08-27T14:40:00+02:00</published>
    <content type="html"><![CDATA[<p>For the guest WiFi at an event that eventually fell through, we wanted to tunnel
all the traffic through my internet connection via my home router.</p>
<p>Because the event is located in another country, many hours of travel away,
there are a couple of scenarios where remote control of my home router can be a
life-saver. For example, should my home router crash, remotely turning power off
and on again gets the event back online.</p>
<p>But, power-cycling a machine is a pretty big hammer. For some cases, like
locking yourself out with a configuration mistake, a more precise tool like a
remote serial console might be nicer.</p>
<p>In this article, I‚Äôll present two cheap and pragmatic DIY out-of-band management
solutions that I have experimented with in the last couple of weeks and wanted
to share:</p>
<ul>
<li><a href="#power-only">Variant 1: Remote Power Management only</a></li>
<li><a href="#remote-console">Variant 2: a full Remote Console Server</a></li>
</ul>
<p>You can easily start with the first variant and upgrade it into the second
variant later.</p>
<h2 id="power-only">Variant 1: Remote Power Management</h2>
<h3 id="architecture-diagram">Architecture Diagram</h3>
<p>Here is the architecture of the system at a glance. The right-hand side is the
existing router I want to control, the left-hand side shows the out of band
management system:</p>




<a href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/2022-07-02-power-mgmt-architecture.svg"><img
  src="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/2022-07-02-power-mgmt-architecture.svg"
  
  style="border: 1px solid #000; margin-right: 1rem"
  
  loading="lazy"></a>


<p>Let‚Äôs go through the hardware components from top to bottom.</p>
<h3 id="hardware-4g-wifi-router-out-of-band-network">Hardware: 4G WiFi Router (Out Of Band Network)</h3>
<p>The easiest way to have another network connection for projects like this one is
the <a href="https://www.digitec.ch/en/s1/product/digitec-iot-test-sim-card-data-flat-30-days-unlimited-10-mbits-sim-card-11689214?supplier=406802">digitec iot
subscription</a>. They
offer various different options, and their cheapest one, a 0.4 Mbps flatrate for
4 CHF per month, is sufficient for our use-case.</p>
<p>A convenient way of making the digitec iot subscription available to other
devices is to use a mobile WiFi router such as the <a href="https://www.digitec.ch/en/s1/product/tp-link-m7350-routers-5615329?supplier=406802">TP-Link M7350 4G/LTE Mobile
Wi-Fi
router</a>
(68 CHF). You can power it via USB, and it has a built-in battery that will last
for a few hours.</p>















<a href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0484.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0484_hu855bbe0a9c47ac557e5b09db74fa3b06_1361683_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0484_hu855bbe0a9c47ac557e5b09db74fa3b06_1361683_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0484_hu855bbe0a9c47ac557e5b09db74fa3b06_1361683_600x0_resize_q75_box.jpg"
  alt="TP-Link M7350 4G/LTE Mobile Wi-Fi router connected to digitec iot" title="TP-Link M7350 4G/LTE Mobile Wi-Fi router connected to digitec iot"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>By default, the device turns itself off after a while when it thinks it is
unused, which is undesired for us ‚Äî if the smart plug drops out of the WiFi, we
don‚Äôt want the whole system to go offline. You can turn off this behavior in the
web interface under <code>Advanced ‚Üí Power Saving ‚Üí Power Saving Mode</code>.</p>
<h3 id="hardware-wifi-smart-plug">Hardware: WiFi Smart Plug</h3>
<p>With the out of band network connection established, all you need to remotely
toggle power is a smart plug such as the <a href="https://itead.cc/product/sonoff-s26-wifi-smart-plug/">Sonoff S26 WiFi Smart
Plug</a>.</p>
<p>The simplest setup is to connect the Smart Plug to the 4G router via WiFi, and
control it using Sonoff‚Äôs mobile app via Sonoff‚Äôs cloud.</p>
<h4 id="non-cloud-solution">Non-cloud solution</h4>
<p>Alternatively, if you want to avoid the Sonoff cloud, the device comes with a
‚ÄúDIY mode‚Äù, but <a href="https://twitter.com/zekjur/status/1321949087160258562">the DIY mode wouldn‚Äôt work reliably for
me</a> when I tried
it. Instead, I flashed the <a href="https://tasmota.github.io/docs/">Open Source Tasmota
firmware</a> and connected it to a self-hosted
MQTT server via the internet.</p>
<p>Of course, now your self-hosted MQTT server is a single point of failure, but
perhaps you prefer that over the Sonoff cloud being a single point of failure.</p>
<h2 id="remote-console">Variant 2: Remote Console Server</h2>
<p>Turning power off and on remotely is a great start, but what if you need actual
remote access to a system? In my case, I‚Äôm using a <a href="https://en.wikipedia.org/wiki/Serial_port">serial
port</a> to see log messages and run a
shell on my router. This is also called a ‚Äúserial console‚Äù, and any device that
allows accessing a serial console without sitting physically in front of the
serial port is called a ‚Äúremote console server‚Äù.</p>
<p>Commercially available remote console servers typically offer lots of ports (up
to 48) and cost lots of money (many thousand dollars or equivalent), because
their target application is to be installed in a rack full of machines in a lab
or data center. A few years ago, I built
<a href="https://freetserv.github.io/">freetserv</a>, an open source, open hardware
solution for this problem.</p>
<p>For the use-case at hand, we only need a single serial console, so we‚Äôll do it
with a Raspberry Pi.</p>
<h3 id="architecture-diagram-1">Architecture Diagram</h3>
<p>The architecture for this variant looks similar to the other variant, but adds
the <em>consrv</em> Raspberry Pi Zero 2 W and a USB-to-serial adapter:</p>




<a href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/2022-06-19-consrv_architecture.svg"><img
  src="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/2022-06-19-consrv_architecture.svg"
  
  style="border: 1px solid #000; margin-right: 1rem"
  
  loading="lazy"></a>


<h3 id="hardware-raspberry-pi-zero-2-w">Hardware: Raspberry Pi Zero 2 W</h3>
<p>We‚Äôll use a <a href="https://www.raspberrypi.com/products/raspberry-pi-zero-2-w/">Raspberry Pi Zero 2
W</a> as our console
server. While the device is a little slower than a Raspberry Pi 3 B, it is still
plenty fast enough for providing a serial console, and it only consumes 0.8W of
power (see <a href="https://gokrazy.org/platforms/">gokrazy ‚Üí Supported platforms</a> for
a comparison):</p>















<a href="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0767_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0767_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_860347_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0767_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_860347_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-08-27-out-of-band-remote-console/IMG_0767_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_860347_600x0_resize_q75_box.jpg"
  alt="Raspberry Pi Zero 2 W with USB hub, ethernet and serial" title="Raspberry Pi Zero 2 W with USB hub, ethernet and serial"
  width="600"
  height="600"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>If the Pi Zero 2 W is not available, you can try using any other <a href="https://gokrazy.org/platforms/">Raspberry Pi
supported by gokrazy</a>, or even an older Pi Zero
with the <a href="https://gokrazy.org/platforms/#community-supported-raspberry-pi-os-32-bit-kernelfirmware">community-supported Pi OS 32-bit
kernel</a>
(I didn‚Äôt test that).</p>
<p>Our Pi will have at least two tasks:</p>
<ol>
<li>With a USB-to-serial adapter, the Pi will provide a serial console.</li>
<li>The Pi will run <a href="https://tailscale.com/">Tailscale</a> mesh networking, which
will transparently use either the wired network or fail over to the Out Of
Band network. Tailscale also frees us from setting up port forwardings,
dynamic DNS or anything like that.</li>
<li>Optionally, the Pi can run a local MQTT server if you want to avoid the
Sonoff cloud.</li>
</ol>
<h3 id="hardware-usb-to-serial-adapter">Hardware: USB-to-serial adapter</h3>
<p>You can use any USB-to-serial adapter supported by Linux. Personally, I like the
<a href="https://www.adafruit.com/product/2264">Adafruit FT232H adapter</a>, which I like
to <a href="https://twitter.com/zekjur/status/1256879027266224128">re-program with FTDI‚Äôs FT_Prog so that it has a unique serial
number</a>.</p>
<p>In my router, I plugged in an <a href="https://twitter.com/zekjur/status/1443461234930634755">Longshine LCS-6321M serial PCIe
card</a> to add a serial
port. Before you ask: no, <a href="https://twitter.com/zekjur/status/1439612800561819649">using USB serial consoles for the kernel
console</a> does not cut it.</p>
<h3 id="hardware-usb-ethernet-adapter">Hardware: USB ethernet adapter</h3>
<p>Because we not only want this Raspberry Pi to be available via the Out Of Band
network (via WiFi), but also on the regular home network, we need a USB ethernet
adapter.</p>
<p>Originally I was going to use the Waveshare ETH-USB-HUB-BOX: Ethernet / USB HUB
BOX for Raspberry Pi Zero Series, but it <a href="https://twitter.com/zekjur/status/1538582804224782337">turned out to be
unreliable</a>.</p>
<p>Instead, I‚Äôm now connecting a USB hub (as the Pi Zero 2 W has only one USB
port), a <a href="https://www.linksys.com/support-product?sku=USB3GIG">Linksys USB3GIG</a>
network adapter I had lying around, and my USB-to-serial adapter.</p>
<h3 id="gokrazy-setup">gokrazy setup</h3>
<p>Just like in the <a href="https://gokrazy.org/quickstart/">gokrazy quickstart</a>, we‚Äôre
going to create a directory for this gokrazy instance:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#bb60d5">INSTANCE</span><span style="color:#666">=</span>gokrazy/consrv
</span></span><span style="display:flex;"><span>mkdir -p ~/<span style="color:#70a0d0">${</span><span style="color:#bb60d5">INSTANCE</span>?<span style="color:#70a0d0">}</span>
</span></span><span style="display:flex;"><span><span style="color:#007020">cd</span> ~/<span style="color:#70a0d0">${</span><span style="color:#bb60d5">INSTANCE</span>?<span style="color:#70a0d0">}</span>
</span></span><span style="display:flex;"><span>go mod init consrv
</span></span></code></pre></div><p>You could now directly run <code>gokr-packer</code>, but personally, I like putting the
<code>gokr-packer</code> command into a
<a href="https://en.wikipedia.org/wiki/Make_(software)#Makefile"><code>Makefile</code></a> right away:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-makefile" data-lang="makefile"><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># The consrv hostname resolves to the device‚Äôs Tailscale IP address,
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># once Tailscale is set up.
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span><span style="color:#bb60d5">PACKER</span> <span style="color:#666">:=</span> gokr-packer -hostname<span style="color:#666">=</span>consrv
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#bb60d5">PKGS</span> <span style="color:#666">:=</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/breakglass <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/timestamps <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/serial-busybox <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/stat/cmd/gokr-webstat <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/stat/cmd/gokr-stat <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/mkfs <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/gokrazy/wifi <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	tailscale.com/cmd/tailscaled <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	tailscale.com/cmd/tailscale <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>	github.com/mdlayher/consrv/cmd/consrv
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#06287e">all</span><span style="color:#666">:</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#06287e">.PHONY</span><span style="color:#666">:</span> update overwrite
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#06287e">update</span><span style="color:#666">:</span>
</span></span><span style="display:flex;"><span>	<span style="color:#70a0d0">${</span><span style="color:#bb60d5">PACKER</span><span style="color:#70a0d0">}</span> -update<span style="color:#666">=</span>yes <span style="color:#70a0d0">${</span><span style="color:#bb60d5">PKGS</span><span style="color:#70a0d0">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#06287e">overwrite</span><span style="color:#666">:</span>
</span></span><span style="display:flex;"><span>	<span style="color:#70a0d0">${</span><span style="color:#bb60d5">PACKER</span><span style="color:#70a0d0">}</span> -overwrite<span style="color:#666">=</span>/dev/sdx <span style="color:#70a0d0">${</span><span style="color:#bb60d5">PKGS</span><span style="color:#70a0d0">}</span>
</span></span></code></pre></div><p>For the initial install, plug the SD card into your computer, put its device
name into the <code>overwrite</code> target, and run <code>make overwrite</code>.</p>
<p>For subsequent changes, you can use <code>make update</code>.</p>
<h3 id="tailscale">Tailscale</h3>
<p>Tailscale is a peer-to-peer mesh VPN, meaning we can use it to connect to our
<code>consrv</code> Raspberry Pi from anywhere in the world, without having to set up port
forwardings, dynamic DNS, or similar.</p>
<p>As an added bonus, Tailscale also transparently fails over between connections,
so while the fast ethernet/fiber connection works, Tailscale uses that,
otherwise it uses the Out Of Band network.</p>
<p>Follow <a href="https://gokrazy.org/packages/tailscale/">the gokrazy guide on Tailscale</a>
to include the device in your Tailscale mesh VPN.</p>
<h3 id="wifi-internet-connection-and-dual-homing">WiFi internet connection and dual homing</h3>
<p>Setup WiFi:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>mkdir -p extrafiles/github.com/gokrazy/wifi/etc
</span></span><span style="display:flex;"><span>cat <span style="color:#4070a0">&#39;{&#34;ssid&#34;: &#34;oob&#34;, &#34;psk&#34;: &#34;secret&#34;}&#39;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  &gt; extrafiles/github.com/gokrazy/wifi/etc/wifi.json
</span></span></code></pre></div><p><code>consrv</code> should use the Out Of Band mobile uplink to reach the internet. At the
same time, it should still be usable from my home network, too, to make gokrazy
updates go quickly.</p>
<p>We accomplish this using route priorities.</p>
<p>I arranged for the WiFi interface to have higher route priority (5) than the
ethernet interface (typically 1, but 11 in our setup thanks to the
<code>-extra_route_priority=10</code> flag):</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>mkdir -p flags/github.com/gokrazy/gokrazy/cmd/dhcp
</span></span><span style="display:flex;"><span><span style="color:#007020">echo</span> <span style="color:#4070a0">&#39;-extra_route_priority=10&#39;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  &gt; flags/github.com/gokrazy/gokrazy/cmd/dhcp/flags.txt
</span></span><span style="display:flex;"><span>make update
</span></span></code></pre></div><p>Now, <code>tailscale netcheck</code> shows an IPv4 address belonging to Sunrise, the mobile
network provider behind the digitec iot subscription.</p>
<h3 id="the-consrv-console-server">The consrv Console Server</h3>
<p><a href="https://github.com/mdlayher/consrv"><code>consrv</code></a> is an SSH serial console server
written in Go that Matt Layher and I developed. If you‚Äôre curious, you can watch
the two of us creating it in this twitch stream recording:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/1g46ei9aBH0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>The installation of <code>consrv</code> consists of two steps.</p>
<p>Step 1 is done: we already included <code>consrv</code> in the <code>Makefile</code> earlier in
<a href="#gokrazy-setup">gokrazy setup</a>.</p>
<p>So, we only need to configure the desired serial ports in <code>consrv.toml</code> (in
<a href="https://gokrazy.org/userguide/package-config/#extrafiles">gokrazy extrafiles</a>):</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>mkdir -p extrafiles/github.com/mdlayher/consrv/cmd/consrv/etc/consrv
</span></span><span style="display:flex;"><span>cat &gt; extrafiles/github.com/mdlayher/consrv/cmd/consrv/etc/consrv/consrv.toml <span style="color:#4070a0">&lt;&lt;&#39;EOT&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">[server]
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">address = &#34;:2222&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">[[devices]]
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">serial = &#34;01716A92&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">name = &#34;router7&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">baud = 115200
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">logtostdout = true
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">[[identities]]
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">name = &#34;michael&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">public_key = &#34;ssh-ed25519 AAAAC3‚Ä¶ michael@midna&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0">EOT</span>
</span></span></code></pre></div><p>Run <code>make update</code> to deploy the configuration to your device.</p>
<p>If everything is set up correctly, we can now start a serial console session via
SSH:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>midna% ssh -p 2222 router7@consrv.lan
</span></span><span style="display:flex;"><span>Warning: Permanently added &#39;[consrv.lan]:2222&#39; (ED25519) to the list of known hosts.
</span></span><span style="display:flex;"><span>consrv&gt; opened serial connection &#34;router7&#34;: path: &#34;/dev/ttyUSB0&#34;, serial: &#34;01716A92&#34;, baud: 115200
</span></span><span style="display:flex;"><span>2022/06/19 20:50:47 dns.go:175: probe results: [{upstream: [2001:4860:4860::8888]:53, rtt: 999.665¬µs} {upstream: [2001:4860:4860::8844]:53, rtt: 2.041079ms} {upstream: 8.8.8.8:53, rtt: 2.073279ms} {upstream: 8.8.4.4:53, rtt: 16.200959ms}]
</span></span><span style="display:flex;"><span>[‚Ä¶]
</span></span></code></pre></div><p>I‚Äôm using the <code>logtostdout</code> option to make <code>consrv</code> continuously read the serial
port and send it to <code>stdout</code>, which gokrazy in turn <a href="https://gokrazy.org/userguide/remotesyslog/">sends via remote
syslog</a> to the <a href="https://github.com/gokrazy/syslogd">gokrazy syslog
daemon</a>, running on another machine. You
could also run it on the same machine if you want to log to file.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">There is an <a href="https://github.com/mdlayher/consrv/issues/3">open issue in
<code>consrv</code></a> regarding the failure
mode when a serial adapter disappears. Currently, <code>consrv</code> hangs until you try
to send something, then must be restarted. A workaround is available in the
GitHub issue.</div>
  </div>
</aside>

<h3 id="controlling-tasmota-from-breakglass">Controlling Tasmota from breakglass</h3>
<p>You can use <a href="https://github.com/gokrazy/breakglass"><code>breakglass</code></a> to
interactively log into your gokrazy installation.</p>
<p>If you flashed your Smart Plug with Tasmota, you can easily turn power on from a
breakglass shell by directly calling Tasmota‚Äôs HTTP API with <code>curl</code>:</p>
<pre tabindex="0"><code>% breakglass consrv
consrv# curl -v -X POST --data &#39;cmnd=power on&#39; http://tasmota_68462f-1583/cm
</code></pre><p>The original Sonoff firmware offers a DIY mode which should also offer an HTTP
API, but the <a href="https://twitter.com/zekjur/status/1321949087160258562">DIY mode did not work in my
tests</a>. Hence, I‚Äôm only
describing how to do it with Tasmota.</p>
<h3 id="optional-local-mqtt-server">Optional: Local MQTT Server</h3>
<p>Personally, I like having the Smart Plug available both on the local network
(via Tasmota‚Äôs HTTP API) and via the internet with an external MQTT server. That
way, even if either option fails, I still have a way to toggle power remotely.</p>
<p>But, maybe you want to obtain usage stats by listening to MQTT or similar, and
you don‚Äôt want to use an extra server for this. In that situation, you can
easily run a local MQTT server on your Pi.</p>
<p>In the gokrazy <code>Makefile</code>, add
<a href="https://github.com/fhmq/hmq"><code>github.com/fhmq/hmq</code></a> to the list of packages to
install, and configure Tasmota to connect to <code>consrv</code> on port 1883.</p>
<p>To check that everything is working, use <code>mosquitto_sub</code> from another machine:</p>
<pre tabindex="0"><code>midna% mosquitto_sub --verbose -h consrv.monkey-turtle.ts.net -t &#39;#&#39;
</code></pre><h2 id="conclusion">Conclusion</h2>
<p>digitec‚Äôs IOT mobile internet subscription makes remote power management
delightfully easy with a smart plug and 4G WiFi router, and affordable
enough. The subscription is flexible enough that you can decide to only book it
while you‚Äôre traveling.</p>
<p>We can elevate the whole setup in functionality (but also complexity) by
combining Tailscale, consrv and gokrazy, running on a Raspberry Pi Zero 2 W, and
connecting a USB-to-serial adapter.</p>
<p>If you need more features than that, check out the next step on the feature and
complexity ladder: <a href="https://pikvm.org/">PiKVM</a> or
<a href="https://tinypilotkvm.com/">TinyPilot</a>. See also <a href="https://www.jeffgeerling.com/blog/2021/raspberry-pi-kvms-compared-tinypilot-and-pi-kvm-v3">this comparison by Jeff
Geerling</a>.</p>
<h2 id="appendix-a-unstable-apple-usb-ethernet-adapter">Appendix A: Unstable Apple USB ethernet adapter</h2>
<p>The first USB ethernet adapter I tried was the <a href="https://www.artcomputer.ch/b2c_en/apple-usb-ethernet-adapter-a00004961/">Apple USB Ethernet
Adapter</a>.</p>
<p>Unfortunately, after a few days of uptime, I experienced the following kernel
driver crash (with the <code>asix</code> Linux driver), and the link remained down until I
rebooted.</p>
<p>I then switched to a <a href="https://www.linksys.com/support-product?sku=USB3GIG">Linksys
USB3GIG</a> network adapter
(supported by the <code>r8152</code> Linux driver) and did not see any problems with that
so far.</p>
<details>
<summary>kernel crash message (in dmesg)</summary>
<pre tabindex="0"><code>dwc2 3f980000.usb: dwc2_hc_chhltd_intr_dma: Channel 5 - ChHltd set, but reason is unknown
dwc2 3f980000.usb: hcint 0x00000002, intsts 0x04600009
dwc2 3f980000.usb: dwc2_update_urb_state_abn(): trimming xfer length
asix 1-1.4:1.0 eth0: Failed to read reg index 0x0000: -71
------------[ cut here ]------------
WARNING: CPU: 1 PID: 7588 at drivers/net/phy/phy.c:942 phy_error+0x10/0x58
Modules linked in: brcmfmac brcmutil
CPU: 1 PID: 7588 Comm: kworker/u8:2 Not tainted 5.18.3 #1
Hardware name: Raspberry Pi Zero 2 W Rev 1.0 (DT)
Workqueue: events_power_efficient phy_state_machine
pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
pc : phy_error+0x10/0x58
lr : phy_state_machine+0x258/0x2b0
sp : ffff800009fe3d40
x29: ffff800009fe3d40 x28: 0000000000000000 x27: ffff6c7ac300c078
x26: ffff6c7ac300c000 x25: ffff6c7ac4390000 x24: 00000000ffffffb9
x23: 0000000000000004 x22: ffff6c7ac4019cd8 x21: ffff6c7ac4019800
x20: ffffce5c97f6f000 x19: ffff6c7ac4019800 x18: 0000000000000010
x17: 0000000400000000 x16: 0000000000000000 x15: 0000000000001007
x14: ffff800009fe3810 x13: 00000000ffffffea x12: 00000000fffff007
x11: fffffffffffe0290 x10: fffffffffffe0240 x9 : ffffce5c988e1018
x8 : c0000000fffff007 x7 : 00000000000000a8 x6 : ffffce5c98889280
x5 : 0000000000000268 x4 : ffff6c7acf392b80 x3 : ffff6c7ac4019cd8
x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff6c7ac4019800
Call trace:
 phy_error+0x10/0x58
 phy_state_machine+0x258/0x2b0
 process_one_work+0x1e4/0x348
 worker_thread+0x48/0x418
 kthread+0xf4/0x110
 ret_from_fork+0x10/0x20
---[ end trace 0000000000000000 ]---
asix 1-1.4:1.0 eth0: Link is Down
</code></pre></details>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[rsync, article 3: How does rsync work?]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-07-02-rsync-how-does-it-work/"/>
    <id>https://michael.stapelberg.ch/posts/2022-07-02-rsync-how-does-it-work/</id>
    <published>2022-07-02T14:30:10+02:00</published>
    <content type="html"><![CDATA[<p>This post is the third article in a series of blog posts about rsync, <a href="../2022-06-18-rsync-overview/">see the
Series Overview</a>.</p>
<p>With rsync up and running, it‚Äôs time to take a peek under the hood of rsync to
better understand how it works.</p>
<h2 id="howdoesrsyncwork">How does rsync work?</h2>
<p>When talking about the rsync protocol, we need to distinguish between:</p>
<ul>
<li>protocol-level roles: ‚Äúsender‚Äù and ‚Äúreceiver‚Äù</li>
<li>TCP roles: ‚Äúclient‚Äù and ‚Äúserver‚Äù</li>
</ul>
<p>All roles can be mixed and matched: both rsync clients (or servers!) can
either send or receive.</p>
<p>Now that you know the terminology, let‚Äôs take a high-level look at the rsync
protocol. We‚Äôll look at protocol version 27, which is older but simpler, and
which is the most widely supported protocol version, implemented by <code>openrsync</code>
and other third-party implementations:</p>
<p><img src="2022-05-29-rsync-logical-view.svg" alt="rsync architecture"></p>
<p>The rsync protocol can be divided into two phases:</p>
<ol>
<li>
<p>In the first phase, the sender walks the local file tree to generate and send
the <em>file list</em> to the receiver. The file list must be transferred in full,
because both sides sort it by filename (later rsync protocol versions
eliminate this synchronous sorting step).</p>
</li>
<li>
<p>In the second phase, concurrently:</p>
<ul>
<li>The receiver compares and requests each file in the file list. The
receiver requests the full file when it didn‚Äôt exist on disk yet, or it
will send checksums for the rsync <em>hash search</em> algorithm when the file
already existed.</li>
<li>The receiver receives file data from the sender. The sender answers the
requests with just enough data to reconstruct the current file contents
based on what‚Äôs already on the receiver.</li>
</ul>
</li>
</ol>
<p>The architecture makes it easy to implement the second phase in 3 separate
processes, each of which sending to the network as fast as possible using heavy
pipelining. This results in utilizing the available hardware resources (I/O,
CPU, network) on sender and receiver to the fullest.</p>
<h3 id="observing-rsyncs-transfer-phases">Observing rsync‚Äôs transfer phases</h3>
<p>When starting an rsync transfer, looking at the resource usage of both
machines allows us to confirm our understanding of the rsync architecture, and
to pin-point any bottlenecks:</p>















<a href="https://michael.stapelberg.ch/posts/2022-07-02-rsync-how-does-it-work/2022-05-29-rsync-exo1-backup.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-07-02-rsync-how-does-it-work/2022-05-29-rsync-exo1-backup_hua2f50278895cfbee4dc18c7ea60b6d4a_2093260_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-07-02-rsync-how-does-it-work/2022-05-29-rsync-exo1-backup_hua2f50278895cfbee4dc18c7ea60b6d4a_2093260_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-07-02-rsync-how-does-it-work/2022-05-29-rsync-exo1-backup_hua2f50278895cfbee4dc18c7ea60b6d4a_2093260_600x0_resize_q75_box.jpg"
  
  width="600"
  height="331"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<ol>
<li>phase: The rsync sender needs 17 seconds to walk the file system and send
the file list. The rsync receiver reads from the network and writes into RAM
during that time.
<ul>
<li>This phase is random I/O (querying file system metadata) for the sender.</li>
</ul>
</li>
<li>phase: Afterwards, the rsync sender reads from disk and sends to the
network. The rsync receiver receives from the network and writes to disk.
<ul>
<li>The receiver does roughly the same amount of random I/O as the sender did
in phase 1, as it needs to create directories and request missing files.</li>
<li>The sender does sequential disk reads and possibly checksum calculation, if
the file(s) existed on the receiver side.</li>
</ul>
</li>
</ol>
<p>(Again, the above was captured using rsync protocol version 27, later rsync
protocol versions don‚Äôt synchronize after completing phase 1, but instead
interleave the phases more.)</p>
<h3 id="rsync-hash-search">rsync hash search</h3>
<p>Up until now, we have described the rsync protocol at a high level. Let‚Äôs zoom
into the hash search step, which is what many people might associate with the
term ‚Äúrsync algorithm‚Äù.</p>
<p>When a file exists on both sides, rsync sender and receiver, the receiver first
divides the file into blocks. The block size is a rounded square root of the
file‚Äôs length. The receiver then sends the checksums of all blocks to the
sender. In response, the sender finds matching blocks in the file and sends only
the data needed to reconstruct the file on the receiver side.</p>
<p>Specifically, the sender goes through <strong>each byte</strong> of the file and tries to
match existing receiver content. To make this less computationally expensive,
rsync combines two checksums.</p>
<p>rsync first calculates what it calls the
<a href="https://github.com/WayneD/rsync/blob/0ac7ebceef70417355f25daf9e2fd94e84c49749/checksum.c#L182-L203">‚Äúsum1‚Äù</a>,
or ‚Äúfast signature‚Äù. This is a small checksum (two <code>uint16</code>) that can be
calculated with minimal effort for a rolling window over the file data. tridge
rsync comes with <a href="https://github.com/WayneD/rsync/blob/v3.2.4/simd-checksum-x86_64.cpp">SIMD
implementations</a>
to further speed this up where possible.</p>
<p>Only if the sum1 matches will
<a href="https://github.com/WayneD/rsync/blob/0ac7ebceef70417355f25daf9e2fd94e84c49749/checksum.c#L205-L300">‚Äúsum2‚Äù</a>
(or ‚Äústrong signature‚Äù) be calculated, a 16-byte MD4 hash. Newer protocol
versions allow negotiating the hash algorithm and support the much faster xxhash
algorithms.</p>
<p>If sum2 matches, the block is considered equal on both sides.</p>
<p>Hence, the best case for rsync is when a file has either not changed at all, or
shares as many full blocks of content as possible with the old contents.</p>
<h2 id="changing-data-sets">Changing data sets</h2>
<p>Now that we know how rsync works on the file level, let‚Äôs take a step back to
the data set level.</p>
<p>The easiest situation is when you transfer a data set that is not currently
changing. But what happens when the data set changes while your rsync transfer
is running? Here are two examples.</p>
<p><a href="https://github.com/Debian/debiman">debiman</a>, the manpage generator powering
<a href="https://manpages.debian.org/">manpages.debian.org</a> is running on a Debian VM on
which an rsync job periodically transfers the static manpage archive to
different static web servers across the world. The rsync job and debiman are
not sequenced in any way. Instead, debiman is careful to only ever <a href="https://github.com/Debian/debiman/blob/79b8abe8573daaaf15e4cf40e85daf309e00d454/internal/write/atomically.go#L23">atomically
swap out
files</a>
in its output directory, or add new files before it swaps out an updated index.</p>
<p>The second example, the <a href="https://en.wikipedia.org/wiki/PostgreSQL">PostgreSQL</a>
database management system, is the opposite situation: instead of having full
control over how files are laid out, here I don‚Äôt have control over how files
are written (this generalizes to any situation where the model of only ever
replacing files is not feasible). The data files which my Postgres installation
keeps on disk are not great to synchronize using rsync: they are large and
frequently change. Instead, I now exempt them from my rsync transfer and use <a href="https://manpages.debian.org/pg_dump.1"><code>pg_dump(1)</code></a>
 to create a snapshot of my databases instead.</p>
<p>To confirm rsync‚Äôs behavior regarding changing data sets in detail, I <a href="#confirmation-hack">modified
rsync to ask for confirmation</a> between generating the file
list and transferring the files. Here‚Äôs what I found:</p>
<ul>
<li>If files are added after rsync has transferred the file list, the new files
will just not be part of the transfer.</li>
<li>If a file vanishes between generating the file list and transfering the file,
rsync exits with status code 24, which <a href="https://manpages.debian.org/bullseye/rsync/rsync.1.en.html#EXIT_VALUES">its manpage documents as ‚ÄúPartial
transfer due to vanished source
files‚Äù</a>. My
<code>rsyncprom</code> monitoring wrapper <a href="https://github.com/stapelberg/rsyncprom/commit/bbf82934093b938d054d460a7f9764234d30bc17">offers a flag to treat exit code 24 like exit
code
0</a>,
because depending on the data set, vanishing files are expected.</li>
<li>If a file‚Äôs contents change (no matter whether the file grows, shrinks, or is
modified in-place) between generating the file list and the actual file
transfer, that‚Äôs not a problem ‚Äî rsync will transfer the file contents as it
reads them once the transfer starts. Note that this might be an inconsistent
view of the data, depending on the application.
<ul>
<li>Ideally, don‚Äôt ever modify files within a data set that is rsynced. Instead,
atomically move complete files into the data set.</li>
</ul>
</li>
</ul>
<p>Another way of phrasing the above is that data consistency is not something that
rsync can in any way guarantee. It‚Äôs up to you to either live with the
inconsistency (often a good-enough strategy!), or to add an extra step that
ensures the data set you feed to rsync is consistent.</p>
<h2 id="next-up">Next up</h2>
<p>The fourth article in this series is rsync, article 4: My own rsync
implementation (To be published.)</p>
<h2 id="confirmation-hack">Appendix A: rsync confirmation hack</h2>
<p>For verifying rsync‚Äôs behavior with regards to changing data sets, I checked
out the following version:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% git clone https://github.com/WayneD/rsync/ rsync-changing-data-sets
</span></span><span style="display:flex;"><span>% <span style="color:#007020">cd</span> rsync-changing-data-sets
</span></span><span style="display:flex;"><span>% git checkout v3.2.4
</span></span><span style="display:flex;"><span>% ./configure
</span></span><span style="display:flex;"><span>% make
</span></span></code></pre></div><p>Then, I modified <code>flist.c</code> to add a confirmation step between sending the file
list and doing the actual file transfers:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-diff" data-lang="diff"><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">diff --git i/flist.c w/flist.c
</span></span></span><span style="display:flex;"><span><span style="color:#000080;font-weight:bold">index 1ba306bc..98981f34 100644
</span></span></span><span style="display:flex;"><span><span style="color:#000080;font-weight:bold"></span><span style="color:#a00000">--- i/flist.c
</span></span></span><span style="display:flex;"><span><span style="color:#a00000"></span><span style="color:#00a000">+++ w/flist.c
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span><span style="color:#800080;font-weight:bold">@@ -20,6 +20,8 @@
</span></span></span><span style="display:flex;"><span><span style="color:#800080;font-weight:bold"></span>  * with this program; if not, visit the http://fsf.org website.
</span></span><span style="display:flex;"><span>  */
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#00a000">+#include &lt;stdio.h&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span> #include &#34;rsync.h&#34;
</span></span><span style="display:flex;"><span> #include &#34;ifuncs.h&#34;
</span></span><span style="display:flex;"><span> #include &#34;rounding.h&#34;
</span></span><span style="display:flex;"><span><span style="color:#800080;font-weight:bold">@@ -2516,6 +2518,17 @@ struct file_list *send_file_list(int f, int argc, char *argv[])
</span></span></span><span style="display:flex;"><span><span style="color:#800080;font-weight:bold"></span> 	if (DEBUG_GTE(FLIST, 2))
</span></span><span style="display:flex;"><span> 		rprintf(FINFO, &#34;send_file_list done\n&#34;);
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#00a000">+	char *line = NULL;
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	size_t llen = 0;
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	ssize_t nread;
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	printf(&#34;file list sent. enter &#39;yes&#39; to continue: &#34;);
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	while ((nread = getline(&amp;line, &amp;llen, stdin)) != -1) {
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	  if (nread == strlen(&#34;yes\n&#34;) &amp;&amp; strcasecmp(line, &#34;yes\n&#34;) == 0) {
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	    break;
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	  }
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	  printf(&#34;enter &#39;yes&#39; to continue: &#34;);
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+	}
</span></span></span><span style="display:flex;"><span><span style="color:#00a000">+
</span></span></span><span style="display:flex;"><span><span style="color:#00a000"></span> 	if (inc_recurse) {
</span></span><span style="display:flex;"><span> 		send_dir_depth = 1;
</span></span><span style="display:flex;"><span> 		add_dirs_to_tree(-1, flist, stats.num_dirs);
</span></span></code></pre></div><p>My rsync invocation is:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>./rsync -av --debug<span style="color:#666">=</span>all4 --protocol<span style="color:#666">=</span><span style="color:#40a070">27</span> ~/i3/src /tmp/DEST/
</span></span></code></pre></div><p>It‚Äôs necessary to use an older protocol version to make rsync generate a full
file list before starting the transfer. Later protocol versions interleave these
parts of the protocol.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[rsync, article 2: Surroundings]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-07-02-rsync-surroundings/"/>
    <id>https://michael.stapelberg.ch/posts/2022-07-02-rsync-surroundings/</id>
    <published>2022-07-02T14:30:00+02:00</published>
    <content type="html"><![CDATA[<p>This post is the second article in a series of blog posts about rsync, <a href="../2022-06-18-rsync-overview/">see the
Series Overview</a>.</p>
<p>Now that we know what to use rsync for, how can we best integrate rsync into
monitoring and alerting, and on which operating systems does it work?</p>
<h2 id="monitoring-and-alerting-for-rsync-jobs-using-prometheus">Monitoring and alerting for rsync jobs using Prometheus</h2>
<p>Once you have one or two important <code>rsync</code> jobs, it might make sense to alert
when your job has not completed as expected.</p>
<p>I‚Äôm using <a href="https://prometheus.io/">Prometheus</a> for all my monitoring and alerting.</p>
<p>Because Prometheus <em>pulls</em> metrics from its (typically always-running) targets,
we need an extra component: the <a href="https://prometheus.io/docs/practices/pushing/">Prometheus
Pushgateway</a>. The Pushgateway
stores metrics pushed by short-lived jobs like <code>rsync</code> transfers and makes them
available to subsequent Prometheus pulls.</p>
<p>To integrate <code>rsync</code> with the Prometheus Pushgateway, I wrote
<a href="https://github.com/stapelberg/rsyncprom"><code>rsyncprom</code></a>, a small tool that wraps
<code>rsync</code>, or parses rsync output supplied by you. Once <code>rsync</code> completes,
<code>rsyncprom</code> pushes the rsync exit code and parsed statistics about the transfer
to your Pushgateway.</p>
<h3 id="prometheus-server-side-setup">Prometheus server-side setup</h3>
<p>First, I set up the Prometheus Pushgateway (via Docker and systemd) on my
server.</p>
<p>Then, in my <code>prometheus.conf</code> file, I instruct Prometheus to pull data from my
Pushgateway:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># prometheus.conf</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">rule_files</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span>- backups.rules.yml<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">scrape_configs</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#60a0b0;font-style:italic"># [‚Ä¶]</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span>- <span style="color:#062873;font-weight:bold">job_name</span>:<span style="color:#bbb"> </span>pushgateway<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">honor_labels</span>:<span style="color:#bbb"> </span><span style="color:#007020;font-weight:bold">true</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">static_configs</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span>- <span style="color:#062873;font-weight:bold">targets</span>:<span style="color:#bbb"> </span>[<span style="color:#4070a0">&#39;pushgateway:9091&#39;</span>]<span style="color:#bbb">
</span></span></span></code></pre></div><p>Finally, in <code>backups.rules.yml</code>, I configure an alert on the time series <code>rsync_exit_code</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># backups.rules.yml</span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#062873;font-weight:bold">groups</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span>- <span style="color:#062873;font-weight:bold">name</span>:<span style="color:#bbb"> </span>backups.rules<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span><span style="color:#062873;font-weight:bold">rules</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">  </span>- <span style="color:#062873;font-weight:bold">alert</span>:<span style="color:#bbb"> </span>RsyncFailing<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">expr</span>:<span style="color:#bbb"> </span>rsync_exit_code{job=&#34;rsync&#34;} &gt; 0<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">for</span>:<span style="color:#bbb"> </span>1m<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">labels</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">      </span><span style="color:#062873;font-weight:bold">job</span>:<span style="color:#bbb"> </span>rsync<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">    </span><span style="color:#062873;font-weight:bold">annotations</span>:<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">      </span><span style="color:#062873;font-weight:bold">description</span>:<span style="color:#bbb"> </span>rsync {{ $labels.instance }} is failing<span style="color:#bbb">
</span></span></span><span style="display:flex;"><span><span style="color:#bbb">      </span><span style="color:#062873;font-weight:bold">summary</span>:<span style="color:#bbb"> </span>rsync {{ $labels.instance }} is failing<span style="color:#bbb">
</span></span></span></code></pre></div><p>This alert will fire any time an rsync job monitored via <code>rsyncprom</code> exits with
a non-zero exit code.</p>
<h3 id="rsync-client-side-setup">rsync client-side setup</h3>
<p>On each machine that runs <code>rsync</code> jobs I want to monitor, I first install
<code>rsyncprom</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>go install github.com/stapelberg/rsyncprom/cmd/rsync-prom@latest
</span></span></code></pre></div><p>Then, I just wrap <code>rsync</code> transfers where it‚Äôs most convenient, for example in
my <a href="https://manpages.debian.org/crontab.5"><code>crontab(5)</code></a>
:</p>
<pre tabindex="0"><code class="language-crontab" data-lang="crontab"># crontab -e
9 9 * * * /home/michael/go/bin/rsync-prom --job=&#34;cron&#34; --instance=&#34;gphotos-sync@midna&#34; -- /home/michael/gphotos-sync/sync.sh
</code></pre><p>The same wrapper technique works in <a href="https://github.com/stapelberg/rsyncprom#setup-example-systemd">shell scripts or systemd service
files</a>.</p>
<p>You can also provide <code>rsync</code> output <a href="https://github.com/stapelberg/zkj-nas-tools/blob/02d46d718df60c413844d9218f6dd702ad94e5f1/dornroeschen/sshutil.go#L134-L139">from Go
code</a>
(this example runs <code>rsync</code> via SSH).</p>
<h3 id="monitoring-architecture">Monitoring architecture</h3>
<p>Here‚Äôs how the whole setup looks like architecturally:</p>
<p><img src="2022-05-29-rsync-prom-architecture.svg" alt="rsync-prom architecture"></p>
<p>The rsync scheduler runs on a Raspberry Pi running
<a href="https://gokrazy.org/">gokrazy</a>. The scheduler invokes the <code>rsync</code> job to back
up <em>websrv.zekjur.net</em> via SSH and sends the output to Prometheus, which is
running on a (different) server at an ISP.</p>
<h3 id="monitoring-dashboard">Monitoring dashboard</h3>
<p>The grafana dashboard looks like this in action:</p>















<a href="https://michael.stapelberg.ch/posts/2022-07-02-rsync-surroundings/2022-06-12-rsync-grafana-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-07-02-rsync-surroundings/2022-06-12-rsync-grafana-featured_hu49255cbd0611171ac9ea093d82565708_603964_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-07-02-rsync-surroundings/2022-06-12-rsync-grafana-featured_hu49255cbd0611171ac9ea093d82565708_603964_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-07-02-rsync-surroundings/2022-06-12-rsync-grafana-featured_hu49255cbd0611171ac9ea093d82565708_603964_600x0_resize_q75_box.jpg"
  alt="rsync grafana dashboard" title="rsync grafana dashboard"
  width="600"
  height="469"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<ul>
<li>The top left table shows the most recent rsync exit code, green means 0 (success).</li>
<li>The top right graph shows rsync runtime (wall-clock time) over time. Long
runtime can have any number of bottlenecks as the reason: network connections,
storage devices, slow CPUs.</li>
<li>The bottom left graph shows rsync dataset size over time. This allows you to
quickly pinpoint transfers that are filling your disk up.</li>
<li>The bottom right graph shows transferred bytes per rsync over time. The higher
the value, the higher the amount of change in your data set between
synchronization runs.</li>
</ul>
<h2 id="rsync-operating-system-availability">rsync operating system availability</h2>
<p>Now that we have learnt about a couple of typical use-cases, where can you use
<code>rsync</code> to implement these use-cases? The answer is: in most environments, as
<code>rsync</code> is widely available on different Linux and BSD versions.</p>
<p>Macs come with <code>rsync</code> available by default (but it‚Äôs an old, patched version),
and OpenBSD comes with a BSD-licensed implementation called
<a href="https://www.openrsync.org/">openrsync</a> by default.</p>
<p>On Windows, you can use the <a href="https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux">Windows Subsystem for
Linux</a>.</p>
<table>
<thead>
<tr>
<th>Operating System</th>
<th>Implementation</th>
<th>Version</th>
</tr>
</thead>
<tbody>
<tr>
<td>FreeBSD 13.1 (ports)</td>
<td>tridge</td>
<td><a href="https://www.freebsd.org/cgi/man.cgi?query=rsync&amp;manpath=FreeBSD+13.1-RELEASE+and+Ports">3.2.3</a></td>
</tr>
<tr>
<td>OpenBSD 7.1</td>
<td>openrsync</td>
<td>(7.1)</td>
</tr>
<tr>
<td>OpenBSD 7.1 (ports)</td>
<td>tridge</td>
<td><a href="https://openports.se/net/rsync">3.2.4</a></td>
</tr>
<tr>
<td>NetBSD 9.2 (pkgsrc)</td>
<td>tridge</td>
<td><a href="https://ftp.netbsd.org/pub/pkgsrc/current/pkgsrc/net/rsync/index.html">3.2.4</a></td>
</tr>
<tr>
<td>Linux</td>
<td>tridge</td>
<td><a href="https://repology.org/project/rsync/versions">repology</a></td>
</tr>
<tr>
<td>macOS</td>
<td>tridge</td>
<td><a href="https://www.unix.com/man-page/osx/1/rsync/">2.6.9</a></td>
</tr>
</tbody>
</table>
<h2 id="next-up">Next Up</h2>
<p>The third article in this series is <a href="../2022-07-02-rsync-how-does-it-work/">rsync, article 3: How does rsync
work?</a>. With rsync up and running, it‚Äôs
time to take a peek under the hood of rsync to better understand how it works.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[rsync, article 1: Scenarios]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-06-18-rsync-article-1-scenarios/"/>
    <id>https://michael.stapelberg.ch/posts/2022-06-18-rsync-article-1-scenarios/</id>
    <published>2022-06-18T15:04:00+02:00</published>
    <content type="html"><![CDATA[<p>This post is the first article in a series of blog posts about rsync, <a href="../2022-06-18-rsync-overview/">see the
Series Overview</a>.</p>
<p>To motivate why it makes sense to look at rsync, I present three scenarios for
which I have come to appreciate rsync: <a href="#dokuwiki-transfers-using-rsync">DokuWiki
transfers</a>, <a href="#software-deployment-using-rsync">Software
deployment</a> and
<a href="#backups-using-rsync">Backups</a>.</p>
<h2 id="dokuwiki-transfers-using-rsync">Scenario: DokuWiki transfers using rsync</h2>
<p>Recently, I set up a couple of tools for a website that is built on DokuWiki,
such as a dead link checker and a statistics program. To avoid overloading the
live website (and possibly causing spurious requests that interfere with
statistics), I decided it would be best to run a separate copy of the DokuWiki
installation locally. This requires synchronizing:</p>
<ol>
<li>The PHP source code files of DokuWiki itself (including plugins and configuration)</li>
<li>One text file per wiki page, and all uploaded media files</li>
</ol>
<p>A DokuWiki installation is exactly the kind of file tree that <a href="https://manpages.debian.org/scp.1"><code>scp(1)</code></a>
 cannot efficiently transfer (too many small files),
but <a href="https://manpages.debian.org/rsync.1"><code>rsync(1)</code></a>
 can! The <code>rsync</code> transfer only takes a few seconds, no matter if
it‚Äôs a full download (can be simpler for batch jobs) or an incremental
synchronization (more efficient for regular synchronizations like backups).</p>
<h2 id="software-deployment-using-rsync">Scenario: Software deployment using rsync</h2>
<p>For smaller projects where I don‚Äôt publish new versions through Docker, I
instead use a shell script to transfer and run my software on the server.</p>
<p><code>rsync</code> is a great fit here, as it transfers many small files (static assets and
templates) efficiently, only transfers the binaries that actually changed, and
doesn‚Äôt mind if the binary file it‚Äôs uploading is currently running (contrary to
<a href="https://manpages.debian.org/scp.1"><code>scp(1)</code></a>
, for example).</p>
<p>To illustrate how such a script could look like, here‚Äôs my push script for
<a href="https://codesearch.debian.net/">Debian Code Search</a>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#007020">#!/bin/zsh
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span><span style="color:#007020">set</span> -ex
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Asynchronously transfer assets while compiling:</span>
</span></span><span style="display:flex;"><span><span style="color:#666">(</span>
</span></span><span style="display:flex;"><span>    ssh root@dcs <span style="color:#4070a0">&#39;for i in $(seq 0 5); do mkdir -p /srv/dcs/shard${i}/{src,idx}; done&#39;</span>
</span></span><span style="display:flex;"><span>    ssh root@dcs <span style="color:#4070a0">&#34;adduser --disabled-password --gecos &#39;Debian Code Search&#39; dcs || true&#34;</span>
</span></span><span style="display:flex;"><span>    rsync -r systemd/ root@dcs:/etc/systemd/system/ &amp;
</span></span><span style="display:flex;"><span>    rsync -r cmd/dcs-web/templates/ root@dcs:/srv/dcs/templates/ &amp;
</span></span><span style="display:flex;"><span>    rsync -r static/ root@dcs:/srv/dcs/static/ &amp;
</span></span><span style="display:flex;"><span>    <span style="color:#007020">wait</span>
</span></span><span style="display:flex;"><span><span style="color:#666">)</span> &amp;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Compile a new Debian Code Search version:</span>
</span></span><span style="display:flex;"><span><span style="color:#bb60d5">tmp</span><span style="color:#666">=</span><span style="color:#007020;font-weight:bold">$(</span>mktemp -d<span style="color:#007020;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>mkdir <span style="color:#bb60d5">$tmp</span>/bin
</span></span><span style="display:flex;"><span><span style="color:#bb60d5">GOBIN</span><span style="color:#666">=</span><span style="color:#bb60d5">$tmp</span>/bin <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span><span style="color:#bb60d5">GOAMD64</span><span style="color:#666">=</span>v3 <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  go install <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  -ldflags <span style="color:#4070a0">&#39;-X github.com/Debian/dcs/cmd/dcs-web/common.Version=$version&#39;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  github.com/Debian/dcs/cmd/...
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Transfer the Debian Code Search binaries:</span>
</span></span><span style="display:flex;"><span>rsync <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  <span style="color:#bb60d5">$tmp</span>/bin/dcs-<span style="color:#666">{</span>web,source-backend,package-importer,compute-ranking,feeder<span style="color:#666">}</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  <span style="color:#bb60d5">$tmp</span>/bin/dcs <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  root@dcs:/srv/dcs/bin/
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Wait for the asynchronous asset transfer to complete:</span>
</span></span><span style="display:flex;"><span><span style="color:#007020">wait</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Restart Debian Code Search on the server:</span>
</span></span><span style="display:flex;"><span><span style="color:#bb60d5">UNITS</span><span style="color:#666">=(</span>dcs-package-importer.service dcs-source-backend.service dcs-compute-ranking.timer dcs-web.service<span style="color:#666">)</span>
</span></span><span style="display:flex;"><span>ssh root@dcs systemctl daemon-reload <span style="color:#4070a0;font-weight:bold">\&amp;\&amp;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  systemctl <span style="color:#007020">enable</span> <span style="color:#70a0d0">${</span><span style="color:#bb60d5">UNITS</span><span style="color:#70a0d0">}</span> <span style="color:#4070a0;font-weight:bold">\;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  systemctl reset-failed <span style="color:#70a0d0">${</span><span style="color:#bb60d5">UNITS</span><span style="color:#70a0d0">}</span> <span style="color:#4070a0;font-weight:bold">\;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  systemctl restart <span style="color:#70a0d0">${</span><span style="color:#bb60d5">UNITS</span><span style="color:#70a0d0">}</span> <span style="color:#4070a0;font-weight:bold">\;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  systemctl reload nginx
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>rm -rf <span style="color:#4070a0">&#34;</span><span style="color:#70a0d0">${</span><span style="color:#bb60d5">tmp</span>?<span style="color:#70a0d0">}</span><span style="color:#4070a0">&#34;</span>
</span></span></code></pre></div><h2 id="backups-using-rsync">Scenario: Backups using rsync</h2>
<p>The first backup system I used was
<a href="https://en.wikipedia.org/wiki/Bacula">bacula</a>, which Wikipedia describes as an
enterprise-level backup system. That certainly matches my impression, both in
positive and negative ways: while bacula is very powerful, some seemingly common
operations turn out quite complicated in bacula. Restoring a single file or
directory tree from a backup was always more effort than I thought
reasonable. For some reason, I often had to restore backup catalogs before I was
able to access the backup contents (I don‚Äôt remember the exact details).</p>
<p>When moving apartment last time, I used the opportunity to change my backup
strategy. Instead of using complicated custom software with its own volume file
format (like bacula), I wanted backed-up files to be usable on the file system
level with standard tools like <code>rm</code>, <code>ls</code>, <code>cp</code>, etc.</p>
<p>Working with files in a regular file system makes day-to-day usage easier, and
also ensures that when my network storage hardware dies, I can just plug the
hard disk into any PC, boot a Linux live system, and recover my data.</p>
<p>To back up machines onto my <a href="/posts/2019-10-23-nas/">network storage PC</a>‚Äôs file
system, I ended up with a <a href="https://github.com/stapelberg/zkj-nas-tools/blob/85e445a284c89590d595a52e16cb6dd652b1388e/dornroeschen/backup-remote.pl">hand-written rsync wrapper
script</a>
that copies the full file system of each machine into dated directory trees:</p>
<pre tabindex="0"><code>storage2# ls -l backup/midna/2022-05-27
bin   boot  etc  home  lib  lib64  media  opt
proc  root  run  sbin  sys  tmp    usr    var

storage2# ls -l backup/midna/2022-05-27/home/michael/configfiles/zshrc
-rw-r--r--. 7 1000 1000 14554 May  9 19:37 backup/midna/2022-05-27/home/michael/configfiles/zshrc
</code></pre><p>To revert my <code>~/.zshrc</code> to an older version, I can <a href="https://manpages.debian.org/scp.1"><code>scp(1)</code></a>
 the file:</p>
<pre tabindex="0"><code>midna% scp storage2:/srv/backup/midna/2022-05-27/home/michael/configfiles/zshrc ~/configfiles/zshrc
</code></pre><p>To compare a whole older source tree, I can mount it using <a href="https://manpages.debian.org/sshfs.1"><code>sshfs(1)</code></a>
:</p>
<pre tabindex="0"><code>midna% mkdir /tmp/2022-05-27-i3
midna% sshfs storage2:/srv/backup/midna/2022-05-27/$HOME/i3 /tmp/2022-05-27-i3
midna% diff -ur /tmp/2022-05-27-i3 ~/i3/
</code></pre><h3 id="incremental-backups">Incremental backups</h3>
<p>Of course, the idea is not to transfer the full machine contents every day, as
that would quickly fill up my network storage‚Äôs 16 TB disk! Instead, we can use
rsync‚Äôs <code>--link-dest</code> option to elegantly deduplicate files using file system
hard links:</p>
<pre tabindex="0"><code>backup/midna/2022-05-26
backup/midna/2022-05-27 # rsync --link-dest=2022-05-26
</code></pre><p>To check the de-duplication level, we can use <a href="https://manpages.debian.org/du.1"><code>du(1)</code></a>
,
first on a single directory:</p>
<pre tabindex="0"><code>storage2# du -hs 2022-05-27 
113G	2022-05-27
</code></pre><p>‚Ä¶and then on two subsequent directories:</p>
<pre tabindex="0"><code>storage2# du -hs 2022-05-25 2022-05-27
112G	2022-05-25
7.3G	2022-05-27
</code></pre><p>As you can see, the 2022-05-27 backup took 7.3 GB of disk space, and 104.7 GB
were re-used from the previous backup(s).</p>
<p>To print all files which have changed since the last backup, we can use:</p>
<pre tabindex="0"><code>storage2# find 2022-05-27 -type f -links 1 -print
</code></pre><h3 id="limitation-file-system-compatibility">Limitation: file system compatibility</h3>
<p>A significant limitation of backups at the file level is that the destination
file system (network storage) needs to support all the file system features used
on the machines you are backing up.</p>
<p>For example, if you use <a href="https://help.ubuntu.com/community/FilePermissionsACLs">POSIX
ACLs</a> or <a href="https://wiki.archlinux.org/title/File_permissions_and_attributes#Extended_attributes">Extended
attributes</a>
(possibly for <a href="https://wiki.archlinux.org/title/Capabilities">Capabilities</a> or
<a href="https://wiki.archlinux.org/title/SELinux">SELinux</a>), you need to ensure that
your backup file system has these features enabled, and that you are using <a href="https://manpages.debian.org/rsync.1"><code>rsync(1)</code></a>
‚Äôs <code>--xattrs</code> (or <code>-X</code> for short) option.</p>
<p>This can turn from a pitfall into a dealbreaker as soon as multiple operating
systems are involved. For example, the <code>rsync</code> version on macOS has
<a href="https://github.com/apple-oss-distributions/rsync/blob/aa4e500aa53b9417014c718a5ff0e29215f08e48/rsync/generator.c#L1447">Apple-specific
code</a>
to work with Apple <a href="https://en.wikipedia.org/wiki/Resource_fork">resource forks</a>
and other extended attributes. It‚Äôs not clear to me whether macOS <code>rsync</code> can
send files to Linux <code>rsync</code>, restore them, and end up with the same system state.</p>
<p>Luckily, I am only interested in backing up Linux systems, or merely home
directories of non-Linux systems, where no extended attributes are used.</p>
<h3 id="downside-slow-bulk-operations-disk-usage-deletion">Downside: slow bulk operations (disk usage, deletion)</h3>
<p>The biggest downside of this architecture is that working with the directory
trees in bulk can be very slow, especially when using a hard disk instead of an
SSD. For example, deleting old backups can easily take many hours to multiple
days (!). Sure, you can just let the <code>rm</code> command run in the background, but
it‚Äôs annoying nevertheless.</p>
<p>Even merely calculating the disk space usage of each directory tree is a
painfully slow operation. I tried using stateful disk usage tools like
<a href="http://duc.zevv.nl/">duc</a>, but it <a href="https://github.com/zevv/duc/issues/240">didn‚Äôt work
reliably</a> on my backups.</p>
<p>In practice, I found that for tracking down large files, using <a href="https://manpages.debian.org/ncdu.1"><code>ncdu(1)</code></a>
 on any recent backup typically quickly shows the
large file. In one case, I found <code>var/lib/postgresql</code> to consume many
gigabytes. I excluded it in favor of using <a href="https://manpages.debian.org/pg_dump.1"><code>pg_dump(1)</code></a>
, which resulted in much smaller backups!</p>
<p>Unfortunately, even when using an SSD, determining which files take up most
space of a full backup takes a few minutes:</p>
<pre tabindex="0"><code>storage2# time du -hs backup/midna/2022-06-09
742G	backup/midna/2022-06-09

real	8m0.202s
user	0m11.651s
sys	2m0.731s
</code></pre><h3 id="backup-transport-ssh-and-scheduling">Backup transport (SSH) and scheduling</h3>
<p>To transfer data via <code>rsync</code> from the backup host to my network storage, I‚Äôm
using SSH.</p>
<p>Each machine‚Äôs SSH access is restricted in my network storage‚Äôs SSH <a href="https://manpages.debian.org/authorized_keys.5"><code>authorized_keys(5)</code></a>
 config file to not allow arbitrary
commands, but to perform just a specific operation. The only allowed operation
in my case is running <code>rrsync</code> (‚Äúrestricted rsync‚Äù) in a container whose file
system only contains the backup host‚Äôs sub directory, e.g. .<code>websrv.zekjur.net</code>:</p>
<pre tabindex="0"><code>command=&#34;/bin/docker run --log-driver none -i -e SSH_ORIGINAL_COMMAND -v /srv/backup/websrv.zekjur.net:/srv/backup/websrv.zekjur.net stapelberg/docker-rsync /srv/backup/websrv.zekjur.net&#34;,no-port-forwarding,no-X11-forwarding ssh-ed25519 AAAAC3‚Ä¶
</code></pre><p>(The <a href="/posts/2016-11-21-gigabit-nas-coreos/#dockerfiles-rrsync-and-samba">corresponding <code>Dockerfile</code> can be found in my Gigabit NAS
article</a>.)</p>
<p>To trigger such an SSH-protected <code>rsync</code> transfer remotely, I‚Äôm using a small
custom scheduling program called
<a href="https://github.com/stapelberg/zkj-nas-tools/tree/master/dornroeschen">dornr√∂schen</a>. The
program arranges for all involved machines to be powered on (using
<a href="https://en.wikipedia.org/wiki/Wake-on-LAN">Wake-on-LAN</a>) and then starts
<code>rsync</code> via <em>another operation-restricted SSH connection</em>.</p>
<p>You could easily replace this with a cron job if you don‚Äôt care about WOL.</p>
<p>The architecture looks like this:</p>
<p><img src="2022-05-29-backup-architecture.svg" alt="backup architecture"></p>
<p>The operation-restricted SSH connection on each backup host is configured in
SSH‚Äôs <a href="https://manpages.debian.org/authorized_keys.5"><code>authorized_keys(5)</code></a>
 config file:</p>
<pre tabindex="0"><code>command=&#34;/root/backup-remote.pl&#34;,no-port-forwarding,no-X11-forwarding ssh-ed25519 AAAAC3‚Ä¶
</code></pre><h2 id="next-up">Next up</h2>
<p>The second article in this series is <a href="../2022-07-02-rsync-surroundings/">rsync, article 2:
Surroundings</a>. Now that we know what to use
rsync for, how can we best integrate rsync into monitoring and alerting, and on
which operating systems does it work?</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[rsync: Series Overview]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-06-18-rsync-overview/"/>
    <id>https://michael.stapelberg.ch/posts/2022-06-18-rsync-overview/</id>
    <published>2022-06-18T15:00:00+02:00</published>
    <content type="html"><![CDATA[<p>For many years, I was only a casual user of
<a href="https://en.wikipedia.org/wiki/Rsync">rsync</a> and used it mostly for one-off file
transfers.</p>
<p>Over time, I found rsync useful in more and more cases, and would recommend
every computer user put this great tool into their toolbox üõ† üß∞ !</p>
<p>I‚Äôm publishing a series of blog posts about rsync:</p>
<ul>
<li><a href="../2022-06-18-rsync-article-1-scenarios/">rsync, article 1: Scenarios</a>. To
motivate why it makes sense to look at rsync, I present three scenarios for
which I have come to appreciate rsync: DokuWiki transfers, Software deployment
and Backups.</li>
<li><a href="../2022-07-02-rsync-surroundings/">rsync, article 2: Surroundings</a>. Now that
we know what to use rsync for, how can we best integrate rsync into monitoring
and alerting, and on which operating systems does it work?</li>
<li><a href="../2022-07-02-rsync-how-does-it-work">rsync, article 3: How does rsync
work?</a>. With rsync up and running, it‚Äôs
time to take a peek under the hood of rsync to better understand how it works.</li>
<li>rsync, article 4: My own rsync implementation (To be published.)</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[25 Gbit/s HTTP and HTTPS download speeds]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/"/>
    <id>https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/</id>
    <published>2022-05-14T16:18:00+02:00</published>
    <content type="html"><![CDATA[<p>Now that I <a href="/posts/2022-04-23-fiber7-25gbit-upgrade/">recently upgraded my internet connection to 25
Gbit/s</a>, I was curious how hard or
easy it is to download files via HTTP and HTTPS over a 25 Gbit/s link. I don‚Äôt
have another 25 Gbit/s connected machine other than my router, so I decided to
build a little lab for tests like these üßë‚Äçüî¨</p>
<h2 id="hardware-and-software-setup">Hardware and Software setup</h2>
<p>I found a Mellanox ConnectX-4 Lx for the comparatively low price of 204 CHF on
digitec:</p>















<a href="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0209.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0209_hu855bbe0a9c47ac557e5b09db74fa3b06_1118443_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0209_hu855bbe0a9c47ac557e5b09db74fa3b06_1118443_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0209_hu855bbe0a9c47ac557e5b09db74fa3b06_1118443_600x0_resize_q75_box.jpg"
  
  width="600"
  height="480"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>To connect it to my router, I ordered a MikroTik XS+DA0003 SFP28/SFP+ Direct
Attach Cable (DAC) with it. I installed the network card into my old workstation
(on the right) and connected it with the 25 Gbit/s DAC to router7 (on the left):</p>















<a href="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0204.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0204_hue1ce97509a6d1573a4d6789b4fcce12c_1559726_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0204_hue1ce97509a6d1573a4d6789b4fcce12c_1559726_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0204_hue1ce97509a6d1573a4d6789b4fcce12c_1559726_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="25-gbits-router-left">25 Gbit/s router (left)</h3>
<table>
<thead>
<tr>
<th>Component</th>
<th>Model</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mainboard</td>
<td>ASRock B550 Taichi</td>
</tr>
<tr>
<td>CPU</td>
<td>AMD Ryzen 5 5600X 6-Core Processor</td>
</tr>
<tr>
<td>Network card</td>
<td><a href="https://www.fs.com/de/products/75603.html">Intel XXV710</a></td>
</tr>
<tr>
<td>Linux</td>
<td>Linux 5.17.4 (<a href="https://router7.org">router7</a>)<br>curl 7.83.0 from debian bookworm<br>Go <code>net/http</code> from Go 1.18</td>
</tr>
</tbody>
</table>
<p>router7 comes with <a href="https://en.wikipedia.org/wiki/TCP_congestion_control#TCP_BBR">TCP
BBR</a> enabled by
default.</p>
<h3 id="old-workstation-right">Old workstation (right)</h3>
<table>
<thead>
<tr>
<th>Component</th>
<th>Model</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mainboard</td>
<td>ASUS PRIME Z370-A</td>
</tr>
<tr>
<td>CPU</td>
<td>Intel i9-9900K CPU @ 3.60GHz</td>
</tr>
<tr>
<td>Network card</td>
<td>Mellanox ConnectX-4</td>
</tr>
<tr>
<td>Linux</td>
<td>5.17.5 (Arch Linux)<br>nginx 1.21.6<br>caddy 2.4.3</td>
</tr>
</tbody>
</table>
<h2 id="test-preparation">Test preparation</h2>
<p>Before taking any measurements, I do one full download so that the file contents
are entirely in the Linux page cache, and the measurements therefore no longer
contain the speed of the disk.</p>
<p><code>big.img</code> in the tests below refers to the 35 GB test file I‚Äôm downloading,
which consists of distri-disk.img repeated 5 times.</p>
<h2 id="http">T1: HTTP download speed (unencrypted)</h2>
<h3 id="http1">T1.1: Single TCP connection</h3>
<p>The simplest test is using just a single TCP connection, for example:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>curl -v -o /dev/null http://oldmidna:8080/distri/tmp/big.img
</span></span><span style="display:flex;"><span>./httpget25 http://oldmidna:8080/distri/tmp/big.img
</span></span></code></pre></div><table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>curl</strong></td>
<td><strong>nginx</strong></td>
<td><strong>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</strong></td>
</tr>
<tr>
<td>curl</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (20em / 10)); background-color: blue; color: white">20</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (20.2em / 10)); background-color: blue; color: white">20.2</div></div>

</td>
</tr>
</tbody>
</table>
<p>curl can saturate a 25 Gbit/s link without any trouble.</p>
<p>The Go <code>net/http</code> package is slower and comes in at 20 Gbit/s.</p>
<h3 id="http4">T1.2: Multiple TCP connections</h3>
<p>Running 4 of these downloads concurrently is a reliable and easy way to saturate
a 25 Gbit/s link:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">for</span> i in <span style="color:#007020;font-weight:bold">$(</span>seq <span style="color:#40a070">0</span> 4<span style="color:#007020;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  curl -v -o /dev/null http://oldmidna:8080/distri/tmp/big.img &amp;
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">done</span>
</span></span></code></pre></div><table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>curl</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
</tbody>
</table>
<h2 id="https">T2: HTTPS download speed (encrypted)</h2>
<p>At link speeds this high, enabling TLS slashes bandwidth in half or worse.</p>
<p>Using 4 TCP connections allows saturating a 25 Gbit/s link.</p>
<p>Caddy uses more CPU to serve files compared to nginx.</p>
<h3 id="https1">T2.1: Single TCP connection</h3>
<p>This test works the same as T1.1, but with a HTTPS URL:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>curl -v -o /dev/null --insecure https://oldmidna:8443/distri/tmp/big.img
</span></span><span style="display:flex;"><span>./httpget25 https://oldmidna:8443/distri/tmp/big.img
</span></span></code></pre></div><table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (8em / 10)); background-color: blue; color: white">8</div></div>

</td>
</tr>
<tr>
<td>curl</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (7.5em / 10)); background-color: blue; color: white">7.5</div></div>

</td>
</tr>
<tr>
<td><strong>Go</strong></td>
<td><strong>nginx</strong></td>
<td><strong>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (12em / 10)); background-color: blue; color: white">12</div></div>

</strong></td>
</tr>
<tr>
<td>Go</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (7.2em / 10)); background-color: blue; color: white">7.2</div></div>

</td>
</tr>
</tbody>
</table>
<h3 id="https4">T2.2: Multiple TCP connections</h3>
<p>This test works the same as T1.2, but with a HTTPS URL:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">for</span> i in <span style="color:#007020;font-weight:bold">$(</span>seq <span style="color:#40a070">0</span> 4<span style="color:#007020;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  curl -v -o /dev/null --insecure https://oldmidna:8443/distri/tmp/big.img &amp;
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">done</span>
</span></span></code></pre></div><p>Curiously, the Go <code>net/http</code> client downloading from caddy cannot saturate a 25
Gbit/s link.</p>
<table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>curl</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (21.6em / 10)); background-color: blue; color: white">21.6</div></div>

</td>
</tr>
</tbody>
</table>
<h2 id="httpsktls">T3: HTTPS with Kernel TLS (KTLS)</h2>
<p>Linux 4.13 got support for Kernel TLS back in 2017.</p>
<p>nginx 1.21.4 introduced support for Kernel TLS, and they have a <a href="https://www.nginx.com/blog/improving-nginx-performance-with-kernel-tls/">blog post on
how to configure
it</a>.</p>
<p>In terms of download speeds, there is no difference with or without KTLS. But,
enabling KTLS noticeably reduces CPU usage, from ‚âà10% to a steady 2%.</p>
<p>For even newer network cards such as the Mellanox ConnectX-6, the kernel can
even offload TLS onto the network card!</p>
<h3 id="httpsktls1">T3.1: Single TCP connection</h3>
<table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (8em / 10)); background-color: blue; color: white">8</div></div>

</td>
</tr>
<tr>
<td><strong>Go</strong></td>
<td><strong>nginx</strong></td>
<td><strong>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (12em / 10)); background-color: blue; color: white">12</div></div>

</strong></td>
</tr>
</tbody>
</table>
<h3 id="httpsktls4">T3.2: Multiple TCP connections</h3>
<table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
</tbody>
</table>
<h2 id="conclusions">Conclusions</h2>
<p>When downloading from nginx with 1 TCP connection, with TLS encryption enabled
(HTTPS), the Go <code>net/http</code> client is faster than curl!</p>
<p>Caddy is slightly slower than nginx, which manifests itself in slower speeds
with curl and even slower speeds with Go‚Äôs <code>net/http</code>.</p>
<p>To max out 25 Gbit/s, even when using TLS encryption, just use 3 or more
connections in parallel. This helps with HTTP and HTTPS, with any combination of
client and server.</p>
<h2 id="appendix">Appendix</h2>
<details>
<summary>Go <code>net/http</code> test program <code>httpget25.go</code></summary>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">package</span> main
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">import</span> (
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;crypto/tls&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;flag&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;fmt&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;io&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;io/ioutil&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;log&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;net/http&#34;</span>
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">httpget25</span>() <span style="color:#902000">error</span> {
</span></span><span style="display:flex;"><span>	http.DefaultTransport.(<span style="color:#666">*</span>http.Transport).TLSClientConfig = <span style="color:#666">&amp;</span>tls.Config{InsecureSkipVerify: <span style="color:#007020;font-weight:bold">true</span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">for</span> _, arg <span style="color:#666">:=</span> <span style="color:#007020;font-weight:bold">range</span> flag.<span style="color:#06287e">Args</span>() {
</span></span><span style="display:flex;"><span>		resp, err <span style="color:#666">:=</span> http.<span style="color:#06287e">Get</span>(arg)
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>			<span style="color:#007020;font-weight:bold">return</span> err
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> resp.StatusCode <span style="color:#666">!=</span> http.StatusOK {
</span></span><span style="display:flex;"><span>			<span style="color:#007020;font-weight:bold">return</span> fmt.<span style="color:#06287e">Errorf</span>(<span style="color:#4070a0">&#34;unexpected HTTP status code: want %v, got %v&#34;</span>, http.StatusOK, resp.Status)
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		io.<span style="color:#06287e">Copy</span>(ioutil.Discard, resp.Body)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020;font-weight:bold">nil</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">main</span>() {
</span></span><span style="display:flex;"><span>	flag.<span style="color:#06287e">Parse</span>()
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">:=</span> <span style="color:#06287e">httpget25</span>(); err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#06287e">Fatal</span>(err)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></details>
<details>
<summary>Caddy config file <code>Caddyfile</code></summary>
<pre tabindex="0"><code>{
  local_certs
  http_port 8080
  https_port 8443
}

http://oldmidna:8080 {
  file_server browse
}

https://oldmidna:8443 {
  file_server browse
}
</code></pre></details>
<details>
<summary>nginx installation instructions</summary>
<pre tabindex="0"><code>mkdir -p ~/lab25
cd ~/lab25

wget https://nginx.org/download/nginx-1.21.6.tar.gz
tar tf nginx-1.21.6.tar.gz

wget https://www.openssl.org/source/openssl-3.0.3.tar.gz
tar xf openssl-3.0.3.tar.gz

cd nginx-1.21.6
./configure --with-http_ssl_module --with-http_v2_module --with-openssl=$HOME/lab25/openssl-3.0.3 --with-openssl-opt=enable-ktls
make -j8
cd objs
./nginx -c nginx.conf -p $HOME/lab25
</code></pre></details>
<details>
<summary>nginx config file <code>nginx.conf</code></summary>
<pre tabindex="0"><code>worker_processes  auto;

pid        logs/nginx.pid;

daemon off;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    access_log /home/michael/lab25/logs/access.log  combined;

    sendfile        on;
    sendfile_max_chunk 2m;

    keepalive_timeout  65;

    server {
        listen       8080;
        listen [::]:8080;
        server_name  localhost;

        root /srv/repo.distr1.org/;

        location / {
            index index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location /distri {
            autoindex on;
        }
    }

    server {
        listen 8443 ssl;
        listen [::]:8443 ssl;
        server_name localhost;

        ssl_certificate nginx-ecc-p256.pem;
        ssl_certificate_key nginx-ecc-p256.key;

        #ssl_conf_command Options KTLS;

        ssl_buffer_size 32768;
        ssl_protocols TLSv1.3;

        root /srv/repo.distr1.org/;

        location / {
            index index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location /distri {
            autoindex on;
        }
    }
}
</code></pre></details>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[My upgrade to 25 Gbit/s Fiber To The Home]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/"/>
    <id>https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/</id>
    <published>2022-04-23T16:00:00+02:00</published>
    <content type="html"><![CDATA[<p>My favorite internet service provider, init7, is rolling out faster speeds with their infrastructure upgrade. Last week, the point of presence (POP) that my apartment‚Äôs fiber connection terminates in was upgraded, so now I am enjoying a 25 Gbit/s fiber internet connection!</p>
<h2 id="firstinternet">My first internet connections</h2>
<p>(Feel free to skip right to the <a href="#announcement">25 Gbit/s announcement</a> section, but I figured this would be a good point to reflect on the last 20 years of internet connections for me!)</p>
<p>The first internet connection that I consciously used was a symmetric DSL connection that <a href="https://rent-a-guru.de">my dad (‚Ä† 2020)</a> shared between his home office and the rest of the house, which was around the year 2000. My dad was an early adopter and was connected to the internet well before then using dial up connections, but the SDSL connection in our second house was the first connection I remember using myself. It wasn‚Äôt particularly fast in terms of download speed ‚Äî I think it delivered 256 kbit/s or something along those lines.</p>
<p>I encountered two surprises with this internet connection. The first surprise was that the upload speed (also 256 kbit/s ‚Äî it was a symmetric connection) was faster than other people‚Äôs. At the time, even DSL connections with much higher download speeds were asymmetric (ADSL) and came with only 128 kbit/s upload. I learnt this while making first contact with file sharing: people kept asking me to stay online so that their transfers would complete more quickly.</p>
<p>The second surprise was the concept of a metered connection, specifically one where you pay more the more data you transfer. During the aforementioned file sharing experiments, it never crossed my mind that down- or uploading files could result in extra charges.</p>
<p>These two facts combined resulted in a 3000 ‚Ç¨ surprise bill for my dad!</p>
<p>Luckily, his approach to solve this problem wasn‚Äôt to restrict my internet usage, but rather to buy a cheap, separate ADSL flatrate line for the family (from Telekom, which he hated), while he kept the good SDSL metered line for his business.</p>
<p>I still vividly remember the first time that ADSL connection synchronized. It was a massive upgrade in download speed (768 kbit/s!), but a downgrade in upload speed (128 kbit/s). But, because it was a flatrate, it made possible new use cases for my dad, who would jump on this opportunity to download a number of CD images to upgrade the software of his SGI machines.</p>
<p>The different connection speeds and characteristics have always interested me, and I used several other connections over the years, all of which felt limiting. The ADSL connection at my parent‚Äôs place started at 1 Mbit/s, was upgraded first to 3 Mbit/s, then 6 Mbit/s, and eventually reached its limit at 16 Mbit/s. When I spent one semester in Ireland, I had a 9 Mbit/s ADSL connection, and then later in Z√ºrich I started out with a 15 Mbit/s ADSL connection.</p>
<p>All of these connections have always felt limiting, like peeking through the keyhole to see a rich world behind, but not being able to open the door. We‚Äôve had to set up (and tune) traffic shaping, and coordinate when large downloads were okay.</p>
<h2 id="firstfiber">My first fiber connection</h2>
<p>The dream was always to leave ADSL behind and get a fiber connection. The
advantages are numerous: lower latency (ADSL came with 40 ms at the time), much
higher bandwidth (possibly Gigabit/s?) and typically the connection was
established via ethernet (instead of PPPoE). Most importantly, once the fiber is
there, you can upgrade both ends to achieve higher speeds.</p>
<p>In Z√ºrich, I managed to get a fiber connection set up in my apartment after fighting bureaucracy for many months. The issue was that there was no permission slip on file at Swisscom. Either the owner of my apartment never signed it to begin with, or it got lost. This is not a state that the online fiber availability checker can represent, but once you know it, the fix is easy: just have Swisscom send out the form again, have the owner sign it, and a few weeks later, you can order!</p>
<p>One wrinkle was that availability was only fixed in the Swisscom checker, and it was unclear when EWZ or other providers would get an updated data dump. Hence, I ordered Swisscom fiber to get things moving as quick as possible, and figured I could switch to a different provider later.</p>
<p>Here‚Äôs a picture of when the electrician pulled the fiber from the building entry endpoint (BEP) in the basement into my flat, from March 2014:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2014-03-26-fiber-apartment.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2014-03-26-fiber-apartment_hu0f3ae1648cd06c8d0596b6712702fd43_157282_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2014-03-26-fiber-apartment_hu0f3ae1648cd06c8d0596b6712702fd43_157282_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2014-03-26-fiber-apartment_hu0f3ae1648cd06c8d0596b6712702fd43_157282_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="switching">Switching to fiber7</h2>
<p>Only two months after I first got my fiber connection, init7 launched their fiber7 offering, and I switched from Swisscom to fiber7 as quickly as I could.</p>
<p>The switch was worth it in every single dimension:</p>
<ul>
<li>Swisscom charged over 200 CHF per month for a 1 Gbit/s download, 100 Mbit/s upload fiber connection. fiber7 costs only 65 CHF per month and comes with a symmetric 1 Gbit/s connection. (Other providers had to follow, so now symmetric is standard.)</li>
<li>init7‚Äôs network performs much better than Swisscom‚Äôs: ping times dropped when I switched, and downloads are generally much faster. Note that this is with <em>the same physical fiber line</em>, so the difference is thanks to the numerous peerings that init7 maintains.</li>
<li>init7 gives you a static IPv6 prefix (if you want) for free, and even delegates reverse DNS to your servers of choice.</li>
<li>I enjoy init7‚Äôs unparalleled transparency. For example, check out <a href="https://blog.init7.net/de/rentabilitatsrechnung/">the blog post about cost calculation</a> if you‚Äôre ever curious if there could be a fiber7 POP in your area.</li>
</ul>
<p>I have been very happy with my fiber7 connection ever since. <a href="/posts/2014-09-05-fiber7_performance/">What I wrote in 2014 regarding its performance</a> remained true over the years ‚Äî downloads were always fast for me, latencies were low, outages were rare (and came with good explanations).</p>
<p>I switched hardware multiple times over the years:</p>
<ul>
<li>First, I started with the <a href="/posts/2014-08-11-fiber7_ubnt_erlite/">Ubiquiti EdgeRouter Lite</a> which could handle the full Gigabit line rate (the MikroTik router I originally ordered maxed out at about 500 Mbit/s!).</li>
<li>In 2017, I switched to the <a href="/posts/2017-03-25-turris-omnia/">Turris Omnia</a>, an open hardware, open source software router that comes with automated updates.</li>
<li>In July 2018, after my connectivity was broken due to an incompatibility between the DHCPv6 client on the Turris Omnia and fiber7, I started developing my own <a href="https://router7.org">router7</a> in Go, <a href="/posts/2017-08-19-golang_favorite/">my favorite programming language</a>, mostly for fun, but also as a proof of concept for some cool features I think routers should have. For example, you can retro-actively start up Wireshark and open up a live ring buffer of the last few hours of network configuration traffic.</li>
</ul>
<p>Notably, init7 encourages people to use their preferred router (<a href="https://fsfe.org/activities/routers/routers.en.html">Router
Freedom</a>).</p>
<h2 id="announcement">The 25 Gbit/s announcement</h2>
<p>Over the years, other Swiss internet providers such as Swisscom and Salt introduced 10 Gbit/s offerings, so an obvious question was when init7 would follow suit.</p>
<p>People who were following init7 closely already knew that an infrastructure upgrade was coming. In 2020, init7 CEO Fredy K√ºnzler <a href="https://twitter.com/kuenzler/status/1317841532813254659">disclosed that in 2021, init7 would start offering 10 Gbit/s</a>.</p>
<p>What nobody expected before init7 announced it on their seventh birthday, however, was that init7 started offering not only 10 Gbit/s (Fiber7-X), but also 25 Gbit/s connections (Fiber7-X2)! ü§Ø</p>
<p>This was init7‚Äôs announcement on Twitter:</p>
<blockquote class="twitter-tweet" data-dnt="true"><p lang="de" dir="ltr">F√ºnfundzwanzig ist das neue <a href="https://twitter.com/hashtag/Gigabit?src=hash&amp;ref_src=twsrc%5Etfw">#Gigabit</a>.<br><br>Sieben Jahre nach dem Launch von <a href="https://twitter.com/hashtag/Fiber7?src=hash&amp;ref_src=twsrc%5Etfw">#Fiber7</a> z√ºnden wir die n√§chste Stufe üöÄ - Fiber7-X (10Gbps) und Fiber7-X2 (25Gbps) - zum selben Preis: CHF 777 pro Jahr.<br><br>Unsere Medienmitteilung: <a href="https://t.co/UnnWTexcD0">https://t.co/UnnWTexcD0</a> <a href="https://twitter.com/hashtag/MaxFix?src=hash&amp;ref_src=twsrc%5Etfw">#MaxFix</a> <a href="https://twitter.com/hashtag/FTTH?src=hash&amp;ref_src=twsrc%5Etfw">#FTTH</a> <a href="https://twitter.com/hashtag/Glasfaser?src=hash&amp;ref_src=twsrc%5Etfw">#Glasfaser</a></p>&mdash; Init7 (AS13030) (@init7) <a href="https://twitter.com/init7/status/1397111796914327552?ref_src=twsrc%5Etfw">May 25, 2021</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>With this move, init7 has done it again: they introduced an offer that is better than anything else in the Swiss internet market, perhaps even world-wide!</p>
<p>One interesting aspect is init7‚Äôs so-called ¬´<a href="https://www.init7.net/en/internet/offer/">MaxFix principle</a>¬ª: maximum speed for a fixed price. No matter if you‚Äôre using 1 Gbit/s or 25 Gbit/s, you pay the same monthly fee. init7‚Äôs approach is to make the maximum bandwidth available to you, limited only by your physical connection. This is such a breath of fresh air compared to other ISPs that think rate-limiting customers to ridiculously low speeds is somehow acceptable on an FTTH offering üôÑ (<a href="https://twitter.com/kuenzler/status/1515062457731063815">recent example</a>).</p>
<p>If you‚Äôre curious about the infrastructure upgrade that enabled this change,
check out <a href="https://blog.init7.net/de/neue-infrastruktur/">init7‚Äôs blog post about their new POP
infrastructure</a>.</p>
<h2 id="usecase">What for? The use-case</h2>
<p>A common first reaction to fast network connections is the question: ‚ÄúFor what do you need so much bandwidth?‚Äù</p>
<p>Interestingly enough, I heard this question as recently as last year, in the context of a Gigabit internet connection! Some people can‚Äôt imagine using more than 100 Mbit/s. And sure, from a certain perspective, I get it ‚Äî that 100 Mbit/s connection will not be overloaded any time soon.</p>
<p>But, looking at when a line is overloaded is only one aspect to take into account when deciding how fast of a connection you want.</p>
<p>There is a lower limit where you notice your connection is slow. Back in 2014, a 2 Mbit/s connection was noticeably slow for regular web browsing. These days, even a 10 Mbit/s connection is noticeably slow when re-opening my browser and loading a few tabs in parallel.</p>
<p>So what should you get? A 100 Mbit/s line? 500 Mbit/s? 1000 Mbit/s? Personally, I like to not worry about it and just get the fastest line I can, to reduce any and all wait times as much as possible, whenever possible. It‚Äôs a freeing feeling! Here are a few specific examples:</p>
<ul>
<li>If I have to wait only <a href="https://twitter.com/zekjur/status/1494569749195468813">17 minutes</a> to download a PS5 game, that can make the difference between an evening waiting in frustration, or playing the title I‚Äôve been waiting for.</li>
<li>If I can run a daily backup (over the internet) of all servers I care about without worrying that the transfers interfere with my work video calls, that gives me peace of mind.</li>
<li>If I can transfer a Debian Code Search index to my computer for debugging when needed, that might make the difference between being able to use the limited spare time I have to debug or improve Debian Code Search, or having to postpone that improvement until I find more time.</li>
</ul>
<p>Aside from my distaste for waiting, a fast and reliable fiber connection enables self-hosting. In particular for my <a href="https://distr1.org/">distri Linux</a> project where I explore fast package installation, it‚Äôs very appealing to connect it to the internet on as fast a line as possible. I want to optimize all the parts: software architecture and implementation, hardware, and network connectivity. But, for my hobby project budget, getting even a 10 Gbit/s line at a server hoster is too expensive, let alone a 25 Gbit/s line!</p>
<p>Lastly, even if there isn‚Äôt really a <em>need</em> to have such a fast connection, I hope you can understand that after spending so many years of my life limited by slow connections, that I‚Äôll happily <em>take the opportunity</em> of a faster connection whenever I can. Especially at no additional monthly cost!</p>
<h2 id="gettingready">Getting ready</h2>
<p>Right after the announcement dropped, I wanted to prepare my side of the connection and therefore ordered a MikroTik CCR2004, the only router that init7 lists as compatible. I <a href="/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/">returned the MikroTik CCR2004 shortly afterwards</a>, mostly because of its annoying fan regulation (spins up to top speed for about 1 minute every hour or so), and also because MikroTik seems to have made no progress at all since I last used their products almost 10 years ago. Table-stakes features such as DNS resolution for hostnames within the local network are still not included!</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/mikrotik-ccr2004.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_600x0_resize_q75_box.jpg"
  
  width="600"
  height="347"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>I expect that more and more embedded devices with SFP28 slots (like the MikroTik CCR2004) will become available over the next few years (hopefully with better fan control!), but at the moment, the selection seems to be rather small.</p>
<p>For my router, I instead went with a <a href="/posts/2021-07-10-linux-25gbit-internet-router-pc-build/">custom PC build</a>. Having more space available means I can run larger, slow-spinning fans that are not as loud. Plugging in high-end Intel network cards (2 √ó 25 Gbit/s, and 4 √ó 10 Gbit/s on the other one) turns a PC into a 25 Gbit/s capable router.</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-06-27-router25.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-06-27-router25_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-06-27-router25_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-06-27-router25_hu1fe795dd8828eccf339de1acf31abbd0_2106743_600x0_resize_q75_box.jpg"
  
  width="600"
  height="607"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>With my equipment sorted out, I figured it was time to actually place the order. I wasn‚Äôt in a hurry to order, because it was clear that it would be months before my POP could be upgraded. But, it can‚Äôt hurt to register my interest (just in case it influences the POP upgrade plan). Shortly after, I got back this email from init7 where they promised to send me the SFP module via post:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-16-confirmation.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-16-confirmation_hu7177e23638c82c254cf4ef8f0c721783_131592_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-16-confirmation_hu7177e23638c82c254cf4ef8f0c721783_131592_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-16-confirmation_hu7177e23638c82c254cf4ef8f0c721783_131592_600x0_resize_q75_box.jpg"
  
  width="600"
  height="338"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>And sure enough, a few days later, I received the SFP28 module in the mail:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-19-sfp-mail.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-19-sfp-mail_hu2dfb7addab9232f9b7fcfb62cf14b878_1675905_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-19-sfp-mail_hu2dfb7addab9232f9b7fcfb62cf14b878_1675905_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-19-sfp-mail_hu2dfb7addab9232f9b7fcfb62cf14b878_1675905_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>With my router build, and the SFP28 module, I had everything I needed for my side of the connection.</p>
<p>The other side of the connection was originally planned to be upgraded in fall 2021, but <a href="https://twitter.com/init7/status/1403287499175235584">the global supply shortage imposed various delays on the schedule</a>.</p>
<p>Eventually, the <a href="https://www.init7.net/en/infrastructure/fiber7-pops/">fiber7 POP list</a> showed an upgrade date of April 2022 for my POP, and that turned out to be correct.</p>
<h2 id="upgrade">The night of the upgrade</h2>
<p>I had read <a href="https://ipng.ch/s/articles/2021/08/28/fiber7-x.html">Pim‚Äôs blog post on the upgrade of the 1790BRE POP in Br√ºttisellen</a>, which contains a lot of super interesting details, so definitely check that one out, too!</p>
<p>Being able to plug in the SFP module into the new POP infrastructure yourself (like Pim did) sounded super cool to me, so I decided to reach out, and init7 actually agreed to let me stop by to plug in ‚Äúmy‚Äù fiber and SFP module!</p>
<p>Giddy with excitement, I left my place at just before 23:00 for a short walk to the POP building, which I had seen many times before, but never from the inside.</p>
<p><a href="https://twitter.com/patte8">Patrick</a>, the init7 engineer met me in front of the building and explained ‚ÄúHey! You wrote my <a href="https://i3wm.org/">window manager</a>!‚Äù ‚Äî what a coincidence :-). Luckily I had packed some i3 stickers that I could hand him as a small thank you.</p>
<p>Inside, I met the other init7 employee working on this upgrade. Pascal, init7‚Äôs CTO, was coordinating everything remotely.</p>
<p>Standing in front of init7‚Äôs rack, I spotted the old Cisco switch (at the bottom), and the new Cisco C9500-48Y4C switches that were already prepared (at the top). The SFP modules are for customers who decided to upgrade to 10 or 25 Gbit/s, whereas for the others, the old SFP modules would be re-used:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-12-pop-before.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-12-pop-before_hu7af45c05e7eaab656aeab8d5fe153c59_584743_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-12-pop-before_hu7af45c05e7eaab656aeab8d5fe153c59_584743_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-12-pop-before_hu7af45c05e7eaab656aeab8d5fe153c59_584743_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>We then spent the next hour pulling out fiber cables and SFP modules out of the old Cisco switch, and plugging them back into the new Cisco switch.</p>
<p>Just like the init7 engineer working with me (who is usually a software guy, too, he explained), I enjoy doing physical labor from time to time for variety. Especially with nice hardware like this, and when it‚Äôs for a good cause (faster internet)! It‚Äôs almost meditative, in a way, and I enjoyed the nice conversation we had while we were both moving the connections.</p>
<p>After completing about half of the upgrade (the top half of the old Cisco switch), I walked back to my place ‚Äî still blissfully smiling all the way ‚Äî to turn up my end of the connection while the others were still on site and could fix any mistakes.</p>
<p>After switching my <code>uplink0</code> network interface to the faster network card, it also took a full reboot of my router for some reason, but then it recognized the SFP28 module without trouble and successfully established a 25 Gbit/s link! üéâ ü•≥</p>
<p>I did a quick speed test to confirm and called it a night.</p>
<h2 id="speedtest">Speed tests / benchmarks</h2>
<p>Just like in the early days of Gigabit connections, my internet connection is
now faster than the connection of many servers. It‚Äôs a luxury problem to be
sure, but in case you‚Äôre curious how far a 25 Gbit/s connection gets you in the
internet, in this section I collected some speed test results.</p>
<h3 id="ookla-speedtestnet">Ookla speedtest.net</h3>
<p>speedtest.net (run by Ookla) is the best way to measure fast connections that I‚Äôm aware of.</p>
<p>Here is <a href="https://www.speedtest.net/result/c/ed97e48a-3655-4fc8-8e7f-4d18d48f10f5">my first 25 Gbit/s
speedtest</a>,
which was run using the <a href="https://speedtest.init7.net/">init7 speedtest server</a>:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-14-speedtest-ookla-featured.png"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-14-speedtest-ookla-featured_hu9a3b8a18687193b143064b34e61f7b8e_236916_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-14-speedtest-ookla-featured_hu9a3b8a18687193b143064b34e61f7b8e_236916_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-14-speedtest-ookla-featured_hu9a3b8a18687193b143064b34e61f7b8e_236916_600x0_resize_box_3.png"
  
  width="600"
  height="237"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>I also ran speedtests to all other servers that were listed for the broader
Z√ºrich area at the time, using the
<a href="https://hub.docker.com/r/tamasboros/ookla-speedtest">tamasboros/ookla-speedtest</a>
Docker image. As you can see, most speedtest servers are connected with a 10
Gbit/s port, and some (GGA Maur) even only with a 1 Gbit/s port:</p>
<table>
<thead>
<tr>
<th>Speedtest server</th>
<th>latency</th>
<th>download (mbps)</th>
<th>upload (mbps)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Init7 AG - Winterthur</td>
<td>1.45</td>
<td>23530.27</td>
<td>23031.24</td>
</tr>
<tr>
<td>fdcservers.net</td>
<td>18.15</td>
<td>9386.29</td>
<td>1262.92</td>
</tr>
<tr>
<td>GIB-Solutions AG - Schlieren</td>
<td>6.64</td>
<td>9154.12</td>
<td>2207.68</td>
</tr>
<tr>
<td>Monzoon Networks AG</td>
<td>0.74</td>
<td>8874.85</td>
<td>6427.66</td>
</tr>
<tr>
<td>Glattwerk AG</td>
<td>0.92</td>
<td>8719.04</td>
<td>4008.28</td>
</tr>
<tr>
<td>AltusHost B.V.</td>
<td>0.80</td>
<td>8373.34</td>
<td>8518.90</td>
</tr>
<tr>
<td>iWay AG - Zurich</td>
<td>2.13</td>
<td>8337.56</td>
<td>8194.89</td>
</tr>
<tr>
<td>Sunrise Communication AG</td>
<td>9.04</td>
<td>8279.60</td>
<td>3109.34</td>
</tr>
<tr>
<td>31173 Services AB</td>
<td>18.69</td>
<td>8279.75</td>
<td>1503.92</td>
</tr>
<tr>
<td>Wingo</td>
<td>4.25</td>
<td>6179.57</td>
<td>5248.36</td>
</tr>
<tr>
<td>Netrics Z√ºrich AG</td>
<td>0.74</td>
<td>7910.78</td>
<td>8770.19</td>
</tr>
<tr>
<td>Cloudflare - Zurich</td>
<td>1.14</td>
<td>7410.97</td>
<td>2218.88</td>
</tr>
<tr>
<td>Netprotect - Zurich</td>
<td>0.87</td>
<td>7034.62</td>
<td>8948.01</td>
</tr>
<tr>
<td>C41.ch - Zurich</td>
<td>9.90</td>
<td>6792.60</td>
<td>690.33</td>
</tr>
<tr>
<td>Goldenphone GmbH</td>
<td>18.91</td>
<td>3116.32</td>
<td>659.23</td>
</tr>
<tr>
<td>GGA Maur</td>
<td>0.99</td>
<td>940.24</td>
<td>941.24</td>
</tr>
</tbody>
</table>
<h3 id="linux-mirrors">Linux mirrors</h3>
<p>For a few popular Linux distributions, I went through the mirror list and tried
all servers in Switzerland and Germany. Only one or two would be able to deliver
files at more than 1 Gigabit/s. Other miror servers were either capped at 1
Gigabit/s, or wouldn‚Äôt even reach that (slow disks?).</p>
<p>Here are the fast ones:</p>
<ul>
<li><strong>Debian:</strong> <code>mirror1.infomaniak.com</code> and <code>mirror2.infomaniak.com</code></li>
<li><strong>Arch Linux:</strong> <code>mirror.puzzle.ch</code></li>
<li><strong>Fedora Linux:</strong> <code>mirrors.xtom.de</code></li>
<li><strong>Ubuntu Linux:</strong> <code>mirror.netcologne.de</code> and <code>ubuntu.ch.altushost.com</code></li>
</ul>
<h3 id="iperf3">iperf3</h3>
<p>Using <code>iperf3 -P 2 -c speedtest.init7.net</code>, iperf3 shows 23 Gbit/s:</p>
<pre tabindex="0"><code>[SUM]   0.00-10.00  sec  26.9 GBytes  23.1 Gbits/sec  597             sender
[SUM]   0.00-10.00  sec  26.9 GBytes  23.1 Gbits/sec                  receiver
</code></pre><p>It‚Äôs hard to find public iperf3 servers that are connected with a fast-enough
port. I could only find one that claims to be connected via a 40 Gbit/s port,
but it was unavailable when I wanted to test.</p>
<h3 id="interested-in-a-speed-test">Interested in a speed test?</h3>
<p>Do you have a ‚â• 10 Gbit/s line in Europe, too? Are you interested in a speed
test? Reach out to me and we can set something up.</p>
<h2 id="conclusion">Conclusion</h2>
<p>What an exciting time to be an init7 customer! I still can‚Äôt quite believe that
I now have a 25 Gbit/s connection in 2022, and it feels like I‚Äôm living 10 years
in the future.</p>
<p>Thank you to <a href="https://twitter.com/kuenzler">Fredy</a>,
<a href="https://twitter.com/spale75">Pascal</a>, <a href="https://twitter.com/patte8">Patrick</a>,
and all the other former and current init7 employees for showing how to run an
amazing Internet Service Provider. Thank you for letting me peek behind the
curtains, and keep up the good work! üí™</p>
<p>If you want to learn more, check out Pascal‚Äôs talk at DENOG:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/fmzst6I5LwQ" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="Wie wir unabsichtlich das schnellste residential Internet access gebaut haben - Pascal Gloor"></iframe>
</div>

]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Smart Home components üè†]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/"/>
    <id>https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/</id>
    <published>2022-03-19T14:51:20+01:00</published>
    <content type="html"><![CDATA[<p>I have tried a bunch of different Smart Home products over the last few years
and figured I would give an overview of which ones I liked, which ones I
disliked, and how I would go about selecting good Smart Home products to buy.</p>
<h2 id="smart-lights">Smart Lights</h2>
<p>To me, the primary advantage of Smart Lights is the flexibility in where you
place extra light switches, and the extra functions that become much easier with
Smart Lights.</p>
<p>For example, I have added an extra light switch in the bed and next to the
couch, without having to have an electrician tear up the walls to add more
wiring. An ‚Äúall-off‚Äù button is super handy at the end of the day or when
watching a movie.</p>
<p>Other attractive use-cases include controlling lights based on time of the day,
based on whether people are home, or based on a motion sensor.</p>
<p>I used the RGB color light bulb version of all of the below systems. In
practice, we typically don‚Äôt change the color much, but it is nice to be able to
adjust the color and brightness to something that fits the respective room. And,
every once in a while, scenes that use color are fun!</p>
<h3 id="tradfri">Moved away from: IKEA TR√ÖDFRI üëé</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4166.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4166_hu855bbe0a9c47ac557e5b09db74fa3b06_700735_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4166_hu855bbe0a9c47ac557e5b09db74fa3b06_700735_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4166_hu855bbe0a9c47ac557e5b09db74fa3b06_700735_600x0_resize_q75_box.jpg"
  
  width="600"
  height="600"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The first smart light system I used was IKEA TR√ÖDFRI. I figured as a system with
a large user base, they would be inclined to improve it over time, and
compatibility should be more likely than with other, smaller vendors.</p>
<p>Unfortunately the system is pretty much unchanged from when I first bought it
many years ago.</p>
<p>You can easily find documentation about the API for using the TR√ÖDFRI gateway
programmatically, but when I looked for available Go packages, I decided to
use COAP and DTLS myself back in 2019 for lack of an attractive Go package.</p>
<p>The <strong>light switches</strong> are good in terms of features, and easy to install: you
can just remove the old switch and glue the TR√ÖDFRI switch over the existing
switch.</p>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4620.JPG"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4620_hudd9dde466230b7da3c81dd3aa9f33f2d_584934_1200x0_resize_q75_box.JPG 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4620_hudd9dde466230b7da3c81dd3aa9f33f2d_584934_1800x0_resize_q75_box.JPG 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4620_hudd9dde466230b7da3c81dd3aa9f33f2d_584934_600x0_resize_q75_box.JPG"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4622.JPG"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4622_huacdef596d98276810695f10a2865fbf7_637307_1200x0_resize_q75_box.JPG 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4622_huacdef596d98276810695f10a2865fbf7_637307_1800x0_resize_q75_box.JPG 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4622_huacdef596d98276810695f10a2865fbf7_637307_600x0_resize_q75_box.JPG"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The downside of the light switches is that they are flimsy: because the switch
is magnetically held in place in its case, it can easily fall on the floor when
you bump against it.</p>
<p>Pairing the devices was always tricky for me. It got easier when I turned off
all other ZigBee devices in my apartment before doing anything with IKEA
devices.</p>
<p>At multiple points, the devices lost their pairing. It might have been when they
ran out of battery.</p>
<p>The <strong>battery lifetime</strong> of the light switches was very poor ‚Äî only about a year
on average. They use the CR2032 form factor, which my charger does not support,
so I couldn‚Äôt use rechargables.</p>
<p>Swapping out the batteries and re-pairing the system every year or so quickly
becomes tedious!</p>
<h3 id="shellybulb">Moved away from: Shelly Bulb üëé</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4164.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4164_hu855bbe0a9c47ac557e5b09db74fa3b06_944949_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4164_hu855bbe0a9c47ac557e5b09db74fa3b06_944949_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4164_hu855bbe0a9c47ac557e5b09db74fa3b06_944949_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>Because I also bought some <a href="#shelly1l">Shelly 1L smart relays</a>, I figured I‚Äôd
give the <a href="https://shelly.cloud/products/shelly-bulb-smart-home-automation-device/">Shelly
Bulb</a> a
try.</p>
<p>Instead of ZigBee, the Shelly Bulbs use WiFi. This makes them easy to get into
your home network and does not require a separate gateway.</p>
<p>At 2 bulbs per room+hallway, and 2 buttons each, that sums up to having 16 extra
devices in your WiFi network. This wasn‚Äôt a problem for me in practice, but
depending on how stable your WiFi network is, it might be a concern.</p>
<p>Notably, this also means your lights can‚Äôt be controlled while your WiFi is unavailable.</p>
<p>In terms of physical <strong>light switches</strong>, you‚Äôll need to use a separate product
such as the Shelly Button. This is the weakest point of the system. The latency
is noticeable, even when configuring a static IP address, which does make things
better, but still not good. The Shelly Button is extremely simple, so dimming
has to be emulated with double or triple-press actions.</p>
<p>Given that one typically interacts with this system multiple times a day via its
switches, I think it makes sense to chose a system that has good switches.</p>
<p>On the plus side, the Shelly Button uses a rechargable battery that can be
charged from a USB power bank, which is a concept I really like.</p>
<h3 id="hue">Philips Hue üëç</h3>
<p>After the Shelly Bulb, I figured I‚Äôd try Philips Hue. It‚Äôs by far the most
expensive system of the ones I have tried, but also by far the most polished and
user-friendly.</p>
<div style="max-width: 150px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4514.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4514_hu465888e0cd6ad3d33b69ac3fd7c0d8d4_1137438_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4514_hu465888e0cd6ad3d33b69ac3fd7c0d8d4_1137438_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4514_hu465888e0cd6ad3d33b69ac3fd7c0d8d4_1137438_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>People recommended the <a href="https://www.feller.ch/de/Produktangebot/Funktaster">Feller Smart Light
Control</a> switches, which use
energy harvesting (from you clicking them!) and hence don‚Äôt require a battery.</p>
<p>This makes it easy to place them anywhere, like next to the couch in the picture
on the left.</p>
<br style="clear: both">
<p>Feller recommends extending existing installations by buying the next-larger
mounting plate. Extending the box in the wall is not required, as no wires or
in-wall space are needed. Drilling new holes for extra screws is required for
stability, but that‚Äôs a lot more doable than extending the whole box. Here are
some pictures before, during and after the installation:</p>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3883.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3883_hu8c0865dc8466fdff9a77d98bdf88cd59_1645691_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3883_hu8c0865dc8466fdff9a77d98bdf88cd59_1645691_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3883_hu8c0865dc8466fdff9a77d98bdf88cd59_1645691_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4146.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4146_hua9f69e9404f3c1ad473f50d53fe232bd_1584661_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4146_hua9f69e9404f3c1ad473f50d53fe232bd_1584661_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4146_hua9f69e9404f3c1ad473f50d53fe232bd_1584661_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4513_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4513_featured_huefeda71fee31fb8bfc71d9a141c0606f_1702194_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4513_featured_huefeda71fee31fb8bfc71d9a141c0606f_1702194_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4513_featured_huefeda71fee31fb8bfc71d9a141c0606f_1702194_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<h3 id="shelly1l">Shelly 1L üëç</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4453.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4453_huf958f180f9b60d6df1711fc62ed8abfa_1239796_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4453_huf958f180f9b60d6df1711fc62ed8abfa_1239796_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4453_huf958f180f9b60d6df1711fc62ed8abfa_1239796_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The Shelly 1L is a very interesting device. It goes behind your existing device
into the wall and makes it smart!</p>
<p>This allows you to make smart any existing lights that can‚Äôt easily be replaced
by smart lights, for example a bathroom light built into the bathroom mirror
cabinet.</p>
<p>You can also make existing light switches smart if you like the ones you already
have and can‚Äôt exchange them.</p>
<p>Another use-case is to easily connect buttons or sensors into your network, for
example door bells or door sensors.</p>
<p>The Shelly 1L is special in that this specific model can be installed when all
you have is a live wire (i.e. wiring for a light switch).</p>
<p>One potential issue is that depending on the configuration and connected
device‚Äôs power usage, the Shelly might emit a slight hum noise. So, don‚Äôt
install one right next to your bed.</p>
<p>Another limitation is that while the Shelly does work with both, light
<strong>switches</strong> (changes state) and light <strong>buttons</strong> (generates an impulse), it
can only distinguish between short and long press events when you use a light
button. Newer light switches from Feller can be re-configured to function as a
button, but if your model is too old you might need to replace a light switch
with a button.</p>
<p>One weird issue I ran into was that after installing a new bathroom mirror
cabinet, the relay of the connected Shelly 1L would no longer function correctly
‚Äî the light just remained on, even when turning it off via the Shelly. I read on
the Shelly forum that this could be caused by running the Shelly upside-down,
and indeed, after turning it around, it started to work again!</p>
<h2 id="smart-heating">Smart Heating</h2>
<p>Smart Heating systems are often advertised to save cost. I wanted to try it out,
and was also interested in the temperature logging because my apartment is on
the more humid side and I wanted some data to optimize the situation.</p>
<h3 id="homematicheating">HomeMatic üòê</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3512.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3512_hu39bef23f314593ac5a570777d0269b05_1310266_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3512_hu39bef23f314593ac5a570777d0269b05_1310266_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3512_hu39bef23f314593ac5a570777d0269b05_1310266_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>I bought some HomeMatic temperature sensors and heating valve drives back
in 2017. The hardware feels solid and was easy enough to install.</p>
<p>One massive downside of the system was the poor software quality of their
Central Control Unit (CCU2). The web interface was super slow, looked very
dated, and the whole thing kept running out of memory every 2 weeks or so. It
was so bad that I <a href="/posts/2017-04-16-homematic-reimplementation/">re-implemented my own CCU in
Go</a>. I hear that by now, they
have a new and better Control Unit version, though.</p>
<p>So far, one valve drive has failed with error code F1; I replaced it with a new
one.</p>
<p>Turns out smart control of our heating does not seem to make any measurable
difference. The rooms feel the same as before. No money is saved because the
utility bill is divided equally among all tenants across the building (which
seems to be standard in Switzerland), not billed for individual usage.</p>
<p>So, overall, I would not install smart heating valve drives again. The
temperature sensors I still keep an eye on from time to time, but there are
cheaper options if you only need temperature!</p>
<h2 id="smart-lock">Smart Lock</h2>
<h3 id="nuki">Nuki üëç</h3>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4549.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4549_hu8716c73c1bc02c4025992cd5e8271b6a_1194122_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4549_hu8716c73c1bc02c4025992cd5e8271b6a_1194122_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4549_hu8716c73c1bc02c4025992cd5e8271b6a_1194122_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3691.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3691_hu5e11573d3decee60fb24009fdd50f085_1187917_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3691_hu5e11573d3decee60fb24009fdd50f085_1187917_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3691_hu5e11573d3decee60fb24009fdd50f085_1187917_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3484.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3484_hu6984d04b8d7e4c9d18665ea773d7a4fd_803023_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3484_hu6984d04b8d7e4c9d18665ea773d7a4fd_803023_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3484_hu6984d04b8d7e4c9d18665ea773d7a4fd_803023_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3780.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3780_hua8572cfd4bf6f6518e73ac8bea16411e_361388_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3780_hua8572cfd4bf6f6518e73ac8bea16411e_361388_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3780_hua8572cfd4bf6f6518e73ac8bea16411e_361388_600x0_resize_q75_box.jpg"
  
  width="600"
  height="603"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>During the pandemic, I was receiving packages at home and hence I was relying on
my door bell much more than usual. Hence, I was looking for a way to make it
smarter!</p>
<p>The first device I got was the <a href="https://nuki.io/en/opener/">Nuki Opener</a>, a
smart intercom system. It allows you to get notifications on your phone when the
doorbell is rung, and to unlock the door from your phone.</p>
<p>I got this device because it was specifically marketed as compatible with the
BTicino intercom system our house uses. Unfortunately, this turned out to <a href="/posts/2020-11-30-scs-processing-microcontroller/">be
incorrect</a>, so I ended up
<a href="/posts/2021-03-13-smart-intercom-backpack/">building a hardware-modified intercom
unit</a> that is connected to the Nuki
Opener in analogue mode.</p>
<p>Once it actually works, it‚Äôs a convenient system, and having your doorbell
generate desktop notifications with sound is just super useful when wearing
headphones! Strongly recommended.</p>
<p>As you can see on the pictures, I‚Äôm powering the Nuki Opener via USB. It
normally runs on batteries, but I want to minimize battery usage and swapping. A
built-in rechargeable battery like in the Shelly devices would be a neat
improvement to the Nuki Opener, so that the device could still work during power
outages!</p>
<p>After I had the Nuki Opener, I also added a <a href="https://nuki.io/en/smart-lock/">Nuki Smart
Lock</a> so that we can not only open the house
front door, but also the apartment door itself in case one of us forgets their
key.</p>
<p>The Nuki Smart Lock was easy to install and works great. It also shows with an
elegant LED ring whether the door is currently locked or not, which I find
handy.</p>
<h2 id="motion-sensors">Motion Sensors</h2>
<p>Not having to turn on lights myself is something I find convenient, in
particular in the kitchen, but also in the bathroom. When carrying plates or
glasses into the kitchen, it‚Äôs nice to have the lights turn on while my hands
are full.</p>
<h3 id="fellermotion">Moved away from: Feller Motion Sensors üòê</h3>
<p>First I tried Feller‚Äôs Motion Sensors, because they physically fit well into the
existing Feller light switch installation:</p>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4311.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4311_hu7e0f6fdb96f9d7ea63815e1348871123_1546321_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4311_hu7e0f6fdb96f9d7ea63815e1348871123_1546321_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4311_hu7e0f6fdb96f9d7ea63815e1348871123_1546321_600x0_resize_q75_box.jpg"
  
  width="600"
  height="600"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4407.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4407_hu855bbe0a9c47ac557e5b09db74fa3b06_1459219_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4407_hu855bbe0a9c47ac557e5b09db74fa3b06_1459219_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4407_hu855bbe0a9c47ac557e5b09db74fa3b06_1459219_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>But, their limitations made me move away from them quickly: while you can change
one or two basic settings, you cannot, for example, disable the motion sensor
after a certain time of day, or manually disable it for a certain time period.</p>
<p>Also, because the device is installed in a fixed position (determined by where
your light switch is), it isn‚Äôt necessarily in the best place to spot all the
motion you want to detect.</p>
<h3 id="shellymotion">Shelly Motion üëç</h3>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4552.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4552_hu933633299932c7881ce3078b048a8244_673846_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4552_hu933633299932c7881ce3078b048a8244_673846_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4552_hu933633299932c7881ce3078b048a8244_673846_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4550.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4550_hu8f211d5b79bcf88b6331bc02c9263d11_939504_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4550_hu8f211d5b79bcf88b6331bc02c9263d11_939504_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4550_hu8f211d5b79bcf88b6331bc02c9263d11_939504_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/shellymotion-webinterface.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/shellymotion-webinterface_hua3cd54dd2ab44c84582dd78906db0e26_937115_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/shellymotion-webinterface_hua3cd54dd2ab44c84582dd78906db0e26_937115_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/shellymotion-webinterface_hua3cd54dd2ab44c84582dd78906db0e26_937115_600x0_resize_q75_box.jpg"
  
  width="600"
  height="632"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The <a href="https://shelly.cloud/shelly-motion-smart-home-automation-sensor/">Shelly
Motion</a> Sensor
seems like a good motion sensor to me! It has a number of useful settings and
can easily trigger any REST API endpoint or can be used via MQTT.</p>
<p>Like with the Shelly Button, this device has a built-in rechargeable battery
that can be charged via USB. Depending on the location of the sensor, you can
either attach a USB powerbank once a year, or remove the sensor from its fixture
and charge it elsewhere.</p>
<p>The positioning of the Shelly Motion can either be easy (as it was in my
kitchen) or tricky to get right (in my bathroom). I don‚Äôt know if other motion
sensors are better in terms of range.</p>
<p>One thing to note is that the Shelly Motion only reports state changes (motion
start or motion end), and no continuous events while motion is detected.</p>
<p>For my kitchen, <a href="https://github.com/stapelberg/regelwerk/blob/8693602b899ae3bd682bea3b08289de782791483/motion.go#L94-L128">my regelwerk
code</a>
directly translates motion on/off into light on/off commands (to Philips Hue and
Shelly 1L), with the exception that a long-press turns off all motion control
for the next 10 minutes. The granularity of the Shelly Motion is to report after
no motion for 1 minute, which works well for me for the kitchen.</p>
<p>For my bathroom, I don‚Äôt want the lights to immediately turn off when no motion
is detected anymore, to err on the side of not turning off the light while
people are still using the bathroom and are just not seen by the motion
sensor. To implement that, I found that using the Shelly 1L‚Äôs timer
functionality works best. So, <a href="https://github.com/stapelberg/regelwerk/blob/511198c89bf27bb39b0ba03bd33fe44a1ab4b182/motion.go#L48-L104">in my
configuration</a>,
motion on means lights on, and motion off means lights on for 10 minutes, then
off. Turning off the light manually disables that logic.</p>
<p>Note that the Shelly Motion should really be mounted in the orientation
recommended by the manual. When the motion sensor lays on the side (or is upside
down), detection is much poorer.</p>
<h2 id="smart-power-plug">Smart Power Plug</h2>
<p>A smart plug is an easy way to turn off a power-hungry device while you‚Äôre away,
to make a lamp smart, or to power on a connected device like a kettle to boil
water for making a tea.</p>
<p>My current use-cases are saving power for the stereo sound system connected to
my PC, and saving power by <a href="https://github.com/gokrazy/bakery/commit/a32e6d0a12693d70ce0544617ff3e391480c4b5a">powering up the
devices</a>
in my <a href="https://gokrazy.org/platforms/">gokrazy Continuous Integration test
environment</a> on-demand only.</p>
<p>While there are tons of vendors selling smart plugs, the selection narrows
considerably when you look for one with a <a href="https://en.wikipedia.org/wiki/SN_441011">Swiss power
plug</a>.</p>
<h3 id="homematicplug">HomeMatic üëé</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4548.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4548_hu18e4c1844f7b5756b8bbfa0d35983f2a_673862_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4548_hu18e4c1844f7b5756b8bbfa0d35983f2a_673862_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4548_hu18e4c1844f7b5756b8bbfa0d35983f2a_673862_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The HomeMatic smart plug is expensive (55 CHF) and super bulky! As you can see,
even if you connect it at the very end of a power strip, it still blocks the
adjacent connector.</p>
<p>Worse: the way it‚Äôs built (bulky side pointing away from the earth pin), I can‚Äôt
even insert it into 2 of the 3 power strips you see on the picture.</p>
<p>Somehow, even though it‚Äôs so bulky, the device feels flimsy at the same
time. I‚Äôm never 100% sure if the plug is inserted fully and correctly, and it‚Äôs
easy to accidentally turn off power when bumping against the smart plug with
your foot.</p>
<p>Because it‚Äôs a HomeMatic device, you need a working Central Control Unit (CCU)
to control it programmatically. Conceptually, I prefer smart plugs that can be
used with a REST or MQTT API.</p>
<p>The only upside of this smart plug is that it can measure power. I occasionally
use it for that.</p>
<h3 id="sonoff">Sonoff üòê</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_1345.JPG"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_1345_hu8426f71a38f8a1ccbda71f33f5a21248_731883_1200x0_resize_q75_box.JPG 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_1345_hu8426f71a38f8a1ccbda71f33f5a21248_731883_1800x0_resize_q75_box.JPG 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_1345_hu8426f71a38f8a1ccbda71f33f5a21248_731883_600x0_resize_q75_box.JPG"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The Sonoff S26 are much cheaper (‚âà12 USD when I bought mine) and come in a Swiss
plug variant. Contrary to the HomeMatic ones, the Sonoff smart plugs are built
‚Äúthe right way around‚Äù, meaning I can plug them into many Swiss power
strips. Unfortunately, they also block adjacent connectors, but at least not as
many as the HomeMatic.</p>
<p>The <a href="https://tasmota.github.io/docs/">Open Source firmware Tasmota</a> supports the
Sonoff S26, but flashing them is a painful experience. You can‚Äôt do it over the
air; you need to access rather small serial console pins inside the device.</p>
<p>Once you have them flashed with Tasmota, the devices work great.</p>
<p>One feature they lack is power measurement.</p>
<p>I would love to find a smart plug with a Swiss plug, that supports power
measurement, and that is compatible with Tasmota (or builtin MQTT support), but
until that product comes along, the Sonoff S26 are what I‚Äôm going to use.</p>
<h2 id="architecture-as-of-march-2022">Architecture as of March 2022</h2>
<p>Here is an architecture diagram of the devices I‚Äôm currently using:</p>




<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/2022-03-06-smart-home-architecture.svg"><img
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/2022-03-06-smart-home-architecture.svg"
  
  style="border: 1px solid #000; margin-right: 1rem"
  
  loading="lazy"></a>


<p>To tie these different systems together, I use a Raspberry Pi running
<a href="https://gokrazy.org/">gokrazy</a>, which in turn runs my
<a href="/posts/2021-01-10-mqtt-introduction/">regelwerk</a> program. regelwerk only talks
to MQTT, so all the different devices are connected to MQTT using small adapter
programs such as my <a href="https://github.com/stapelberg/hue2mqtt">hue2mqtt</a> or
<a href="https://github.com/stapelberg/shelly2mqtt">shelly2mqtt</a>.</p>
<p>A more off-the-shelf solution would be to use <a href="https://nodered.org/">Node-RED</a>,
if you want to do a little programming, or <a href="https://www.home-assistant.io/">Home
Assistant</a> if you want to do barely any
programming.</p>
<h2 id="my-strategy-for-selecting-components">My strategy for selecting components</h2>
<p>I don‚Äôt look for one vendor or one system that has components for
everything. Instead, I chose the leading vendor in each domain. Compatibility
between systems is generally poor, so I try to keep my compatibility
requirements to a minimum.</p>
<p>To programmatically interact with the devices, the best bet are devices that are
designed to be developer-friendly (e.g. Shelly devices support MQTT) or at least
have an official API with modules in my favorite programming language
(e.g. Philips Hue). In terms of API, I expect to talk to a gateway device in my
local network ‚Äî I tried talking e.g. Zigbee directly but found it inconvenient
due to poor software support, sparse documentation and strange compatibility
issues.</p>
<p>Direct device-to-device communication is nice from a reliability perspective,
but on some battery-powered systems you pay for it with reduced battery
runtime. For example, when using multiple light switches for the same room with
IKEA TR√ÖDFRI, you pair one to the other, which also makes all signals go through
it.</p>
<p>If possible, I select devices that have an open firmware available. Ideally, I
can keep using the vendor‚Äôs firmware, but if the vendor unexpectedly goes out of
business, it‚Äôs handy to have an alternative firmware available. Also, if the
devices require a cloud service to function, using open firmware typically
allows using them in your local network.</p>
<p>I have come to avoid WiFi where latency is important, e.g. between light
switches and lights.</p>
<p>I stopped looking at the price too much and instead look at the user
experience. Smart home is about comfort and convenience, and if a product
doesn‚Äôt delight in daily usage, why bother with it? Targeting the high end of
mid-range devices seems like the sweet spot to me. Avoid anything more expensive
than that, though ‚Äî established players often re-brand third-party solutions and
you only pay for the company name, not quality.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[My 2022 high-end Linux PC üêß]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/"/>
    <id>https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/</id>
    <published>2022-01-15T16:00:00+01:00</published>
    <content type="html"><![CDATA[<p>I finally managed to get my hands on some DDR5 RAM to complete my Intel i9-12900
high-end PC build! This article contains the exact component list if you‚Äôre
interested in doing a similar build.</p>















<a href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_600x0_resize_q75_box.jpg"
  
  width="600"
  height="521"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Usually, I try to stay on the latest Intel CPU generation when possible. But I
decided to skip the i9-10900 (<a href="https://en.wikipedia.org/wiki/Comet_Lake_(microprocessor)">Comet
Lake</a>) and i9-11900
(<a href="https://en.wikipedia.org/wiki/Rocket_Lake">Rocket Lake</a>) series entirely,
largely because they were still stuck on Intel‚Äôs 14nm manufacturing process and
didn‚Äôt seem to offer much improvement.</p>
<p>The new i9-12900 (<a href="https://en.wikipedia.org/wiki/Alder_Lake_(microprocessor)">Alder
Lake</a>) delivered good
benchmark results and is manufactured with the much newer Intel 7 process, so I
was curious: would an upgrade be worth it?</p>
<h2 id="components">Components</h2>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>196 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/fractal-define-7-solid-midi-tower-pc-gehaeuse-12757904">Fractal Define 7 Solid (Midi Tower)</a></td>
</tr>
<tr>
<td>89 CHF</td>
<td>Power Supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm750x-2018-750-w-pc-netzteil-7678690?supplier=406802">Corsair RM750x 2018 (750 W)</a></td>
</tr>
<tr>
<td>293 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asus-prime-z690-a-lga-1700-intel-z690-ddr5-atx-mainboard-17252893?supplier=406802">ASUS PRIME Z690-A (LGA1700, ATX)</a></td>
</tr>
<tr>
<td>646 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/intel-core-i9-12900k-lga-1700-320-ghz-16-core-prozessor-16552823?supplier=406802">Intel Core i9-12900K</a></td>
</tr>
<tr>
<td>113 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-u12a-1580-cm-cpu-kuehler-10847172?supplier=406802">Noctua NH-U12A</a></td>
</tr>
<tr>
<td>30 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140-mm-1-x-pc-luefter-657800?supplier=406802">Noctua NF-A14 PWM (140 m)</a></td>
</tr>
<tr>
<td>770 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-vengeance-2-x-16gb-ddr5-4800-dimm-288-pin-ram-17713383?supplier=406802">Corsair Vengeance CMK32GX5M2A4800C40 (64 GB)</a></td>
</tr>
<tr>
<td>408 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/wd-black-sn850-retail-2000-gb-m2-2280-ssd-15720645?supplier=406802">WD Black SN850 (2 TB)</a></td>
</tr>
<tr>
<td>605 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/gigabyte-aorus-geforce-rtx-2070-xtreme-8-gb-grafikkarte-9896232">GeForce RTX 2070</a></td>
</tr>
<tr>
<td>65 EUR</td>
<td>Network</td>
<td>Mellanox ConnectX-3 (10 Gbit/s)</td>
</tr>
</tbody>
</table>
<h2 id="fan-compatibility">Fan compatibility</h2>
<p>The Noctua NH-U12A CPU fan required an adapter (‚ÄúNoctua NM-i17xx-MP78 SecuFirm2
mounting kit‚Äù) to be compatible with the Intel LGA1700 socket. I requested the
adapter on Noctua‚Äôs Website on November 5th, and it arrived November 26th.</p>
<h2 id="fractal-define-7-case">Fractal Define 7 case</h2>
<p>Anytime you need to access a PC‚Äôs components, you‚Äôll deal with its
case. Especially for a self-built PC, the case you chose determines how easy it
is to assemble and later modify your PC.</p>
<p>Over the years, I have come to value the following aspects of a PC case:</p>
<ol>
<li>No extra effort should be required for the case to be as quiet as possible.</li>
<li>The case should not have any sharp corners (no danger of injury!).</li>
<li>The case should provide just enough space for easy access to your components.</li>
<li>The more support the case has to encourage clean cable routing, the better.</li>
<li>USB3 front panel headers should be included.</li>
</ol>
<p>I have been using Fractal cases for the past few years and came to generally
prefer them over other brands because of their good build quality.</p>
<p>Hence I‚Äôm happy to report that the Fractal Define 7 (their latest generation at
the time of writing) ticks all of the above boxes!</p>
<p>The case and power supply work well together in terms of cable management. It was a joy to route the cables.</p>
<p>It‚Äôs very easy to open the case doors (they clip in place), or remove the front
panel. This is definitely the best PC case I have seen so far in terms of quick
and easy access.</p>
<p>Here‚Äôs how clean the inside looks. Most cables are routed with very short ways
to the back, where the case offers plenty of convenient cable guides:</p>















<a href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>You might also find this YouTube video review of the Fractal Define 7 interesting:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/XeTxUjUrw4A" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="slow-boot">Slow boot</h2>
<p>When I first powered everything on, I waited for a while, but never saw any
picture on my monitor. The PC eventually rebooted, multiple times in a row. I
took that as a bad sign and turned it off to prevent further damage.</p>
<p>Turns out I should have just waited until it would eventually start up!</p>
<p>It took multiple minutes for the machine to eventually start. I‚Äôm not 100% sure
what the cause is for that, but I heard in a Linus Tech Tips YouTube video that
DDR5 requires time-consuming memory testing when powering up with a fresh memory
configuration, so that seems plausible.</p>
<p>In any case, my advice is: be patient when waiting for this machine to start up.</p>
<h2 id="ddr5-availability-as-of-late-2021">DDR5 availability as of Late 2021</h2>
<p>I originally ordered all components on November 5th 2021. It took a while for
the mainboard to become available, but almost everything shipped on November
15th ‚Äî except for the DDR5 RAM.</p>
<p>Until Late December, I was not able to find any available DDR5 RAM in Switzerland.</p>
<p>The shortage is so pronounced that some YouTubers recommend going with DDR4
mainboards for now, which manufacturers are scrambling to introduce in their
lineups. I did really want to squeeze out the last few extra percent in
memory-intensive workloads, so I decided to wait.</p>
<h2 id="copying-the-data">Copying the data</h2>
<p>Where possible, I like only changing one thing at a time. In this case, I wanted
to change the hardware, but keep using my Linux installation as-is.</p>
<p>To copy my Linux installation over, I plugged my old M.2 SSD into the new
machine, and then started a live Linux environment, so that neither my old nor
my new SSD were in use. My preferred live Linux is <a href="https://grml.org/">grml (current version:
2021.07)</a>, which I copied to a USB memory stick and booted
the machine from it.</p>
<p>In the grml live Linux environment, I copied the full M.2 SSD contents from old
to new:</p>
<pre tabindex="0"><code>grml# dd \
  if=/dev/disk/by-id/nvme-Force_MP600_&lt;TAB&gt; \
  of=/dev/disk/by-id/nvme-WD_BLACK_SN850_2TB_&lt;TAB&gt; \
  bs=5M \
  status=progress
</code></pre><p>For some reason, <a href="https://twitter.com/zekjur/status/1476825858681802754">the transfer was super
slow</a>. Last time I
transferred the contents of a Samsung 960 Pro to a Samsung 970 Pro, it took only
16 minutes. But this time, copying the Force MP600 to a WD Black SN850 took many
hours!</p>
<p>Once the data was transferred, I unplugged the old M.2 SSD and booted the
system.</p>
<p>The hostname remains the same, and the network addresses are tied to the MAC
address of the network card that I moved to the new machine. So, I didn‚Äôt have
to adjust anything in the new machine and could just boot into my usual
environment.</p>
<h2 id="uefi-settings-enable-xmp-for-4800-mhz-ram">UEFI settings: enable XMP for 4800 MHz RAM</h2>
<p>By default, the memory uses 4000 MHz instead of the 4800 MHz advertised on the
box.</p>
<p>I figured it should be safe to try out the XMP option because it is shown as
part of ASUS‚Äôs ‚ÄúEZ Mode‚Äù welcome page in the UEFI setup.</p>
<p>So far, I have not noticed any issues when running the system with XMP enabled.</p>
<p><strong>Update February 2022</strong>: I have experienced weird crashes that seem to have
gone away after disabling XMP. I‚Äôll leave it disabled for now.</p>
<h2 id="uefifan">UEFI settings: fan speed</h2>
<p>The Fractal Define case comes with a built-in fan controller.</p>
<p>I recommend not using the Fractal fan controller, as you can‚Äôt control it from
Linux!</p>
<p>Instead, I have plugged my fans into the mainboard directly.</p>
<p>In the UEFI setup, I have configured all fan speeds to use the ‚Äúsilent‚Äù profile.</p>
<h2 id="asus-prime-z690-a-sensors-and-fan-control">ASUS PRIME Z690-A: sensors and fan control</h2>
<p>With Linux 5.15.11, some fan speeds and temperature are displayed, but oddly
enough it only shows 2 out of the 3 fans I have connected:</p>
<pre tabindex="0"><code>% sudo sensors
nct6798-isa-0290
Adapter: ISA adapter
[‚Ä¶]
fan1:                        0 RPM  (min =    0 RPM)
fan2:                      944 RPM  (min =    0 RPM)
fan3:                        0 RPM  (min =    0 RPM)
fan4:                      625 RPM  (min =    0 RPM)
fan5:                        0 RPM  (min =    0 RPM)
fan6:                        0 RPM  (min =    0 RPM)
fan7:                        0 RPM  (min =    0 RPM)
SYSTIN:                    +35.0¬∞C  (high = +80.0¬∞C, hyst = +75.0¬∞C)  sensor = thermistor
CPUTIN:                    +40.0¬∞C  (high = +80.0¬∞C, hyst = +75.0¬∞C)  sensor = thermistor
AUXTIN0:                  -128.0¬∞C    sensor = thermistor
AUXTIN1:                   +24.0¬∞C    sensor = thermistor
AUXTIN2:                   +28.0¬∞C    sensor = thermistor
AUXTIN3:                   +31.0¬∞C    sensor = thermistor
PECI Agent 0 Calibration:  +40.0¬∞C
[‚Ä¶]
</code></pre><p>Unfortunately, writing to the <code>/sys/class/hwmon/hwmon2/pwm2</code> file does not seem
to change its value, so I don‚Äôt think one can control the fans via PWM from
Linux (yet?).</p>
<p><a href="#uefifan">I have set all fans to silent in the UEFI setup</a>, which is sufficient
to not notice any noise.</p>
<h2 id="performance-comparison-i9-9900k-vs-i9-12900k">Performance comparison: i9-9900K vs. i9-12900K</h2>
<p>After cloning my old disk to the new disk, I took the opportunity to run a few
time-intensive tasks from my day-to-day that I could remember.</p>
<p>On both machines, I configured the CPU governor to <code>performance</code> for stable
results.</p>
<p>Keep in mind that I‚Äôm comparing two unique PC builds as they are (not under
controlled and fair conditions), so the results might not necessarily be
representative. For example, it seems like the SSD performance in the old
machine was heavily degraded due to a <a href="https://twitter.com/zekjur/status/1476950514386538497">incorrect TRIM
configuration</a>.</p>
<table>
<thead>
<tr>
<th>name</th>
<th>old</th>
<th>new</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/golang/go/tree/go1.18beta1">build Go 1.18beta1 (src/make.bash)</a></td>
<td>‚âà45s</td>
<td>‚âà29s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/rsync/tree/d1c307d7a3db853abb5b39de3a206303c4936f4f">gokrazy/rsync tests</a></td>
<td>‚âà8s</td>
<td>‚âà5s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/gokrazy/blob/678bb92c2ee058df4b157fca53c486922951f2c8/integration/uefiboot/uefiboot_test.go">gokrazy UEFI test</a></td>
<td>‚âà9s</td>
<td>‚âà8s</td>
</tr>
<tr>
<td><a href="https://github.com/distr1/distri/blob/1c7fc9ad7e93e1de8fb85d5c4f0ca59f1f8c15e2/Makefile">distri cryptimage (cold cache)</a></td>
<td>‚âà143s</td>
<td>‚âà18s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/kernel/tree/30167e68a3989313498679b9be05c824d956c4d4">gokrazy Linux compilation</a></td>
<td>215s</td>
<td>109s</td>
</tr>
</tbody>
</table>
<p>As we can see, in all of my tests, the new PC achieves measurably better times!
üéâ</p>
<h2 id="conclusion">Conclusion</h2>
<p>Not only in the benchmarks above, but also subjectively, the new machine feels
fast!</p>
<p>Already in the first few days of usage, I notice how time-consuming tasks such
as <a href="https://github.com/gokrazy/kernel/commit/5aff50c59bbc350a034cf3b78f484d35d445c7e0">tracking down a Linux kernel
issue</a>
(requires multiple Linux kernel builds), are a little less terrible thanks to
the faster machine :)</p>
<p>The Fractal Define 7 case is great and will likely serve as a good base for
upgrades over the next couple of years, just like its predecessor (but perhaps
even longer).</p>
<p>As far as I can tell, the machine works well and is compatible with Linux.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Fixing the Logitech MX Ergo Trackball mouse buttons]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/"/>
    <id>https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/</id>
    <published>2021-12-05T13:23:20+01:00</published>
    <content type="html"><![CDATA[<p>The mouse I use daily for many hours is Logitech‚Äôs <a href="https://www.logitech.com/en-ch/products/mice/mx-ergo-wireless-trackball-mouse.910-005179.html">MX Ergo
trackball</a>
and I generally consider it the best trackball one can currently buy.</p>
<p>Unfortunately, after only a year or two of usage, the trackball‚Äôs mouse buttons
no longer function correctly. When clicking and dragging, they won‚Äôt hold down
the selection reliably.</p>
<p>The mouse buttons first broke in my private trackball, and later also the ones
in my work one!</p>
<p>After just buying a new one when the mouse buttons broke the first time, I
figured this time I wanted to try and fix the trackball myself.</p>















<a href="https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/logitech-mx-ergo-kailh.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/logitech-mx-ergo-kailh_hu25aa8b29bbc8203032e4b64c28800cde_1242226_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/logitech-mx-ergo-kailh_hu25aa8b29bbc8203032e4b64c28800cde_1242226_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/logitech-mx-ergo-kailh_hu25aa8b29bbc8203032e4b64c28800cde_1242226_600x0_resize_q75_box.jpg"
  alt="Logitech MX Ergo and Kailh replacement switches" title="Logitech MX Ergo and Kailh replacement switches"
  width="600"
  height="338"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="video-recording">Video recording</h2>
<p>In this 27 minute video, you can look over my shoulder as I swap out the
worn-out Omron mouse buttons with Kailh replacement mouse buttons:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/TBaYEFkk2RU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>The basic steps are:</p>
<ol>
<li>Unscrew the outside Torx screws.</li>
<li>Unscrew the inside Philips screws.</li>
<li>Remove the PCB from the case and fix it securely for desoldering.</li>
<li>Desolder the switch: heat up all 3 pads as simultaneously as possible (add
more solder ‚Üí more flux!), then gently push down on the pins to make the
switch fall out.</li>
<li>Cleanly remove all remaining solder, then insert the replacement switch,
double-check you aligned it will on the PCB, and solder it.</li>
<li>Put everything back together.</li>
</ol>
<h2 id="replacement-switches-kailh-gm-80">Replacement switches: Kailh GM 8.0</h2>
<p>The replacement mouse buttons I‚Äôm using are <a href="https://www.aliexpress.com/item/1005001286852407.html?spm=a2g0s.12269583.0.0.4a421ccfNFILvA">Kailh GM 8.0 from the Kailh
Official Store on
AliExpress</a>,
which are advertised as ‚Äúultra high life‚Äù. Even if their life span is also only
a few years, I bought enough of them to probably replace them another 2 to 3
times per trackball.</p>
<p>The Kailh mouse buttons behave very similarly to the original Omron mouse
buttons. The click is very satisfying now, and reminds me of a brand-new
Logitech MX Ergo trackball. I wouldn‚Äôt call the Kailh ones better than the Omron
ones, but maybe others notice a difference?</p>
<p>One interesting side note: I noticed that when wearing noise canceling
headphones, it was very hard to tell the worn-out Omron mouse buttons from the
Kailh mouse buttons. The difference really is mostly in the sound, not in the
feel when pressing the button down!</p>
<h2 id="why-is-the-mx-ergo-so-unreliable">Why is the MX Ergo so unreliable?</h2>
<p>There is a <a href="https://www.youtube.com/watch?v=v5BhECVlKJA">1-hour video by Alex
Kenis</a> saying that Logitech
switched from 5V to 3.3V logic voltages, and this violates the minimum
electrical condition for the Omron D2FC-F, which causes oxidation.</p>
<p>Indeed, when I merely opened the switches and cleaned them up with a screw
driver, this seemed to help. But, opening everything up is so fiddly that one
might as well solder in new switches altogether :)</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[MacBook Air M1: the best laptop?]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/"/>
    <id>https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/</id>
    <published>2021-11-28T16:50:00+01:00</published>
    <content type="html"><![CDATA[<p>You most likely have heard that Apple switched from Intel CPUs to their own,
ARM-based CPUs.</p>
<p>Various early reviews touted the new MacBooks, among the first devices with the
ARM-based M1 CPU, as the best computer ever. This got me curious: after years of
not using any Macs, would an M1 Mac blow my mind?</p>
<p>In this article, I share my thoughts about the MacBook Air M1, after a year of
occasional usage.</p>















<a href="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_600x0_resize_q75_box.jpg"
  alt="MacBook Air M1" title="MacBook Air M1"
  width="600"
  height="675"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="energy-efficiency">Energy efficiency</h2>
<p>The M1 CPU is remarkably energy-efficient. This has two notable effects:</p>
<ol>
<li>The device does not have a fan, and <strong>stays absolutely quiet</strong>. This is
pretty magical, and I now notice my ThinkPad‚Äôs fan immediately.</li>
<li>The <strong>battery lasts many hours</strong>, even with demanding use-cases like video
conferencing.</li>
</ol>
<p>When it comes to energy efficiency, Apple sets the bar. All other laptops should
be fanless, too! And the battery life really is incredible: taking notes in
Google Docs (via WiFi) while at a conference for many hours left me with well
over 80% of battery at the end of the day!</p>
<p>I briefly lent the computer to someone and got it back with a VPN client
installed. The battery life was considerably shortened by that VPN client and
recovered once I uninstalled it. So if you‚Äôre not seeing great battery life,
maybe a single program is ruining your experience.</p>
<p>The fast wakeup feature that was heavily stressed during the initial
introduction (to some ridicule) is actually pretty nice! I now notice having to
wait for my ThinkPad to wake up.</p>
<p>Battery life during standby is great, too. Anecdotally, when leaving my ThinkPad
lying around, it never survives until I plug it in again. The MacBook survives
every single time.</p>
<h2 id="chipset-advantage">Chipset advantage?</h2>
<p>Now, given that Apple controls the entire machine, does that mean they now offer
features that other computers cannot offer yet?</p>
<p>My personal bar for this question is whether a computer can be used with my
<a href="/posts/2017-12-11-dell-up3218k/">bandwidth-hungry 8K monitor</a>, and the
disappointing news is that the MacBook Air M1 cannot drive the 8K monitor with
its 7680x4320 pixels resolution (at 60 Hz, using 2 DisplayPort links), not even
with <a href="https://www.displaylink.com/products/find?vid_dp=1&amp;usbc=1">an external USB-C
dock</a>.</p>
<p>Maybe future hardware generations add support for 8K displays, but for my
day-to-day, Apple‚Äôs complete control doesn‚Äôt improve anything.</p>
<h2 id="built-in-peripherals">Built-in peripherals</h2>
<p>The screen is great! Everything looks sharp, colors are vibrant and brightness
is good.</p>
<p>As usual, the touchpad (which Apple calls ‚Äútrackpad‚Äù) is great, much better than
any touchpad I have ever used on a PC laptop. Apple trackpads have always had
this advantage since I know them, and I don‚Äôt know why PC touchpads don‚Äôt seem
to get any better? ü§î</p>
<p>Apple brought back their <a href="https://www.macrumors.com/guide/butterfly-keyboard-vs-scissor-keyboard/">scissor mechanism
keyboards</a>,
which is a very welcome change. I have witnessed so so many problems with the
old butterfly mechanism keyboards.</p>
<p>This first MacBook Air M1 model has no MagSafe. Apple added MagSafe in the
MacBook Pro M1 in late 2021. I hope they‚Äôll eventually expand MagSafe to all
notebooks.</p>
<h2 id="peripherals-not-enough-ports">Peripherals: not enough ports</h2>
<p>Staying in peripheral-land, let me first state that this MacBook‚Äôs <strong>2 USB-C
ports are not enough</strong>!</p>
<p>When working on the go, after plugging in power, I can plug in a wired ethernet
adapter (wireless can be spotty), but then won‚Äôt have any ports left for my
ergonomic keyboard and mouse.</p>
<p>For video conferencing, I can plug in power (to ensure I won‚Äôt run out of
battery), connect a table microphone, but won‚Äôt have any ports left for a decent
webcam. This is particularly annoying because this MacBook‚Äôs built-in webcam is
really bad, and the main reason why reviewers don‚Äôt give the MacBook a perfect
score (<a href="https://www.youtube.com/watch?v=OEaKQ0pxQsg">example review on
YouTube</a>).</p>
<p>So, in practice, you need to carry a USB-C dock, or at least a USB hub, with
your laptop when you anticipate possibly needing any peripherals. #donglelife</p>
<h2 id="not-enough-ram-for-local-software-development">Not enough RAM for local software development</h2>
<p>Hardware-wise, the biggest pain point for software developers is the small
amount of RAM: both the MacBook Air M1 and the MacBook Pro M1 (13&quot;) can be
configured with up to 16 GB of RAM. Only the newer MacBook Pro M1 14&quot; or 16&quot;
(introduced late 2021) support more RAM.</p>
<p>To be clear, 16 GB RAM is enough to do software development in general, but it
can quickly become limiting when you deal with larger programs or data sets.</p>
<p>In my ThinkPad, I have 64 GB of RAM, which allows for a lot more VMs, large
index data structures, or just plenty of page cache. With the ThinkPad, I don‚Äôt
have to worry about RAM.</p>
<p>Of course, there are strategies around this. Maybe your projects are large
enough to warrant maintaining a remote build cluster, and you can run your test
jobs in a staging environment. The MacBook makes for a fine thin client ‚Äî
provided your internet connection is fast and stable.</p>
<h2 id="operating-system-macos">Operating System: macOS</h2>
<p>I am talking about Operating Systems at a very high level in this section. Many
use-cases will work fine, regardless of the Operating System one uses. I can
typically get by with a browser and a terminal program.</p>
<p>So, this section isn‚Äôt a nuanced or fair review or critique of macOS or anything
like that, just a collection of a few random things I found notable while
playing with this device :)</p>
<p>My favorite way to install macOS is Internet Recovery. You can install a blank
disk in your Mac and start the macOS installer via the internet! The Mac will
even remember your WiFi password. The closest thing I know in the PC world is
<a href="https://netboot.xyz/">netboot.xyz</a>, and that needs to be installed in your
local network first.</p>
<p>Similarly, Apple‚Äôs integration when using multiple devices seems pretty
good. For example, the Mac will offer to switch to your iPhone‚Äôs mobile
connection when it loses network connectivity.</p>
<p>But, just like in all other operating systems, there is plenty in macOS to
improve.</p>
<p>For example, software updates on the Mac still take 30 minutes (!) or so, which
is entirely unacceptable for such a fast device! In particular, Apple seems to
be (partially?) using immutable file system snapshots to distribute their
software, so I don‚Äôt know why <a href="https://distr1.org/">distri can install and update so much
faster</a>.</p>
<p>Speaking of Operating System shortcomings, I have observed how <a href="https://en.wikipedia.org/wiki/Apple_File_System">APFS (the Apple
File System)</a> can get into a
state in which it cannot be repaired, which I found pretty concerning! Automated
and frequent backups of all on-device data is definitely a must.</p>
<p>Slow software updates are annoying, and having little confidence in the file
system makes me uneasy, but what‚Äôs really a dealbreaker is that my preferred
keyboard layout does not work well on macOS: see <a href="#neo">Appendix A: NEO keyboard
layout</a>.</p>
<h2 id="linux-">Linux? üêß</h2>
<p>So given my preference for Linux, could I just use Linux instead?</p>
<p>Unfortunately, while <a href="https://asahilinux.org">Asahi Linux</a> is making great
progress in bringing Linux to the M1 Macs, it seems like it‚Äôll still be many
months before I can install a Linux distribution and expect it to just work on
the M1 Mac.</p>
<p>Until then, check out the <a href="https://asahilinux.org/blog/">Asahi Linux Progress Report blog
posts</a>!</p>
<h2 id="intel-to-m1-architecture-transition">Intel to M1 architecture transition</h2>
<p>Apple developed the <a href="https://en.wikipedia.org/wiki/Rosetta_(software)#Rosetta_2">Rosetta 2 dynamic binary
translator</a> which
transparently handles non-M1 programs, and so far it seems to work fine! All the
things I tried just worked, and architecture never seemed to play a role during
my usage.</p>
<h2 id="conclusion">Conclusion</h2>
<p>The MacBook Air M1 is indeed impressive! It‚Äôs light, silent, fast and the
battery life is amazing. If these points are the most important to you in a
laptop, and you‚Äôre already in the Mac ecosystem, I imagine you‚Äôll be very happy
with this laptop.</p>
<p>But is the M1 really so mind-blowing that you should switch to it no matter
what? No. As a long-time Linux user who is primarily developing software, I
prefer my <a href="/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/">ThinkPad X1
Extreme</a> with
its plentiful peripheral connections and lots of RAM.</p>
<p>I know it‚Äôs not an entirely fair comparison: I should probably compare the
ThinkPad to the newer MacBook <strong>Pro</strong> models (not MacBook Air). But I‚Äôm not a
professional laptop reviewer, I can only speak about these 2 laptops that I
found interesting enough to personally try.</p>
<h2 id="neo">Appendix A: NEO keyboard layout</h2>
<p>The macOS implementation of the <a href="https://neo-layout.org/">NEO keyboard layout</a>
has a number of significant incompatibilities/limitations: its layer 3 does not
work correctly. Layer 3 contains many important common characters, such as <code>/</code>
(<code>Mod3 + i</code>, i.e. Caps Lock + i) or <code>?</code> (<code>Mod3 + s</code>).</p>
<p>I installed the current <code>neo.keylayout</code> file (2019-08-16) as described on the
<a href="https://neo-layout.org/Download/">NEO download page</a>.</p>
<p>In order to make <code>/</code> and <code>?</code> work in Google Docs, I had to enable the additional
Karabiner rule <em>‚ÄúPrevent all layer 3 keys from being treated as option key
shortcut‚Äù</em> (see also: <a href="https://github.com/jgosmann/neo2-layout-osx/issues/6#issuecomment-604622834">this GitHub
issue</a>)</p>
<hr>
<p>I encountered the following issues, ordered by severity:</p>
<p><strong>Issue 1</strong>: I cannot use Emacs at all! I installed the emacsformacosx.com
version (also tried homebrew), but cannot enter keys such as <code>/</code> or <code>?</code>. Emacs
interprets these as <code>M-u</code> instead.</p>
<p>The Karabiner rule <em>‚ÄúPrevent all layer 3 keys from being treated as option key
shortcut‚Äù</em> that fixed this issue in Google Docs does not help for
Emacs. Removing it from Karabiner changes behavior, but Emacs still recognizes
<code>M-i</code> instead of <code>/</code>, so it‚Äôs broken with or without the rule.</p>
<p><strong>Issue 2</strong>: In the Terminal app, I cannot enable the <em>‚ÄúUse Option as Meta key‚Äù</em>
keyboard option, otherwise all layer 3 keys function as meta shortcuts (<code>M-i</code>)
instead of key symbols (<code>/</code>).</p>
<p>I commonly use the Meta key to jump around word-wise: <code>Alt+b</code> / <code>Alt+f</code> on a
PC. Since I can‚Äôt use Option + b / Option + f on a Mac, I need to use Option +
arrow keys instead, which works.</p>
<p>Since the Option key does not work as Meta key, I need to press (and release!)
the Escape key instead. This is pretty inconvenient in Emacs in a terminal.</p>
<p><strong>Issue 3</strong>: In Gmail in Chrome, the search keyboard shortcut (<code>/</code>) is not
recognized.</p>
<p>I <a href="https://git.neo-layout.org/neo/neo-layout/issues/590">reported this problem
upstream</a>, but there seems
to be no solution.</p>
<hr>
<p>I‚Äôm not sure why these programs don‚Äôt work well with NEO. I tried BBEdit for
comparison, and it had no trouble with (macOS-level) shortcuts such as
<code>command + /</code> and <code>option + command + /</code>.</p>
<p>On Linux, the NEO layout works so much better. I‚Äôm really not in the mood to
continuously fight with my operating system over keyboard input and shortcuts.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Silent HP Z440 workstation: replacing noisy fans]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/"/>
    <id>https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/</id>
    <published>2021-08-28T15:16:00+02:00</published>
    <content type="html"><![CDATA[<p>Since March 2020, I have been using my work computer at home: an <a href="https://support.hp.com/us-en/document/c04506309">HP Z440
workstation</a>.</p>
<p>When I originally took the machine home, I immediately noticed that it‚Äôs quite a
bit louder than my other PCs, but only now did I finally decide to investigate
what I could do about it.</p>
<h2 id="finding-all-the-fans">Finding all the fans</h2>
<p>I first identified all fans, both by opening the chassis and looking around, and
by looking at the <a href="http://h10032.www1.hp.com/ctg/Manual/c04823811">HP Z440 Maintenance and Service
Guide</a>, which contains this
description:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_600x0_resize_q75_box.jpg"
  alt="chassis components" title="chassis components"
  width="600"
  height="509"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Specifically, I identified the following fans:</p>
<ul>
<li>‚Äú1 Fan‚Äù, a 92mm rear fan, sucking air out of the back of the chassis.</li>
<li>‚Äú5 Memory fans‚Äù, two 60mm fans in a custom HP plastic enclosure that are
positioned directly above the DIMM slots to the left and right of the CPU.</li>
<li>‚Äú6 CPU Heat sink‚Äù, a 92mm fan on top of a heat sink</li>
<li>‚Äú11 Rear System Fan‚Äù, a 92mm front (!) fan, pulling air into the front of the
chassis.</li>
<li>My aftermarket nVidia GeForce GPU has 3 fans on a massive heat sink.</li>
<li>The power supply has a fan, too, which I will not touch.</li>
</ul>
<h2 id="memory-fans">Memory fans</h2>
<p>The Z440 comes with a custom HP plastic enclosure that is put over the CPU
cooler, fastened with two clips at opposite ends, and positions two small 60mm
fans above the DIMM banks.</p>
<p>This memory fan plastic enclosure is a pain to find anywhere. It looks like HP
is no longer producing it.</p>
<p>The enclosure plugs into the mainboard with a custom connector that is directly
wired up to the fans, meaning it‚Äôs a pain to replace the fans.</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_600x0_resize_q75_box.jpg"
  alt="memory fans" title="memory fans"
  width="600"
  height="696"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Luckily, while <a href="https://www.workstation4u.de/de/ersatzteile/hp/hp-z440/1513/hp-z440-memory-cooling-solution-neu">shopping around for an
enclosure</a>
I could modify, I realized that memory fans are only required when installing
more than 4 DIMM modules!</p>
<p>My machine ‚Äúonly‚Äù has 64 GB of RAM, in 4 DIMM modules, and I don‚Äôt intend to
upgrade anytime soon, so I just unplugged the whole memory fan enclosure and
removed it from the chassis.</p>
<p>The UEFI firmware does not complain about the memory fans missing (contrary to
the rear fan!), and this simple change alone makes a noticeable difference in
noise levels.</p>
<h2 id="gpu-fans">GPU fans</h2>
<p>nVidia GPUs can be run at different ‚ÄúPowerMizer‚Äù performance levels:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_600x0_resize_q75_box.jpg"
  alt="nVidia PowerMizer" title="nVidia PowerMizer"
  width="600"
  height="359"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Many years ago, I ran into lag when using Chrome that went away as soon as I
switched my nVidia GPU‚Äôs Preferred Mode to ‚ÄúPrefer Maximum Performance‚Äù instead
of ‚ÄúAuto‚Äù or ‚ÄúAdaptive mode‚Äù.</p>
<p>It turns out that nowadays, that is no longer a problem, so running at Prefer
Maximum Performance is no longer necessary.</p>
<p>Worse, pinning the GPU at the highest Performance Level means that it produces
more heat, resulting in the fans having to spin up more often, and run for
longer durations.</p>
<p>But, even after switching to Auto, resulting in Adaptive mode being chosen, I
noticed that my GPU was stuck at a higher PowerMizer level than I thought it
should be.</p>
<p>An easy fix is to limit the GPU to a certain PowerMizer level, and ideally not
the lowest level (level 0). For me, one level after that (level 1) seems to
result in no slow-down during my typical usage.</p>
<p>I followed <a href="https://db.tannercrook.com/limiting-nvidia-gpu-in-linux/">this blog post to limit my GPU to PowerMizer level
1</a>, i.e. I added
<code>/etc/modprobe.d/nvidia-power-save.conf</code> with the following contents:</p>
<pre tabindex="0"><code>options nvidia NVreg_RegistryDwords=&#34;OverrideMaxPerf=0x2&#34;
</code></pre><p>‚Ä¶followed by a rebuild of my initramfs (<code>update-initramfs -u</code>) and a <code>reboot</code>.</p>
<p>This way, the fans don‚Äôt typically need to spin up as the GPU stays below its
temperature limit.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">For some reason, the above method worked fine on my Debian work machine, but not
on my Arch private machine‚Ä¶? I have not investigated why.</div>
  </div>
</aside>

<h2 id="rear-and-front-fans">Rear and front fans</h2>
<p>With the memory fans and GPU fans out of the way, two easy to check fans remain:
the rear fan and front fan. These are 92mm in size, the model number is Foxconn
PVA092G12S.</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_600x0_resize_q75_box.jpg"
  alt="rear fan" title="rear fan"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>I unplugged both of them to see what effect these fans have on the noise level,
and the difference was significant!</p>
<p>Unfortunately, unplugging isn‚Äôt enough: the UEFI firmware complains on boot when
the rear fan is not connected, requiring you to press <code>Enter</code> to boot. Also, the
machine seems to get a few degrees Celsius hotter inside without the front and
rear fans, so I don‚Äôt want to run the machine without these fans for an extended
period of time.</p>
<p>I ordered two <a href="https://noctua.at/en/nf-a9x14-pwm">Noctua NF-A9x14 PWM</a> fans (for
about 25 CHF each) to replace the stock front and rear fans.</p>
<p>Unfortunately, while HP uses a standard 4-pin PWM fan connector
(electronically), the connector on the Z440 mainboard uses a non-standard guard
rail configuration (mechanically)!</p>
<p>Luckily, modifying the connector of the Noctua Low-Noise Adapter cable to fit on
the custom 4-pin connector is as simple as using a knife to remove the
connector‚Äôs guard rails:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_600x0_resize_q75_box.jpg"
  alt="fan connector mod" title="fan connector mod"
  width="600"
  height="557"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>After connecting the Noctua fan, the boot warning was gone.</p>
<h2 id="cpu-fan">CPU fan</h2>
<p>For the CPU fan, HP again chose to use a <a href="https://h30434.www3.hp.com/t5/Business-PCs-Workstations-and-Point-of-Sale-Systems/Z620-Aftermarker-CPU-Cooler-CPU-Cooling-shroud-necessary-or/td-p/7842134">custom (6-pin)
connector</a>.</p>
<p>On the web, I read that the Z440 CPU fan is quite efficient and not worth
replacing. This matches my experience, so I kept the standard Z440 CPU cooler.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I was quite happy to discover that I could just unplug the memory fans, and
configure my GPU to make less noise. Together with replacing the front/rear fans
with Noctua ones, the machine is much quieter now than before!</p>
<p>One downside of workstation-class hardware is that manufacturers (at least HP)
like to build custom parts and solutions. Using their own fan connectors instead
of standard connectors is such a pain! I‚Äôll be sure to stick to standard PC
hardware :)</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[25 Gigabit Linux internet router PC build]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/"/>
    <id>https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/</id>
    <published>2021-07-10T13:43:00+02:00</published>
    <content type="html"><![CDATA[<p>init7 recently announced that with their <a href="https://www.init7.net/en/internet/fiber7/">FTTH fiber offering
Fiber7</a>, they will now sell and
connect you with 25 Gbit/s (Fiber7-X2) or 10 Gbit/s (Fiber7-X) fiber optics, if
you want more than 1 Gbit/s.</p>
<p>While this offer will only become available at my location late this year (<a href="https://twitter.com/init7/status/1403287499175235584">or
possibly later due to the supply chain
shortage</a>), I already
wanted to get the hardware on my end sorted out.</p>
<p>After my <a href="/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/">previous
disappointment</a>
with the MikroTik CCR2004, I decided to try a custom PC build.</p>
<p>An alternative to many specialized devices, including routers, is to use a PC
with an expansion card. An internet router‚Äôs job is to configure a network
connection and forward network packets. So, in our case, we‚Äôll build a PC and
install some network expansion cards!</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_600x0_resize_q75_box.jpg"
  alt="router PC build" title="router PC build"
  width="600"
  height="607"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="goals">Goals</h2>
<p>For this PC internet router build, I had the following goals, highest priority
to lowest priority:</p>
<ol>
<li>Enough performance to saturate 25 Gbit/s, e.g. with two 10 Gbit/s downloads.</li>
<li>Silent: no loud fan noise.</li>
<li>Power-efficient: low power usage, as little heat as possible.</li>
<li>Low cost (well, for a high-end networking build‚Ä¶).</li>
</ol>
<h2 id="network-port-plan">Network Port Plan</h2>
<p>The simplest internet router has 2 network connections: one uplink to the
internet, and the local network. You can build a router without extra cards by
using a mainboard with 2 network ports.</p>
<p>Because there are no mainboards with SFP28 slots (for 25 Gbit/s SFP28 fiber
modules), we need at least 1 network card for our build. You might be able to
get by with a dual-port SFP28 network card if you have an SFP28-compatible
network switch already, or need just one fast connection.</p>
<p>I want to connect a few fast devices (directly and via fiber) to my router, so
I‚Äôm using 2 network cards: an SFP28 network card for the uplink, and a quad-port
10G SFP+ network card for the local network (LAN). This leaves us with the
following network ports and connections:</p>
<table>
<thead>
<tr>
<th>Network Card</th>
<th>max speed</th>
<th>cable</th>
<th>effective</th>
<th>Connection</th>
</tr>
</thead>
<tbody>
<tr>
<td>Intel XXV710</td>
<td>25 Gbit/s</td>
<td>fiber</td>
<td>25 Gbit/s</td>
<td>Fiber7-X2 uplink</td>
</tr>
<tr>
<td>Intel XXV710</td>
<td>25 Gbit/s</td>
<td>DAC</td>
<td>10 Gbit/s</td>
<td>workstation</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>RJ45</td>
<td>1 Gbit/s</td>
<td>rest (RJ45 Gigabit)</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>fiber</td>
<td>10 Gbit/s</td>
<td>MikroTik 1</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>fiber</td>
<td>10 Gbit/s</td>
<td>MikroTik 2</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>/</td>
<td>10 Gbit/s</td>
<td>(unused)</td>
</tr>
<tr>
<td>onboard</td>
<td>2.5 Gbit/s</td>
<td>RJ45</td>
<td>1 Gbit/s</td>
<td>(management)</td>
</tr>
</tbody>
</table>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_600x0_resize_q75_box.jpg"
  alt="network connectors" title="network connectors"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="hardware-selection">Hardware selection</h2>
<p>Now that we have defined the goals and network needs, let‚Äôs select the actual
hardware!</p>
<h3 id="network-cards">Network Cards</h3>
<p>My favorite store for 10 Gbit/s+ network equipment is
<a href="https://www.fs.com/">FS.COM</a>. They offer Intel-based cards:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_600x0_resize_q75_box.jpg"
  alt="Network cards" title="Network cards"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<ul>
<li>
<p>(347 CHF) PCIe 3.0 x8 Dual-Port 25G SFP28 Ethernet Network Card (Intel XXV710) <br>
<a href="https://www.fs.com/de/products/75603.html">FS.COM XXV710AM2-F2 #75603</a></p>
</li>
<li>
<p>(329 CHF) PCIe 3.0 x8 Quad-Port 10G SFP+ Ethernet Network Card (Intel XL710-BM1) <br>
<a href="https://www.fs.com/de/products/75602.html">FS.COM FTXL710BM1-F4 #75602</a></p>
</li>
</ul>
<p>Both cards work out of the box with the <a href="https://www.kernel.org/doc/Documentation/networking/i40e.txt"><code>i40e</code> Linux kernel
driver</a>, no
firmware blobs required.</p>
<p>For a good overview over the different available Intel cards, check out the
second page (‚ÄúProduct View‚Äù) in the card‚Äôs <a href="https://img-en.fs.com/file/user_manual/network-adapter-user-manual.pdf">User
Manual</a>.</p>
<h3 id="cpu-and-chipset">CPU and Chipset</h3>
<p>I read on many different sites that AMD‚Äôs current CPUs beat Intel‚Äôs CPUs in
terms of performance per watt. We can better achieve goals 2 and 3 (low noise
and low power usage) by using fewer watts, so we‚Äôll pick an AMD CPU and
mainboard for this build.</p>
<p>AMD‚Äôs current CPU generation is Zen 3, and <a href="https://en.wikipedia.org/wiki/List_of_AMD_Ryzen_processors#Zen_3_based">current Zen 3 based
CPUs</a>
can be divided into 65W <a href="https://en.wikipedia.org/wiki/Thermal_design_power">TDP (Thermal Design
Power)</a> and 105W TDP
models. Only one 65W model is available to customers right now: the Ryzen 5
5600X.</p>
<p>Mainboards are built for/with a certain so-called chipset. Zen 3 CPUs use the
AM4 socket, for which <a href="https://en.wikipedia.org/wiki/Socket_AM4#Chipsets">8 different
chipsets</a> exist. Our network
cards need PCIe 3.0, so that disqualifies 5 chipsets right away: only the A520,
B550 and X570 chipsets remain.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note:</strong> Multiple people pointed out (thank you!) that the Wikipedia table only
lists PCIe lanes provided by the chipset, and strictly speaking, the older X470
chipset (released March 2018) supports CPUs which provide PCIe 3.0
lines. E.g. the <a href="https://www.asus.com/microsite/motherboard/AMD-X470/">ROG Strix
X470-F</a> with its x8/x8
mode should work, too.</div>
  </div>
</aside>
















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_600x0_resize_q75_box.jpg"
  alt="Ryzen 5" title="Ryzen 5"
  width="600"
  height="440"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="mainboard-pcie-bandwidth">Mainboard: PCIe bandwidth</h3>
<p>I originally tried using the ASUS PRIME X570-P mainboard, but I ran into two
problems:</p>
<p>Too loud: X570 mainboards need an annoyingly loud chipset fan for their 15W
TDP. Other chipsets such as the B550 don‚Äôt need a fan for their 5W TDP. With a
loud chipset fan, goal 2 (low noise) cannot be achieved. Only the
<a href="https://www.golem.de/news/sockel-am4-x570s-mainboards-mit-passivkuehlung-verfuegbar-2106-157434.html">recently-released X570<strong>S</strong>
variant</a>
comes without fans.</p>
<p>Not enough PCIe bandwidth/slots! This is how the ASUS tech specs describe the slots:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_600x0_resize_q75_box.jpg"
  
  width="600"
  height="244"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>This means the board has 2 slots (1 CPU, 1 chipset) that are physically wide
enough to hold a full-length x16 card, but only the first port can
electronically be used as an x16 slot. The other port only has PCIe lanes
electronically connected for x4, hence ‚Äúx16 (max at x4 mode)‚Äù.</p>
<p>Unfortunately, our network cards need electrical connection of all their PCIe x8
lanes to run at full speed. Perhaps Intel/FS.COM will one day offer a new
generation of network cards that use PCIe <strong>4.0</strong>, because PCIe 4.0 x4 achieves
the same 7.877 GB/s throughput as PCIe <strong>3.0</strong> x8. Until then, I needed to find
a new mainboard.</p>
<p>Searching mainboards by PCIe capabilities is rather tedious, as mainboard block
diagrams or PCIe tree diagrams are not consistently available from all mainboard
vendors.</p>
<p>Instead, we can look explicitly for a feature called <strong>PCIe Bifurcation</strong>. In a
nutshell, PCIe bifurcation lets us divide the PCIe bandwidth from the Ryzen CPU
from 1 PCIe 4.0 x16 into 1 PCIe 4.0 x8 + 1 PCIe 4.0 x8, definitely satisfying
our requirement for two x8 slots at full bandwidth.</p>
<p>I found a list of (only!) three B550 mainboards supporting PCIe Bifurcation in <a href="https://www.anandtech.com/show/15850/the-amd-b550-motherboard-overview-asus-gigabyte-msi-asrock-and-others/39">an
Anandtech
review</a>. Two
are made by Gigabyte, one by ASRock. I read the Gigabyte UEFI setup is rather
odd, so I went with the ASRock B550 Taichi mainboard.</p>
<h3 id="case">Case</h3>
<p>For the case, I needed a midi case (large enough for the B550 mainboard‚Äôs ATX
form factor) with plenty of options for large, low-spinning fans.</p>
<p>I stumbled upon the <a href="https://www.corsair.com/us/en/Categories/Products/Cases/Mid-Tower-ATX-Cases/4000D-Airflow-Tempered-Glass-Mid-Tower-ATX-Case/p/CC-9011200-WW">Corsair 4000D
Airflow</a>,
which is available for 80 CHF and <a href="https://www.gamersnexus.net/hwreviews/3624-corsair-4000d-airflow-case-review-vs-solid-panel">achieved positive
reviews</a>. I‚Äôm
pleased with the 4000D: there are no sharp corners, installation is quick, easy
and clean, and the front and top panels offer plenty of space for cooling behind
large air intakes:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_600x0_resize_q75_box.jpg"
  alt="Airflow case (from the top)" title="Airflow case (from the top)"
  width="600"
  height="699"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Inside, the case offers plenty of space and options for routing cables on the back side:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_600x0_resize_q75_box.jpg"
  alt="Airflow case (back)" title="Airflow case (back)"
  width="600"
  height="536"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Which in turn makes for a clean front side:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_600x0_resize_q75_box.jpg"
  alt="Airflow case (front)" title="Airflow case (front)"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="fans">Fans</h3>
<p>I have been happy with <a href="https://noctua.at/">Noctua</a> fans for many years. In this
build, I‚Äôm using only Noctua fans so that I can reach goal 2 (silent, no loud
fan noise):</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_600x0_resize_q75_box.jpg"
  alt="Noctua fans" title="Noctua fans"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>These fans are large (140mm), so they can spin on slow speeds and still be
effective.</p>
<p>The specific fan configuration I ended up with:</p>
<ul>
<li>1 Noctua NF-A14 PWM 140mm in the front, pulling air out of the case</li>
<li>1 Noctua NF-A14 PWM 140mm in the top, pulling air into the case</li>
<li>1 Noctua NF-A12x25 PWM 120mm in the back, pulling air into the case</li>
<li>1 Noctua NH-L12S CPU fan</li>
</ul>
<p>Note that this is most likely overkill: I can well imagine that I could turn off
one of these fans entirely without a noticeable effect on temperatures. But I
wanted to be on the safe side and have a lot of cooling capacity, as I don‚Äôt
know how hot the Intel network cards run in practice.</p>
<h3 id="fan-controller">Fan Controller</h3>
<p>The ASRock B550 Taichi <a href="https://www.techpowerup.com/review/asrock-b550-taichi/7.html">comes with a Nuvoton
NCT6683D-T</a> fan
controller.</p>
<p>Unfortunately, ASRock seems to have set the Customer ID register to 0 instead of
<code>CUSTOMER_ID_ASROCK</code>, so you need to load the <code>nct6683</code> Linux driver with its
<code>force</code> option.</p>
<p>Once the module is loaded, <code>lm-sensors</code> lists accurate PWM fan speeds, but the
temperature values are mislabeled and don‚Äôt quite match the temperatures I see
in the UEFI H/W Monitor:</p>
<pre tabindex="0"><code>nct6683-isa-0a20
Adapter: ISA adapter
fan1:              471 RPM  (min =    0 RPM)
fan2:                0 RPM  (min =    0 RPM)
fan3:                0 RPM  (min =    0 RPM)
fan4:                0 RPM  (min =    0 RPM)
fan5:                0 RPM  (min =    0 RPM)
fan6:                0 RPM  (min =    0 RPM)
fan7:                0 RPM  (min =    0 RPM)
Thermistor 14:     +45.5 C  (low  =  +0.0 C)
                            (high =  +0.0 C, hyst =  +0.0 C)
                            (crit =  +0.0 C)  sensor = thermistor
AMD TSI Addr 98h:  +40.0 C  (low  =  +0.0 C)
                            (high =  +0.0 C, hyst =  +0.0 C)
                            (crit =  +0.0 C)  sensor = AMD AMDSI
intrusion0:       OK
beep_enable:      disabled
</code></pre><p>At least with the <code>nct6683</code> Linux driver, there is no way to change the PWM fan
speed: the corresponding files in the <code>hwmon</code> interface are marked read-only.</p>
<p>At this point I accepted that I won‚Äôt be able to work with the fan controller
from Linux, and tried just configuring static fan control settings in the UEFI
setup.</p>
<p>But despite identical fan settings, one of my 140mm fans would end up turned
off. I‚Äôm not sure why ‚Äî is it an unclean PWM signal, or is there just a bug in
the fan controller?</p>
<p>Controlling the fans to reliably spin at a low speed is vital to reach goal 2
(low noise), so I looked around for third-party fan controllers and found the
<a href="https://www.corsair.com/eu/en/Categories/Products/Accessories-%7C-Parts/iCUE-CONTROLLERS/iCUE-Commander-PRO-Smart-RGB-Lighting-and-Fan-Speed-Controller/p/CL-9011110-WW">Corsair Commander
Pro</a>,
which <a href="https://blog.ktz.me/a-usb-fan-controller-that-now-works-under-linux/">a blog post explains is compatible with
Linux</a>.</p>
<h3 id="server-disk">Server Disk</h3>
<p>This part of the build is not router-related, but I figured if I have a fast
machine with a fast network connection, I could add a fast big disk to it and
retire my other server PC.</p>
<p>Specifically, I chose the Samsung 970 EVO Plus M.2 SSD with 2 TB of
capacity. This disk can <a href="https://www.tomshardware.com/reviews/samsung-970-evo-plus-ssd,5608.html">deliver 3500 MB/s of sequential read
throughput</a>,
which is more than the ‚âà3000 MB/s that a 25 Gbit/s link can handle.</p>
<h3 id="graphics-card">Graphics Card</h3>
<p>An important part of computer builds for me is making troubleshooting and
maintenance as easy as possible. In my current tech landscape, that translates
to connecting an HDMI monitor and a USB keyboard, for example to boot from a
different device, to enter the UEFI setup, or to look at Linux console messages.</p>
<p>Unfortunately, the Ryzen 5 5600X does not have integrated graphics, so to get
any graphics output, we need to install a graphics card. I chose the Zotac
GeForce GT 710 Zone Edition, because it was the cheapest available card (60 CHF)
that‚Äôs passively cooled.</p>
<p>An alternative to using a graphics card might be to use a PCIe IPMI card like
the <a href="https://www.asrockrack.com/general/productdetail.asp?Model=PAUL#Specifications">ASRock
PAUL</a>,
however these seem to be harder to find, and more expensive.</p>
<p>Longer-term, I think the best option would be to use the Ryzen 5 5600G with
integrated graphics, but that model only <a href="https://www.pcmag.com/news/amds-new-ryzen-5000-g-series-will-come-with-an-integrated-gpu">becomes available later this
year</a>.</p>
<h3 id="component-list">Component List</h3>
<p>I‚Äôm listing 2 different options here. Option A is what I built (router+server),
but Option B is a lot cheaper if you only want a router. Both options use the
same base components:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>347 CHF</td>
<td>Network card</td>
<td><a href="https://www.fs.com/products/75603.html">FS.COM Intel XXV710, 2 √ó 25 Gbit/s (#75603)</a></td>
</tr>
<tr>
<td>329 CHF</td>
<td>Network card</td>
<td><a href="https://www.fs.com/products/75602.html">FS.COM Intel XL710, 4 √ó 10 Gbit/s (#75602)</a></td>
</tr>
<tr>
<td>314 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/amd-ryzen-5-5600x-am4-370ghz-6-core-prozessor-13987919">Ryzen 5 5600X</a></td>
</tr>
<tr>
<td>290 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asrock-b550-taichi-am4-amd-b550-atx-mainboard-13348335">ASRock B550 Taichi</a></td>
</tr>
<tr>
<td>92 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-4000d-airflow-midi-tower-pc-gehaeuse-13552873">Corsair 4000D Airflow (Midi Tower)</a></td>
</tr>
<tr>
<td>67 CHF</td>
<td>Fan control</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-commander-pro-extern-6x-luefter-kontroller-6332927">Corsair Commander Pro</a></td>
</tr>
<tr>
<td>65 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140mm-1x-pc-luefter-657800">2 √ó Noctua NF-A14 PWM (140mm)</a></td>
</tr>
<tr>
<td>62 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-l12s-7cm-cpu-kuehler-6817433">Noctua NH-L12S</a></td>
</tr>
<tr>
<td>35 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a12x25-pwm-120mm-1x-pc-luefter-9161307">1 √ó Noctua NF-A12x25 PWM (120mm)</a></td>
</tr>
<tr>
<td>60 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/zotac-geforce-gt-710-zone-edition-1gb-grafikkarte-7526609">Zotac GeForce GT 710 Zone Edition (1GB)</a></td>
</tr>
</tbody>
</table>
<p>Base total: 1590 CHF</p>
<p><strong>Option A: Server extension</strong>. Because I had some parts lying around, and because I
wanted to use my router for serving files (from large RAM cache/fast disk), I
went with the following parts:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>309 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/samsung-970-evo-plus-2000gb-m2-2280-ssd-10339167">Samsung 970 EVO Plus 2000GB, M.2 2280</a></td>
</tr>
<tr>
<td>439 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-hyperx-predator-rgb-4x-16gb-ddr4-3600-dimm-288-ram-14062636">64GB HyperX Predator RAM (4x, 16GB, DDR4-3600, DIMM 288)</a></td>
</tr>
<tr>
<td>127 CHF</td>
<td>Power supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-sf600-platinum-600w-pc-netzteil-9034178">Corsair SF600 Platinum (600W)</a></td>
</tr>
<tr>
<td>14 CHF</td>
<td>Power ext</td>
<td><a href="https://www.digitec.ch/de/s1/product/silverstone-atx-24-24pin-verlaengerung-30cm-modding-sleeving-3456447">Silverstone ATX 24-24Pin Extension (30cm)</a></td>
</tr>
<tr>
<td>10 CHF</td>
<td>Power ext</td>
<td><a href="https://www.digitec.ch/de/s1/product/silverstone-atx-extension-8-844pin-30cm-modding-sleeving-5808252">Silverstone ATX Extension 8-8(4+4)Pin (30cm)</a></td>
</tr>
</tbody>
</table>
<p>The Corsair SF600 power supply is not server-related, I just had it lying around. I‚Äôd
recommend going for the Corsair RM650x *2018* (which has longer cables) instead.</p>
<p>Server total: 2770 CHF</p>
<p><strong>Option B: Non-server (router only) alternative</strong>. If you‚Äôre <em>only</em> interested
in routing, you can opt for cheaper low-end disk and RAM, for example:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>112 CHF</td>
<td>Power supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm650x-2018-650w-pc-netzteil-8849945">Corsair RM650x *2018*</a></td>
</tr>
<tr>
<td>33 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-a400-120gb-m2-2280-ssd-10628775">Kingston A400 120GB M.2 SSD</a></td>
</tr>
<tr>
<td>29 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/crucial-ct4g4dfs8266-1x-4gb-ddr4-2666-dimm-288-ram-10447900">Crucial CT4G4DFS8266 4GB DDR4-2666 RAM</a></td>
</tr>
</tbody>
</table>
<p>Non-server total: 1764 CHF</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><p>I had the Noctua NH-L12S CPU fan lying around, so I re-used it.</p>
<p>Noctua <a href="https://www.golem.de/news/nh-p1-noctuas-passiver-cpu-kuehler-schafft-125-watt-2106-157334.html">recently released a passive CPU
cooler</a>,
which might be an interesting alternative.</p>
</div>
  </div>
</aside>

<h2 id="asrock-b550-taichi-mainboard-uefi-setup">ASRock B550 Taichi Mainboard UEFI Setup</h2>
<p>To enable PCIe Bifurcation for our two PCIe 3.0 x8 card setup:</p>
<ol>
<li>Set <code>Advanced &gt; AMD PBS &gt; PCIe/GFX Lanes Configuration</code> <br>
to <code>x8x8</code>.</li>
</ol>
<p>To always turn on the PC after power is lost:</p>
<ol>
<li>Set <code>Advanced &gt; Onboard Devices Configuration &gt; Restore On AC Power Loss</code> <br>
to <code>Power On</code>.</li>
</ol>
<p>To PXE boot (via UEFI) on the onboard ethernet port (management), but disable
slow option roms for PXE boot on the FS.COM network cards:</p>
<ol>
<li>Set <code>Boot &gt; Boot From Onboard LAN</code> <br>
to <code>Enabled</code>.</li>
<li>Set <code>Boot &gt; CSM (Compatibility Support Module) &gt; Launch PXE OpROM Policy</code> <br>
to <code>UEFI only</code>.</li>
</ol>
<h2 id="fan-controller-setup">Fan Controller Setup</h2>
<p>The <a href="https://www.corsair.com/eu/en/Categories/Products/Accessories-%7C-Parts/iCUE-CONTROLLERS/iCUE-Commander-PRO-Smart-RGB-Lighting-and-Fan-Speed-Controller/p/CL-9011110-WW">Corsair Commander Pro</a> fan controller is well-supported on Linux.</p>
<p>After enabling the Linux kernel option <code>CONFIG_SENSORS_CORSAIR_CPRO</code>, the device
shows up in the <code>hwmon</code> subsystem.</p>
<p>You can completely spin up (100% PWM) or turn off (0% PWM) a fan like so:</p>
<pre tabindex="0"><code># echo 255 &gt; /sys/class/hwmon/hwmon3/pwm1
# echo 0 &gt; /sys/class/hwmon/hwmon3/pwm1
</code></pre><p>I run my fans at 13% PWM, which translates to about 226 rpm:</p>
<pre tabindex="0"><code># echo 33 &gt; /sys/class/hwmon/hwmon3/pwm1
# cat /sys/class/hwmon/hwmon3/fan1_input
226
</code></pre><p>Conveniently, the Corsair Commander Pro stores your settings even when power is
lost. So you don‚Äôt even need to run a permanent fan control process, a one-off
adjustment might be sufficient.</p>
<h2 id="power-usage">Power Usage</h2>
<p>The PC consumes about 48W of power when idle (only management network connected)
by default without further tuning. Each extra network link increases power usage
by ‚âà1W:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_600x0_resize_q75_box.jpg"
  alt="graph showing power consumption when enabling network links" title="graph showing power consumption when enabling network links"
  width="600"
  height="370"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Enabling all <a href="https://wiki.gentoo.org/wiki/Ryzen#Kernel">Ryzen-related options</a>
in my Linux kernel and switching to the powersave CPU frequency governor lowers
power usage by ‚âà1W.</p>
<p>On some mainboards, you might need to <a href="https://twitter.com/falcon3754/status/1403102789367119876">force-enable Global
C-States</a> to save
power. Not on the B550 Taichi, though.</p>
<p>I tried undervolting the CPU, but that didn‚Äôt even make ‚âà1W of difference in
power usage. Potentially making my setup unreliable is not worth that little
power saving to me.</p>
<p>I measured these values using a <a href="https://www.conrad.ch/de/p/homematic-hm-es-pmsw1-pl-dn-r5-funk-schaltaktor-1-fach-funk-steckdose-2300-w-2507749.html">Homematic
HM-ES-PMSw1-Pl-DN-R5</a>
I had lying around.</p>
<h2 id="performance">Performance</h2>
<p>Goal 1 is to saturate 25 Gbit/s, for example using two 10 Gbit/s downloads. I‚Äôm
talking about large bulk transfers here, not many small transfers.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">If you‚Äôre interested in the ‚Äúmany small packets‚Äù scenario, check out <a href="https://netoptimizer.blogspot.com/2014/05/the-calculations-10gbits-wirespeed.html">‚ÄúThe
calculations: 10Gbit/s
wirespeed‚Äù</a>
for a good intro, and <a href="https://twitter.com/fragstone/status/1401807613642280963">Thomas Fragstein‚Äôs benchmark tool
recommendations</a>. I
haven‚Äôt run any such tests yet.</div>
  </div>
</aside>

<p>To get a feel for the performance/headroom of the router build, I ran 3 different tests.</p>
<h3 id="test-a-10-gbits-bridging-throughput">Test A: 10 Gbit/s bridging throughput</h3>
<p>For this test, I connected 2 PCs to the router‚Äôs XL710 network card and used <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 to generate a 10 Gbit/s TCP stream between the
2 PCs. The router doesn‚Äôt need to modify the packets in this scenario, only
forward them, so this should be the lightest load scenario.</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_600x0_resize_q75_box.jpg"
  alt="bridging throughput" title="bridging throughput"
  width="600"
  height="315"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="test-b-10-gbits-nat-throughput">Test B: 10 Gbit/s NAT throughput</h3>
<p>In this test, the 2 PCs were connected such that the router performs <a href="https://en.wikipedia.org/wiki/Network_address_translation">Network
Address Translation
(NAT)</a>, which is
required for downloads from the internet via IPv4.</p>
<p>This scenario is slightly more involved, as the router needs to modify
packets. But, as we can see below, a 10 Gbit/s NAT stream consumes barely more
resources than 10 Gbit/s bridging:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_600x0_resize_q75_box.jpg"
  alt="NAT throughput" title="NAT throughput"
  width="600"
  height="250"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="test-c-4--10-gbits-tcp-streams">Test C: 4 √ó 10 Gbit/s TCP streams</h3>
<p>In this test, I wanted to max out the XL710 network card, so I connected 4 PCs
and started an <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 benchmark between each PC
and the router itself, simultaneously.</p>
<p>This scenario consumes about 16% CPU, meaning we‚Äôll most likely have plenty of
headroom even when all ports are maxed out!</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_600x0_resize_q75_box.jpg"
  alt="four 10 Gbit/s streams" title="four 10 Gbit/s streams"
  width="600"
  height="292"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Tip: make sure to enable the <code>CONFIG_IRQ_TIME_ACCOUNTING</code> Linux kernel option to
<a href="https://tanelpoder.com/posts/linux-hiding-interrupt-cpu-usage/">include IRQ handlers in CPU usage
numbers</a> for
accurate measurements.</p>
<h2 id="alternatives-considered">Alternatives considered</h2>
<p>The passively-cooled SuperServer E302-9D comes with 2 SFP+ ports (10 Gbit/s). It
even comes with 2 PCIe 3.0 x8 capable slots. Unfortunately it seems impossible
to currently buy this machine, at least in Switzerland.</p>
<p>You can find a few more suggestions in the replies of <a href="https://twitter.com/zekjur/status/1361414105211437056">this Twitter
thread</a>. Most are either
unavailable, require a lot more DIY work (e.g. a custom case), or don‚Äôt support
25 Gbit/s.</p>
<h2 id="router-software-router7-porting">Router software: router7 porting</h2>
<p>I wrote <a href="https://router7.org/">router7</a>, my own small home internet router
software in Go, back in 2018, and have been using it ever since.</p>
<p>I don‚Äôt have time to support any users, so I don‚Äôt recommend anyone else use
router7, unless the project really excites you, and the lack of support doesn‚Äôt
bother you! Instead, you might be better served with a more established and
supported router software option. Popular options include
<a href="https://en.wikipedia.org/wiki/OPNsense">OPNsense</a> or
<a href="https://en.wikipedia.org/wiki/OpenWrt">OpenWrt</a>. See also Wikipedia‚Äôs <a href="https://en.wikipedia.org/wiki/List_of_router_and_firewall_distributions">List of
router and firewall
distributions</a>.</p>
<p>To make router7 work for this 25 Gbit/s router PC build, I had to make a few
adjustments.</p>
<p>Because we are using UEFI network boot instead of BIOS network boot, I first had
to make the PXE boot implementation in router7‚Äôs installer <a href="https://github.com/rtr7/tools/commits/00be57a557a5fb2bf8958fbc1417f57ab17fc54b">work with UEFI PXE
boot</a>.</p>
<p>I then enabled a few additional <a href="https://github.com/rtr7/kernel/commits/8694ece47fb07ffeea8a96dc48eb8faa3969250a">kernel options for network and storage
drivers</a>
in router7‚Äôs kernel.</p>
<p>To router7‚Äôs control plane code, I <a href="https://github.com/rtr7/router7/commits/b88ddd41c377087cc4b6d1fe6c7a5550399a730c">added bridge network device
configuration</a>,
which in my previous 2-port router setup was not needed.</p>
<p>During development, I compiled a few Linux programs statically or copied them
with their dependencies (‚Üí <a href="https://gokrazy.org/prototyping/">gokrazy
prototyping</a>) to run them on router7, such as
<a href="https://manpages.debian.org/sensors.1"><code>sensors(1)</code></a>
, <a href="https://manpages.debian.org/ethtool.8"><code>ethtool(8)</code></a>
,
as well as iproute2‚Äôs <a href="https://manpages.debian.org/ip.8"><code>ip(8)</code></a>
 and <a href="https://manpages.debian.org/bridge.8"><code>bridge(8)</code></a>
 implementation.</p>
<h2 id="next-steps">Next Steps</h2>
<p>Based on my tests, the hardware I selected seems to deliver enough performance
to use it for distributing a 25 Gbit/s upstream link across multiple 10 Gbit/s
devices.</p>
<p>I won‚Äôt know for sure until the <a href="https://twitter.com/fiber7_ch">fiber7</a> Point Of
Presence (POP, German Anschlusszentrale) close to my home is upgraded to support
25 Gbit/s ‚ÄúFiber7-X2‚Äù connections. As I mentioned, unfortunately <a href="https://twitter.com/init7/status/1403287499175235584">the upgrade
plan is delayed</a> due to
the component shortage. I‚Äôll keep you posted!</p>
<h2 id="other-builds">Other Builds</h2>
<p>In case my build doesn‚Äôt exactly match your requirements, perhaps these others
help inspire you:</p>
<ul>
<li><a href="https://medium.com/@sdier/new-internet-service-calls-for-a-new-router-4dbebbdc6dbd">Scott Dier‚Äôs Intel NUC 9 Pro build</a></li>
</ul>
<h2 id="appendix-a-dpdk-test">Appendix A: DPDK test</h2>
<p><a href="https://twitter.com/ipngnetworks">Pim</a> ran a <a href="https://www.dpdk.org/">DPDK</a>
based loadtester called <a href="https://trex-tgn.cisco.com/">T-Rex</a> on this
machine. Here‚Äôs his summary of the test:</p>
<p>For DPDK, this hardware does 4x10G at 64b frames. It does not do 6x10G as it
tops out at 62Mpps using 4 cores (of 15.5Mpps per core).</p>
<p>I couldn&rsquo;t test 25G symmetric [because we lacked a 25G DAC cable], but
extrapolating from the numbers, 3 CPUs source and sink ~24.6Gbit per core, so
we&rsquo;d probably make it, leaving 1 core for OS and 2 cores for controlplane.</p>
<p>If the machine had a 12 core Ryzen, it would saturate all NICs with room to
spare. So that&rsquo;s what I&rsquo;ll end up buying :)</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test.png"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_600x0_resize_box_3.png"
  alt="DPDK test" title="DPDK test"
  width="600"
  height="447"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



]]></content>
  </entry>
</feed>
