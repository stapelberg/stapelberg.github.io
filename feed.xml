<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Michael Stapelbergs Website</title>
  <link href="https://michael.stapelberg.ch/feed.xml" rel="self"/>
  <link href="https://michael.stapelberg.ch/"/>
  <id>https://michael.stapelberg.ch/</id>
  <generator>Hugo -- gohugo.io</generator>
  <entry>
    <title type="html"><![CDATA[rsync, article 1: Scenarios]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-06-18-rsync-article-1-scenarios/"/>
    <id>https://michael.stapelberg.ch/posts/2022-06-18-rsync-article-1-scenarios/</id>
    <published>2022-06-18T15:04:00+02:00</published>
    <content type="html"><![CDATA[<p>This post is the first article in a series of blog posts about rsync, <a href="../2022-06-18-rsync-overview/">see the
Series Overview</a>.</p>
<p>To motivate why it makes sense to look at rsync, I present three scenarios for
which I have come to appreciate rsync: <a href="#dokuwiki-transfers-using-rsync">DokuWiki
transfers</a>, <a href="#software-deployment-using-rsync">Software
deployment</a> and
<a href="#backups-using-rsync">Backups</a>.</p>
<h2 id="dokuwiki-transfers-using-rsync">Scenario: DokuWiki transfers using rsync</h2>
<p>Recently, I set up a couple of tools for a website that is built on DokuWiki,
such as a dead link checker and a statistics program. To avoid overloading the
live website (and possibly causing spurious requests that interfere with
statistics), I decided it would be best to run a separate copy of the DokuWiki
installation locally. This requires synchronizing:</p>
<ol>
<li>The PHP source code files of DokuWiki itself (including plugins and configuration)</li>
<li>One text file per wiki page, and all uploaded media files</li>
</ol>
<p>A DokuWiki installation is exactly the kind of file tree that <a href="https://manpages.debian.org/scp.1"><code>scp(1)</code></a>
 cannot efficiently transfer (too many small files),
but <a href="https://manpages.debian.org/rsync.1"><code>rsync(1)</code></a>
 can! The <code>rsync</code> transfer only takes a few seconds, no matter if
it’s a full download (can be simpler for batch jobs) or an incremental
synchronization (more efficient for regular synchronizations like backups).</p>
<h2 id="software-deployment-using-rsync">Scenario: Software deployment using rsync</h2>
<p>For smaller projects where I don’t publish new versions through Docker, I
instead use a shell script to transfer and run my software on the server.</p>
<p><code>rsync</code> is a great fit here, as it transfers many small files (static assets and
templates) efficiently, only transfers the binaries that actually changed, and
doesn’t mind if the binary file it’s uploading is currently running (contrary to
<a href="https://manpages.debian.org/scp.1"><code>scp(1)</code></a>
, for example).</p>
<p>To illustrate how such a script could look like, here’s my push script for
<a href="https://codesearch.debian.net/">Debian Code Search</a>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#007020">#!/bin/zsh
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span><span style="color:#007020">set</span> -ex
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Asynchronously transfer assets while compiling:</span>
</span></span><span style="display:flex;"><span><span style="color:#666">(</span>
</span></span><span style="display:flex;"><span>    ssh root@dcs <span style="color:#4070a0">&#39;for i in $(seq 0 5); do mkdir -p /srv/dcs/shard${i}/{src,idx}; done&#39;</span>
</span></span><span style="display:flex;"><span>    ssh root@dcs <span style="color:#4070a0">&#34;adduser --disabled-password --gecos &#39;Debian Code Search&#39; dcs || true&#34;</span>
</span></span><span style="display:flex;"><span>    rsync -r systemd/ root@dcs:/etc/systemd/system/ &amp;
</span></span><span style="display:flex;"><span>    rsync -r cmd/dcs-web/templates/ root@dcs:/srv/dcs/templates/ &amp;
</span></span><span style="display:flex;"><span>    rsync -r static/ root@dcs:/srv/dcs/static/ &amp;
</span></span><span style="display:flex;"><span>    <span style="color:#007020">wait</span>
</span></span><span style="display:flex;"><span><span style="color:#666">)</span> &amp;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Compile a new Debian Code Search version:</span>
</span></span><span style="display:flex;"><span><span style="color:#bb60d5">tmp</span><span style="color:#666">=</span><span style="color:#007020;font-weight:bold">$(</span>mktemp -d<span style="color:#007020;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span>mkdir <span style="color:#bb60d5">$tmp</span>/bin
</span></span><span style="display:flex;"><span><span style="color:#bb60d5">GOBIN</span><span style="color:#666">=</span><span style="color:#bb60d5">$tmp</span>/bin <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span><span style="color:#bb60d5">GOAMD64</span><span style="color:#666">=</span>v3 <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  go install <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  -ldflags <span style="color:#4070a0">&#39;-X github.com/Debian/dcs/cmd/dcs-web/common.Version=$version&#39;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  github.com/Debian/dcs/cmd/...
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Transfer the Debian Code Search binaries:</span>
</span></span><span style="display:flex;"><span>rsync <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  <span style="color:#bb60d5">$tmp</span>/bin/dcs-<span style="color:#666">{</span>web,source-backend,package-importer,compute-ranking,feeder<span style="color:#666">}</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  <span style="color:#bb60d5">$tmp</span>/bin/dcs <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  root@dcs:/srv/dcs/bin/
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Wait for the asynchronous asset transfer to complete:</span>
</span></span><span style="display:flex;"><span><span style="color:#007020">wait</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"># Restart Debian Code Search on the server:</span>
</span></span><span style="display:flex;"><span><span style="color:#bb60d5">UNITS</span><span style="color:#666">=(</span>dcs-package-importer.service dcs-source-backend.service dcs-compute-ranking.timer dcs-web.service<span style="color:#666">)</span>
</span></span><span style="display:flex;"><span>ssh root@dcs systemctl daemon-reload <span style="color:#4070a0;font-weight:bold">\&amp;\&amp;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  systemctl <span style="color:#007020">enable</span> <span style="color:#70a0d0;font-style:italic">${</span><span style="color:#bb60d5">UNITS</span><span style="color:#70a0d0;font-style:italic">}</span> <span style="color:#4070a0;font-weight:bold">\;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  systemctl reset-failed <span style="color:#70a0d0;font-style:italic">${</span><span style="color:#bb60d5">UNITS</span><span style="color:#70a0d0;font-style:italic">}</span> <span style="color:#4070a0;font-weight:bold">\;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  systemctl restart <span style="color:#70a0d0;font-style:italic">${</span><span style="color:#bb60d5">UNITS</span><span style="color:#70a0d0;font-style:italic">}</span> <span style="color:#4070a0;font-weight:bold">\;</span> <span style="color:#4070a0;font-weight:bold">\
</span></span></span><span style="display:flex;"><span><span style="color:#4070a0;font-weight:bold"></span>  systemctl reload nginx
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>rm -rf <span style="color:#4070a0">&#34;</span><span style="color:#70a0d0;font-style:italic">${</span><span style="color:#bb60d5">tmp</span>?<span style="color:#70a0d0;font-style:italic">}</span><span style="color:#4070a0">&#34;</span>
</span></span></code></pre></div><h2 id="backups-using-rsync">Scenario: Backups using rsync</h2>
<p>The first backup system I used was
<a href="https://en.wikipedia.org/wiki/Bacula">bacula</a>, which Wikipedia describes as an
enterprise-level backup system. That certainly matches my impression, both in
positive and negative ways: while bacula is very powerful, some seemingly common
operations turn out quite complicated in bacula. Restoring a single file or
directory tree from a backup was always more effort than I thought
reasonable. For some reason, I often had to restore backup catalogs before I was
able to access the backup contents (I don’t remember the exact details).</p>
<p>When moving apartment last time, I used the opportunity to change my backup
strategy. Instead of using complicated custom software with its own volume file
format (like bacula), I wanted backed-up files to be usable on the file system
level with standard tools like <code>rm</code>, <code>ls</code>, <code>cp</code>, etc.</p>
<p>Working with files in a regular file system makes day-to-day usage easier, and
also ensures that when my network storage hardware dies, I can just plug the
hard disk into any PC, boot a Linux live system, and recover my data.</p>
<p>To back up machines onto my <a href="/posts/2019-10-23-nas/">network storage PC</a>’s file
system, I ended up with a <a href="https://github.com/stapelberg/zkj-nas-tools/blob/85e445a284c89590d595a52e16cb6dd652b1388e/dornroeschen/backup-remote.pl">hand-written rsync wrapper
script</a>
that copies the full file system of each machine into dated directory trees:</p>
<pre tabindex="0"><code>storage2# ls -l backup/midna/2022-05-27
bin   boot  etc  home  lib  lib64  media  opt
proc  root  run  sbin  sys  tmp    usr    var

storage2# ls -l backup/midna/2022-05-27/home/michael/configfiles/zshrc
-rw-r--r--. 7 1000 1000 14554 May  9 19:37 backup/midna/2022-05-27/home/michael/configfiles/zshrc
</code></pre><p>To revert my <code>~/.zshrc</code> to an older version, I can <a href="https://manpages.debian.org/scp.1"><code>scp(1)</code></a>
 the file:</p>
<pre tabindex="0"><code>midna% scp storage2:/srv/backup/midna/2022-05-27/home/michael/configfiles/zshrc ~/configfiles/zshrc
</code></pre><p>To compare a whole older source tree, I can mount it using <a href="https://manpages.debian.org/sshfs.1"><code>sshfs(1)</code></a>
:</p>
<pre tabindex="0"><code>midna% mkdir /tmp/2022-05-27-i3
midna% sshfs storage2:/srv/backup/midna/2022-05-27/$HOME/i3 /tmp/2022-05-27-i3
midna% diff -ur /tmp/2022-05-27-i3 ~/i3/
</code></pre><h3 id="incremental-backups">Incremental backups</h3>
<p>Of course, the idea is not to transfer the full machine contents every day, as
that would quickly fill up my network storage’s 16 TB disk! Instead, we can use
rsync’s <code>--link-dest</code> option to elegantly deduplicate files using file system
hard links:</p>
<pre tabindex="0"><code>backup/midna/2022-05-26
backup/midna/2022-05-27 # rsync --link-dest=2022-05-26
</code></pre><p>To check the de-duplication level, we can use <a href="https://manpages.debian.org/du.1"><code>du(1)</code></a>
,
first on a single directory:</p>
<pre tabindex="0"><code>storage2# du -hs 2022-05-27 
113G	2022-05-27
</code></pre><p>…and then on two subsequent directories:</p>
<pre tabindex="0"><code>storage2# du -hs 2022-05-25 2022-05-27
112G	2022-05-25
7.3G	2022-05-27
</code></pre><p>As you can see, the 2022-05-27 backup took 7.3 GB of disk space, and 104.7 GB
were re-used from the previous backup(s).</p>
<p>To print all files which have changed since the last backup, we can use:</p>
<pre tabindex="0"><code>storage2# find 2022-05-27 -type f -links 1 -print
</code></pre><h3 id="limitation-file-system-compatibility">Limitation: file system compatibility</h3>
<p>A significant limitation of backups at the file level is that the destination
file system (network storage) needs to support all the file system features used
on the machines you are backing up.</p>
<p>For example, if you use <a href="https://help.ubuntu.com/community/FilePermissionsACLs">POSIX
ACLs</a> or <a href="https://wiki.archlinux.org/title/File_permissions_and_attributes#Extended_attributes">Extended
attributes</a>
(possibly for <a href="https://wiki.archlinux.org/title/Capabilities">Capabilities</a> or
<a href="https://wiki.archlinux.org/title/SELinux">SELinux</a>), you need to ensure that
your backup file system has these features enabled, and that you are using <a href="https://manpages.debian.org/rsync.1"><code>rsync(1)</code></a>
’s <code>--xattrs</code> (or <code>-X</code> for short) option.</p>
<p>This can turn from a pitfall into a dealbreaker as soon as multiple operating
systems are involved. For example, the <code>rsync</code> version on macOS has
<a href="https://github.com/apple-oss-distributions/rsync/blob/aa4e500aa53b9417014c718a5ff0e29215f08e48/rsync/generator.c#L1447">Apple-specific
code</a>
to work with Apple <a href="https://en.wikipedia.org/wiki/Resource_fork">resource forks</a>
and other extended attributes. It’s not clear to me whether macOS <code>rsync</code> can
send files to Linux <code>rsync</code>, restore them, and end up with the same system state.</p>
<p>Luckily, I am only interested in backing up Linux systems, or merely home
directories of non-Linux systems, where no extended attributes are used.</p>
<h3 id="downside-slow-bulk-operations-disk-usage-deletion">Downside: slow bulk operations (disk usage, deletion)</h3>
<p>The biggest downside of this architecture is that working with the directory
trees in bulk can be very slow, especially when using a hard disk instead of an
SSD. For example, deleting old backups can easily take many hours to multiple
days (!). Sure, you can just let the <code>rm</code> command run in the background, but
it’s annoying nevertheless.</p>
<p>Even merely calculating the disk space usage of each directory tree is a
painfully slow operation. I tried using stateful disk usage tools like
<a href="http://duc.zevv.nl/">duc</a>, but it <a href="https://github.com/zevv/duc/issues/240">didn’t work
reliably</a> on my backups.</p>
<p>In practice, I found that for tracking down large files, using <a href="https://manpages.debian.org/ncdu.1"><code>ncdu(1)</code></a>
 on any recent backup typically quickly shows the
large file. In one case, I found <code>var/lib/postgresql</code> to consume many
gigabytes. I excluded it in favor of using <a href="https://manpages.debian.org/pg_dump.1"><code>pg_dump(1)</code></a>
, which resulted in much smaller backups!</p>
<p>Unfortunately, even when using an SSD, determining which files take up most
space of a full backup takes a few minutes:</p>
<pre tabindex="0"><code>storage2# time du -hs backup/midna/2022-06-09
742G	backup/midna/2022-06-09

real	8m0.202s
user	0m11.651s
sys	2m0.731s
</code></pre><h3 id="backup-transport-ssh-and-scheduling">Backup transport (SSH) and scheduling</h3>
<p>To transfer data via <code>rsync</code> from the backup host to my network storage, I’m
using SSH.</p>
<p>Each machine’s SSH access is restricted in my network storage’s SSH <a href="https://manpages.debian.org/authorized_keys.5"><code>authorized_keys(5)</code></a>
 config file to not allow arbitrary
commands, but to perform just a specific operation. The only allowed operation
in my case is running <code>rrsync</code> (“restricted rsync”) in a container whose file
system only contains the backup host’s sub directory, e.g. .<code>websrv.zekjur.net</code>:</p>
<pre tabindex="0"><code>command=&#34;/bin/docker run --log-driver none -i -e SSH_ORIGINAL_COMMAND -v /srv/backup/websrv.zekjur.net:/srv/backup/websrv.zekjur.net stapelberg/docker-rsync /srv/backup/websrv.zekjur.net&#34;,no-port-forwarding,no-X11-forwarding ssh-ed25519 AAAAC3…
</code></pre><p>(The <a href="/posts/2016-11-21-gigabit-nas-coreos/#dockerfiles-rrsync-and-samba">corresponding <code>Dockerfile</code> can be found in my Gigabit NAS
article</a>.)</p>
<p>To trigger such an SSH-protected <code>rsync</code> transfer remotely, I’m using a small
custom scheduling program called
<a href="https://github.com/stapelberg/zkj-nas-tools/tree/master/dornroeschen">dornröschen</a>. The
program arranges for all involved machines to be powered on (using
<a href="https://en.wikipedia.org/wiki/Wake-on-LAN">Wake-on-LAN</a>) and then starts
<code>rsync</code> via <em>another operation-restricted SSH connection</em>.</p>
<p>You could easily replace this with a cron job if you don’t care about WOL.</p>
<p>The architecture looks like this:</p>
<p><img src="2022-05-29-backup-architecture.svg" alt="backup architecture"></p>
<p>The operation-restricted SSH connection on each backup host is configured in
SSH’s <a href="https://manpages.debian.org/authorized_keys.5"><code>authorized_keys(5)</code></a>
 config file:</p>
<pre tabindex="0"><code>command=&#34;/root/backup-remote.pl&#34;,no-port-forwarding,no-X11-forwarding ssh-ed25519 AAAAC3…
</code></pre><h2 id="next-up">Next up</h2>
<p>The second article in this series is “rsync, article 2: Surroundings” (To be
published). Now that we know what to use rsync for, how can we best integrate
rsync into monitoring and alerting, and on which operating systems does it work?</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[rsync: Series Overview]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-06-18-rsync-overview/"/>
    <id>https://michael.stapelberg.ch/posts/2022-06-18-rsync-overview/</id>
    <published>2022-06-18T15:00:00+02:00</published>
    <content type="html"><![CDATA[<p>For many years, I was only a casual user of
<a href="https://en.wikipedia.org/wiki/Rsync">rsync</a> and used it mostly for one-off file
transfers.</p>
<p>Over time, I found rsync useful in more and more cases, and would recommend
every computer user put this great tool into their toolbox 🛠 🧰 !</p>
<p>I’m publishing a series of blog posts about rsync:</p>
<ul>
<li><a href="../2022-06-18-rsync-article-1-scenarios/">rsync, article 1: Scenarios</a>. To
motivate why it makes sense to look at rsync, I present three scenarios for
which I have come to appreciate rsync: DokuWiki transfers, Software deployment
and Backups.</li>
<li>rsync, article 2: Surroundings (To be published). Now that we know what to use
rsync for, how can we best integrate rsync into monitoring and alerting, and
on which operating systems does it work?</li>
<li>rsync, article 3: How does rsync work? (To be published). With rsync up and
running, it’s time to take a peek under the hood of rsync to better understand
how it works.</li>
<li>rsync, article 4: My own rsync implementation (To be published.)</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[25 Gbit/s HTTP and HTTPS download speeds]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/"/>
    <id>https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/</id>
    <published>2022-05-14T16:18:00+02:00</published>
    <content type="html"><![CDATA[<p>Now that I <a href="/posts/2022-04-23-fiber7-25gbit-upgrade/">recently upgraded my internet connection to 25
Gbit/s</a>, I was curious how hard or
easy it is to download files via HTTP and HTTPS over a 25 Gbit/s link. I don’t
have another 25 Gbit/s connected machine other than my router, so I decided to
build a little lab for tests like these 🧑‍🔬</p>
<h2 id="hardware-and-software-setup">Hardware and Software setup</h2>
<p>I found a Mellanox ConnectX-4 Lx for the comparatively low price of 204 CHF on
digitec:</p>















<a href="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0209.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0209_hu855bbe0a9c47ac557e5b09db74fa3b06_1118443_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0209_hu855bbe0a9c47ac557e5b09db74fa3b06_1118443_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0209_hu855bbe0a9c47ac557e5b09db74fa3b06_1118443_600x0_resize_q75_box.jpg"
  
  width="600"
  height="480"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>To connect it to my router, I ordered a MikroTik XS+DA0003 SFP28/SFP+ Direct
Attach Cable (DAC) with it. I installed the network card into my old workstation
(on the right) and connected it with the 25 Gbit/s DAC to router7 (on the left):</p>















<a href="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0204.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0204_hue1ce97509a6d1573a4d6789b4fcce12c_1559726_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0204_hue1ce97509a6d1573a4d6789b4fcce12c_1559726_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-05-14-http-and-https-download-25gbit/IMG_0204_hue1ce97509a6d1573a4d6789b4fcce12c_1559726_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="25-gbits-router-left">25 Gbit/s router (left)</h3>
<table>
<thead>
<tr>
<th>Component</th>
<th>Model</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mainboard</td>
<td>ASRock B550 Taichi</td>
</tr>
<tr>
<td>CPU</td>
<td>AMD Ryzen 5 5600X 6-Core Processor</td>
</tr>
<tr>
<td>Network card</td>
<td><a href="https://www.fs.com/de/products/75603.html">Intel XXV710</a></td>
</tr>
<tr>
<td>Linux</td>
<td>Linux 5.17.4 (<a href="https://router7.org">router7</a>)<br>curl 7.83.0 from debian bookworm<br>Go <code>net/http</code> from Go 1.18</td>
</tr>
</tbody>
</table>
<p>router7 comes with <a href="https://en.wikipedia.org/wiki/TCP_congestion_control#TCP_BBR">TCP
BBR</a> enabled by
default.</p>
<h3 id="old-workstation-right">Old workstation (right)</h3>
<table>
<thead>
<tr>
<th>Component</th>
<th>Model</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mainboard</td>
<td>ASUS PRIME Z370-A</td>
</tr>
<tr>
<td>CPU</td>
<td>Intel i9-9900K CPU @ 3.60GHz</td>
</tr>
<tr>
<td>Network card</td>
<td>Mellanox ConnectX-4</td>
</tr>
<tr>
<td>Linux</td>
<td>5.17.5 (Arch Linux)<br>nginx 1.21.6<br>caddy 2.4.3</td>
</tr>
</tbody>
</table>
<h2 id="test-preparation">Test preparation</h2>
<p>Before taking any measurements, I do one full download so that the file contents
are entirely in the Linux page cache, and the measurements therefore no longer
contain the speed of the disk.</p>
<p><code>big.img</code> in the tests below refers to the 35 GB test file I’m downloading,
which consists of distri-disk.img repeated 5 times.</p>
<h2 id="http">T1: HTTP download speed (unencrypted)</h2>
<h3 id="http1">T1.1: Single TCP connection</h3>
<p>The simplest test is using just a single TCP connection, for example:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>curl -v -o /dev/null http://oldmidna:8080/distri/tmp/big.img
</span></span><span style="display:flex;"><span>./httpget25 http://oldmidna:8080/distri/tmp/big.img
</span></span></code></pre></div><table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>curl</strong></td>
<td><strong>nginx</strong></td>
<td><strong>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</strong></td>
</tr>
<tr>
<td>curl</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (20em / 10)); background-color: blue; color: white">20</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (20.2em / 10)); background-color: blue; color: white">20.2</div></div>

</td>
</tr>
</tbody>
</table>
<p>curl can saturate a 25 Gbit/s link without any trouble.</p>
<p>The Go <code>net/http</code> package is slower and comes in at 20 Gbit/s.</p>
<h3 id="http4">T1.2: Multiple TCP connections</h3>
<p>Running 4 of these downloads concurrently is a reliable and easy way to saturate
a 25 Gbit/s link:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">for</span> i in <span style="color:#007020;font-weight:bold">$(</span>seq <span style="color:#40a070">0</span> 4<span style="color:#007020;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  curl -v -o /dev/null http://oldmidna:8080/distri/tmp/big.img &amp;
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">done</span>
</span></span></code></pre></div><table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>curl</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
</tbody>
</table>
<h2 id="https">T2: HTTPS download speed (encrypted)</h2>
<p>At link speeds this high, enabling TLS slashes bandwidth in half or worse.</p>
<p>Using 4 TCP connections allows saturating a 25 Gbit/s link.</p>
<p>Caddy uses more CPU to serve files compared to nginx.</p>
<h3 id="https1">T2.1: Single TCP connection</h3>
<p>This test works the same as T1.1, but with a HTTPS URL:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>curl -v -o /dev/null --insecure https://oldmidna:8443/distri/tmp/big.img
</span></span><span style="display:flex;"><span>./httpget25 https://oldmidna:8443/distri/tmp/big.img
</span></span></code></pre></div><table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (8em / 10)); background-color: blue; color: white">8</div></div>

</td>
</tr>
<tr>
<td>curl</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (7.5em / 10)); background-color: blue; color: white">7.5</div></div>

</td>
</tr>
<tr>
<td><strong>Go</strong></td>
<td><strong>nginx</strong></td>
<td><strong>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (12em / 10)); background-color: blue; color: white">12</div></div>

</strong></td>
</tr>
<tr>
<td>Go</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (7.2em / 10)); background-color: blue; color: white">7.2</div></div>

</td>
</tr>
</tbody>
</table>
<h3 id="https4">T2.2: Multiple TCP connections</h3>
<p>This test works the same as T1.2, but with a HTTPS URL:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">for</span> i in <span style="color:#007020;font-weight:bold">$(</span>seq <span style="color:#40a070">0</span> 4<span style="color:#007020;font-weight:bold">)</span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">do</span>
</span></span><span style="display:flex;"><span>  curl -v -o /dev/null --insecure https://oldmidna:8443/distri/tmp/big.img &amp;
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">done</span>
</span></span></code></pre></div><p>Curiously, the Go <code>net/http</code> client downloading from caddy cannot saturate a 25
Gbit/s link.</p>
<table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>curl</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>caddy</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (21.6em / 10)); background-color: blue; color: white">21.6</div></div>

</td>
</tr>
</tbody>
</table>
<h2 id="httpsktls">T3: HTTPS with Kernel TLS (KTLS)</h2>
<p>Linux 4.13 got support for Kernel TLS back in 2017.</p>
<p>nginx 1.21.4 introduced support for Kernel TLS, and they have a <a href="https://www.nginx.com/blog/improving-nginx-performance-with-kernel-tls/">blog post on
how to configure
it</a>.</p>
<p>In terms of download speeds, there is no difference with or without KTLS. But,
enabling KTLS noticeably reduces CPU usage, from ≈10% to a steady 2%.</p>
<p>For even newer network cards such as the Mellanox ConnectX-6, the kernel can
even offload TLS onto the network card!</p>
<h3 id="httpsktls1">T3.1: Single TCP connection</h3>
<table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (8em / 10)); background-color: blue; color: white">8</div></div>

</td>
</tr>
<tr>
<td><strong>Go</strong></td>
<td><strong>nginx</strong></td>
<td><strong>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (12em / 10)); background-color: blue; color: white">12</div></div>

</strong></td>
</tr>
</tbody>
</table>
<h3 id="httpsktls4">T3.2: Multiple TCP connections</h3>
<table>
<thead>
<tr>
<th>Client</th>
<th>Server</th>
<th>Gbit/s</th>
</tr>
</thead>
<tbody>
<tr>
<td>curl</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
<tr>
<td>Go</td>
<td>nginx</td>
<td>
<div class="barcon" style="width: calc(2 * 2.34em)"><div class="bar" style="width: calc(2 * (23.4em / 10)); background-color: blue; color: white">23.4</div></div>

</td>
</tr>
</tbody>
</table>
<h2 id="conclusions">Conclusions</h2>
<p>When downloading from nginx with 1 TCP connection, with TLS encryption enabled
(HTTPS), the Go <code>net/http</code> client is faster than curl!</p>
<p>Caddy is slightly slower than nginx, which manifests itself in slower speeds
with curl and even slower speeds with Go’s <code>net/http</code>.</p>
<p>To max out 25 Gbit/s, even when using TLS encryption, just use 3 or more
connections in parallel. This helps with HTTP and HTTPS, with any combination of
client and server.</p>
<h2 id="appendix">Appendix</h2>
<details>
<summary>Go <code>net/http</code> test program <code>httpget25.go</code></summary>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">package</span> main
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">import</span> (
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;crypto/tls&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;flag&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;fmt&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;io&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;io/ioutil&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;log&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#4070a0">&#34;net/http&#34;</span>
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">httpget25</span>() <span style="color:#902000">error</span> {
</span></span><span style="display:flex;"><span>	http.DefaultTransport.(<span style="color:#666">*</span>http.Transport).TLSClientConfig = <span style="color:#666">&amp;</span>tls.Config{InsecureSkipVerify: <span style="color:#007020;font-weight:bold">true</span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">for</span> _, arg <span style="color:#666">:=</span> <span style="color:#007020;font-weight:bold">range</span> flag.<span style="color:#06287e">Args</span>() {
</span></span><span style="display:flex;"><span>		resp, err <span style="color:#666">:=</span> http.<span style="color:#06287e">Get</span>(arg)
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>			<span style="color:#007020;font-weight:bold">return</span> err
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		<span style="color:#007020;font-weight:bold">if</span> resp.StatusCode <span style="color:#666">!=</span> http.StatusOK {
</span></span><span style="display:flex;"><span>			<span style="color:#007020;font-weight:bold">return</span> fmt.<span style="color:#06287e">Errorf</span>(<span style="color:#4070a0">&#34;unexpected HTTP status code: want %v, got %v&#34;</span>, http.StatusOK, resp.Status)
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		io.<span style="color:#06287e">Copy</span>(ioutil.Discard, resp.Body)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020;font-weight:bold">nil</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">func</span> <span style="color:#06287e">main</span>() {
</span></span><span style="display:flex;"><span>	flag.<span style="color:#06287e">Parse</span>()
</span></span><span style="display:flex;"><span>	<span style="color:#007020;font-weight:bold">if</span> err <span style="color:#666">:=</span> <span style="color:#06287e">httpget25</span>(); err <span style="color:#666">!=</span> <span style="color:#007020;font-weight:bold">nil</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#06287e">Fatal</span>(err)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></details>
<details>
<summary>Caddy config file <code>Caddyfile</code></summary>
<pre tabindex="0"><code>{
  local_certs
  http_port 8080
  https_port 8443
}

http://oldmidna:8080 {
  file_server browse
}

https://oldmidna:8443 {
  file_server browse
}
</code></pre></details>
<details>
<summary>nginx installation instructions</summary>
<pre tabindex="0"><code>mkdir -p ~/lab25
cd ~/lab25

wget https://nginx.org/download/nginx-1.21.6.tar.gz
tar tf nginx-1.21.6.tar.gz

wget https://www.openssl.org/source/openssl-3.0.3.tar.gz
tar xf openssl-3.0.3.tar.gz

cd nginx-1.21.6
./configure --with-http_ssl_module --with-http_v2_module --with-openssl=$HOME/lab25/openssl-3.0.3 --with-openssl-opt=enable-ktls
make -j8
cd objs
./nginx -c nginx.conf -p $HOME/lab25
</code></pre></details>
<details>
<summary>nginx config file <code>nginx.conf</code></summary>
<pre tabindex="0"><code>worker_processes  auto;

pid        logs/nginx.pid;

daemon off;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    access_log /home/michael/lab25/logs/access.log  combined;

    sendfile        on;
    sendfile_max_chunk 2m;

    keepalive_timeout  65;

    server {
        listen       8080;
        listen [::]:8080;
        server_name  localhost;

        root /srv/repo.distr1.org/;

        location / {
            index index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location /distri {
            autoindex on;
        }
    }

    server {
        listen 8443 ssl;
        listen [::]:8443 ssl;
        server_name localhost;

        ssl_certificate nginx-ecc-p256.pem;
        ssl_certificate_key nginx-ecc-p256.key;

        #ssl_conf_command Options KTLS;

        ssl_buffer_size 32768;
        ssl_protocols TLSv1.3;

        root /srv/repo.distr1.org/;

        location / {
            index index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location /distri {
            autoindex on;
        }
    }
}
</code></pre></details>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[My upgrade to 25 Gbit/s Fiber To The Home]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/"/>
    <id>https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/</id>
    <published>2022-04-23T16:00:00+02:00</published>
    <content type="html"><![CDATA[<p>My favorite internet service provider, init7, is rolling out faster speeds with their infrastructure upgrade. Last week, the point of presence (POP) that my apartment’s fiber connection terminates in was upgraded, so now I am enjoying a 25 Gbit/s fiber internet connection!</p>
<h2 id="firstinternet">My first internet connections</h2>
<p>(Feel free to skip right to the <a href="#announcement">25 Gbit/s announcement</a> section, but I figured this would be a good point to reflect on the last 20 years of internet connections for me!)</p>
<p>The first internet connection that I consciously used was a symmetric DSL connection that <a href="https://rent-a-guru.de">my dad († 2020)</a> shared between his home office and the rest of the house, which was around the year 2000. My dad was an early adopter and was connected to the internet well before then using dial up connections, but the SDSL connection in our second house was the first connection I remember using myself. It wasn’t particularly fast in terms of download speed — I think it delivered 256 kbit/s or something along those lines.</p>
<p>I encountered two surprises with this internet connection. The first surprise was that the upload speed (also 256 kbit/s — it was a symmetric connection) was faster than other people’s. At the time, even DSL connections with much higher download speeds were asymmetric (ADSL) and came with only 128 kbit/s upload. I learnt this while making first contact with file sharing: people kept asking me to stay online so that their transfers would complete more quickly.</p>
<p>The second surprise was the concept of a metered connection, specifically one where you pay more the more data you transfer. During the aforementioned file sharing experiments, it never crossed my mind that down- or uploading files could result in extra charges.</p>
<p>These two facts combined resulted in a 3000 € surprise bill for my dad!</p>
<p>Luckily, his approach to solve this problem wasn’t to restrict my internet usage, but rather to buy a cheap, separate ADSL flatrate line for the family (from Telekom, which he hated), while he kept the good SDSL metered line for his business.</p>
<p>I still vividly remember the first time that ADSL connection synchronized. It was a massive upgrade in download speed (768 kbit/s!), but a downgrade in upload speed (128 kbit/s). But, because it was a flatrate, it made possible new use cases for my dad, who would jump on this opportunity to download a number of CD images to upgrade the software of his SGI machines.</p>
<p>The different connection speeds and characteristics have always interested me, and I used several other connections over the years, all of which felt limiting. The ADSL connection at my parent’s place started at 1 Mbit/s, was upgraded first to 3 Mbit/s, then 6 Mbit/s, and eventually reached its limit at 16 Mbit/s. When I spent one semester in Ireland, I had a 9 Mbit/s ADSL connection, and then later in Zürich I started out with a 15 Mbit/s ADSL connection.</p>
<p>All of these connections have always felt limiting, like peeking through the keyhole to see a rich world behind, but not being able to open the door. We’ve had to set up (and tune) traffic shaping, and coordinate when large downloads were okay.</p>
<h2 id="firstfiber">My first fiber connection</h2>
<p>The dream was always to leave ADSL behind and get a fiber connection. The
advantages are numerous: lower latency (ADSL came with 40 ms at the time), much
higher bandwidth (possibly Gigabit/s?) and typically the connection was
established via ethernet (instead of PPPoE). Most importantly, once the fiber is
there, you can upgrade both ends to achieve higher speeds.</p>
<p>In Zürich, I managed to get a fiber connection set up in my apartment after fighting bureaucracy for many months. The issue was that there was no permission slip on file at Swisscom. Either the owner of my apartment never signed it to begin with, or it got lost. This is not a state that the online fiber availability checker can represent, but once you know it, the fix is easy: just have Swisscom send out the form again, have the owner sign it, and a few weeks later, you can order!</p>
<p>One wrinkle was that availability was only fixed in the Swisscom checker, and it was unclear when EWZ or other providers would get an updated data dump. Hence, I ordered Swisscom fiber to get things moving as quick as possible, and figured I could switch to a different provider later.</p>
<p>Here’s a picture of when the electrician pulled the fiber from the building entry endpoint (BEP) in the basement into my flat, from March 2014:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2014-03-26-fiber-apartment.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2014-03-26-fiber-apartment_hu0f3ae1648cd06c8d0596b6712702fd43_157282_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2014-03-26-fiber-apartment_hu0f3ae1648cd06c8d0596b6712702fd43_157282_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2014-03-26-fiber-apartment_hu0f3ae1648cd06c8d0596b6712702fd43_157282_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="switching">Switching to fiber7</h2>
<p>Only two months after I first got my fiber connection, init7 launched their fiber7 offering, and I switched from Swisscom to fiber7 as quickly as I could.</p>
<p>The switch was worth it in every single dimension:</p>
<ul>
<li>Swisscom charged over 200 CHF per month for a 1 Gbit/s download, 100 Mbit/s upload fiber connection. fiber7 costs only 65 CHF per month and comes with a symmetric 1 Gbit/s connection. (Other providers had to follow, so now symmetric is standard.)</li>
<li>init7’s network performs much better than Swisscom’s: ping times dropped when I switched, and downloads are generally much faster. Note that this is with <em>the same physical fiber line</em>, so the difference is thanks to the numerous peerings that init7 maintains.</li>
<li>init7 gives you a static IPv6 prefix (if you want) for free, and even delegates reverse DNS to your servers of choice.</li>
<li>I enjoy init7’s unparalleled transparency. For example, check out <a href="https://blog.init7.net/de/rentabilitatsrechnung/">the blog post about cost calculation</a> if you’re ever curious if there could be a fiber7 POP in your area.</li>
</ul>
<p>I have been very happy with my fiber7 connection ever since. <a href="/posts/2014-09-05-fiber7_performance/">What I wrote in 2014 regarding its performance</a> remained true over the years — downloads were always fast for me, latencies were low, outages were rare (and came with good explanations).</p>
<p>I switched hardware multiple times over the years:</p>
<ul>
<li>First, I started with the <a href="/posts/2014-08-11-fiber7_ubnt_erlite/">Ubiquiti EdgeRouter Lite</a> which could handle the full Gigabit line rate (the MikroTik router I originally ordered maxed out at about 500 Mbit/s!).</li>
<li>In 2017, I switched to the <a href="/posts/2017-03-25-turris-omnia/">Turris Omnia</a>, an open hardware, open source software router that comes with automated updates.</li>
<li>In July 2018, after my connectivity was broken due to an incompatibility between the DHCPv6 client on the Turris Omnia and fiber7, I started developing my own <a href="https://router7.org">router7</a> in Go, <a href="/posts/2017-08-19-golang_favorite/">my favorite programming language</a>, mostly for fun, but also as a proof of concept for some cool features I think routers should have. For example, you can retro-actively start up Wireshark and open up a live ring buffer of the last few hours of network configuration traffic.</li>
</ul>
<p>Notably, init7 encourages people to use their preferred router (<a href="https://fsfe.org/activities/routers/routers.en.html">Router
Freedom</a>).</p>
<h2 id="announcement">The 25 Gbit/s announcement</h2>
<p>Over the years, other Swiss internet providers such as Swisscom and Salt introduced 10 Gbit/s offerings, so an obvious question was when init7 would follow suit.</p>
<p>People who were following init7 closely already knew that an infrastructure upgrade was coming. In 2020, init7 CEO Fredy Künzler <a href="https://twitter.com/kuenzler/status/1317841532813254659">disclosed that in 2021, init7 would start offering 10 Gbit/s</a>.</p>
<p>What nobody expected before init7 announced it on their seventh birthday, however, was that init7 started offering not only 10 Gbit/s (Fiber7-X), but also 25 Gbit/s connections (Fiber7-X2)! 🤯</p>
<p>This was init7’s announcement on Twitter:</p>
<blockquote class="twitter-tweet" data-dnt="true"><p lang="de" dir="ltr">Fünfundzwanzig ist das neue <a href="https://twitter.com/hashtag/Gigabit?src=hash&amp;ref_src=twsrc%5Etfw">#Gigabit</a>.<br><br>Sieben Jahre nach dem Launch von <a href="https://twitter.com/hashtag/Fiber7?src=hash&amp;ref_src=twsrc%5Etfw">#Fiber7</a> zünden wir die nächste Stufe 🚀 - Fiber7-X (10Gbps) und Fiber7-X2 (25Gbps) - zum selben Preis: CHF 777 pro Jahr.<br><br>Unsere Medienmitteilung: <a href="https://t.co/UnnWTexcD0">https://t.co/UnnWTexcD0</a> <a href="https://twitter.com/hashtag/MaxFix?src=hash&amp;ref_src=twsrc%5Etfw">#MaxFix</a> <a href="https://twitter.com/hashtag/FTTH?src=hash&amp;ref_src=twsrc%5Etfw">#FTTH</a> <a href="https://twitter.com/hashtag/Glasfaser?src=hash&amp;ref_src=twsrc%5Etfw">#Glasfaser</a></p>&mdash; Init7 (AS13030) (@init7) <a href="https://twitter.com/init7/status/1397111796914327552?ref_src=twsrc%5Etfw">May 25, 2021</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>With this move, init7 has done it again: they introduced an offer that is better than anything else in the Swiss internet market, perhaps even world-wide!</p>
<p>One interesting aspect is init7’s so-called «<a href="https://www.init7.net/en/internet/offer/">MaxFix principle</a>»: maximum speed for a fixed price. No matter if you’re using 1 Gbit/s or 25 Gbit/s, you pay the same monthly fee. init7’s approach is to make the maximum bandwidth available to you, limited only by your physical connection. This is such a breath of fresh air compared to other ISPs that think rate-limiting customers to ridiculously low speeds is somehow acceptable on an FTTH offering 🙄 (<a href="https://twitter.com/kuenzler/status/1515062457731063815">recent example</a>).</p>
<p>If you’re curious about the infrastructure upgrade that enabled this change,
check out <a href="https://blog.init7.net/de/neue-infrastruktur/">init7’s blog post about their new POP
infrastructure</a>.</p>
<h2 id="usecase">What for? The use-case</h2>
<p>A common first reaction to fast network connections is the question: “For what do you need so much bandwidth?”</p>
<p>Interestingly enough, I heard this question as recently as last year, in the context of a Gigabit internet connection! Some people can’t imagine using more than 100 Mbit/s. And sure, from a certain perspective, I get it — that 100 Mbit/s connection will not be overloaded any time soon.</p>
<p>But, looking at when a line is overloaded is only one aspect to take into account when deciding how fast of a connection you want.</p>
<p>There is a lower limit where you notice your connection is slow. Back in 2014, a 2 Mbit/s connection was noticeably slow for regular web browsing. These days, even a 10 Mbit/s connection is noticeably slow when re-opening my browser and loading a few tabs in parallel.</p>
<p>So what should you get? A 100 Mbit/s line? 500 Mbit/s? 1000 Mbit/s? Personally, I like to not worry about it and just get the fastest line I can, to reduce any and all wait times as much as possible, whenever possible. It’s a freeing feeling! Here are a few specific examples:</p>
<ul>
<li>If I have to wait only <a href="https://twitter.com/zekjur/status/1494569749195468813">17 minutes</a> to download a PS5 game, that can make the difference between an evening waiting in frustration, or playing the title I’ve been waiting for.</li>
<li>If I can run a daily backup (over the internet) of all servers I care about without worrying that the transfers interfere with my work video calls, that gives me peace of mind.</li>
<li>If I can transfer a Debian Code Search index to my computer for debugging when needed, that might make the difference between being able to use the limited spare time I have to debug or improve Debian Code Search, or having to postpone that improvement until I find more time.</li>
</ul>
<p>Aside from my distaste for waiting, a fast and reliable fiber connection enables self-hosting. In particular for my <a href="https://distr1.org/">distri Linux</a> project where I explore fast package installation, it’s very appealing to connect it to the internet on as fast a line as possible. I want to optimize all the parts: software architecture and implementation, hardware, and network connectivity. But, for my hobby project budget, getting even a 10 Gbit/s line at a server hoster is too expensive, let alone a 25 Gbit/s line!</p>
<p>Lastly, even if there isn’t really a <em>need</em> to have such a fast connection, I hope you can understand that after spending so many years of my life limited by slow connections, that I’ll happily <em>take the opportunity</em> of a faster connection whenever I can. Especially at no additional monthly cost!</p>
<h2 id="gettingready">Getting ready</h2>
<p>Right after the announcement dropped, I wanted to prepare my side of the connection and therefore ordered a MikroTik CCR2004, the only router that init7 lists as compatible. I <a href="/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/">returned the MikroTik CCR2004 shortly afterwards</a>, mostly because of its annoying fan regulation (spins up to top speed for about 1 minute every hour or so), and also because MikroTik seems to have made no progress at all since I last used their products almost 10 years ago. Table-stakes features such as DNS resolution for hostnames within the local network are still not included!</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/mikrotik-ccr2004.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_600x0_resize_q75_box.jpg"
  
  width="600"
  height="347"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>I expect that more and more embedded devices with SFP28 slots (like the MikroTik CCR2004) will become available over the next few years (hopefully with better fan control!), but at the moment, the selection seems to be rather small.</p>
<p>For my router, I instead went with a <a href="/posts/2021-07-10-linux-25gbit-internet-router-pc-build/">custom PC build</a>. Having more space available means I can run larger, slow-spinning fans that are not as loud. Plugging in high-end Intel network cards (2 × 25 Gbit/s, and 4 × 10 Gbit/s on the other one) turns a PC into a 25 Gbit/s capable router.</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-06-27-router25.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-06-27-router25_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-06-27-router25_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-06-27-router25_hu1fe795dd8828eccf339de1acf31abbd0_2106743_600x0_resize_q75_box.jpg"
  
  width="600"
  height="607"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>With my equipment sorted out, I figured it was time to actually place the order. I wasn’t in a hurry to order, because it was clear that it would be months before my POP could be upgraded. But, it can’t hurt to register my interest (just in case it influences the POP upgrade plan). Shortly after, I got back this email from init7 where they promised to send me the SFP module via post:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-16-confirmation.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-16-confirmation_hu7177e23638c82c254cf4ef8f0c721783_131592_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-16-confirmation_hu7177e23638c82c254cf4ef8f0c721783_131592_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-16-confirmation_hu7177e23638c82c254cf4ef8f0c721783_131592_600x0_resize_q75_box.jpg"
  
  width="600"
  height="338"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>And sure enough, a few days later, I received the SFP28 module in the mail:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-19-sfp-mail.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-19-sfp-mail_hu2dfb7addab9232f9b7fcfb62cf14b878_1675905_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-19-sfp-mail_hu2dfb7addab9232f9b7fcfb62cf14b878_1675905_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2021-08-19-sfp-mail_hu2dfb7addab9232f9b7fcfb62cf14b878_1675905_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>With my router build, and the SFP28 module, I had everything I needed for my side of the connection.</p>
<p>The other side of the connection was originally planned to be upgraded in fall 2021, but <a href="https://twitter.com/init7/status/1403287499175235584">the global supply shortage imposed various delays on the schedule</a>.</p>
<p>Eventually, the <a href="https://www.init7.net/en/infrastructure/fiber7-pops/">fiber7 POP list</a> showed an upgrade date of April 2022 for my POP, and that turned out to be correct.</p>
<h2 id="upgrade">The night of the upgrade</h2>
<p>I had read <a href="https://ipng.ch/s/articles/2021/08/28/fiber7-x.html">Pim’s blog post on the upgrade of the 1790BRE POP in Brüttisellen</a>, which contains a lot of super interesting details, so definitely check that one out, too!</p>
<p>Being able to plug in the SFP module into the new POP infrastructure yourself (like Pim did) sounded super cool to me, so I decided to reach out, and init7 actually agreed to let me stop by to plug in “my” fiber and SFP module!</p>
<p>Giddy with excitement, I left my place at just before 23:00 for a short walk to the POP building, which I had seen many times before, but never from the inside.</p>
<p><a href="https://twitter.com/patte8">Patrick</a>, the init7 engineer met me in front of the building and explained “Hey! You wrote my <a href="https://i3wm.org/">window manager</a>!” — what a coincidence :-). Luckily I had packed some i3 stickers that I could hand him as a small thank you.</p>
<p>Inside, I met the other init7 employee working on this upgrade. Pascal, init7’s CTO, was coordinating everything remotely.</p>
<p>Standing in front of init7’s rack, I spotted the old Cisco switch (at the bottom), and the new Cisco C9500-48Y4C switches that were already prepared (at the top). The SFP modules are for customers who decided to upgrade to 10 or 25 Gbit/s, whereas for the others, the old SFP modules would be re-used:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-12-pop-before.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-12-pop-before_hu7af45c05e7eaab656aeab8d5fe153c59_584743_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-12-pop-before_hu7af45c05e7eaab656aeab8d5fe153c59_584743_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-12-pop-before_hu7af45c05e7eaab656aeab8d5fe153c59_584743_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>We then spent the next hour pulling out fiber cables and SFP modules out of the old Cisco switch, and plugging them back into the new Cisco switch.</p>
<p>Just like the init7 engineer working with me (who is usually a software guy, too, he explained), I enjoy doing physical labor from time to time for variety. Especially with nice hardware like this, and when it’s for a good cause (faster internet)! It’s almost meditative, in a way, and I enjoyed the nice conversation we had while we were both moving the connections.</p>
<p>After completing about half of the upgrade (the top half of the old Cisco switch), I walked back to my place — still blissfully smiling all the way — to turn up my end of the connection while the others were still on site and could fix any mistakes.</p>
<p>After switching my <code>uplink0</code> network interface to the faster network card, it also took a full reboot of my router for some reason, but then it recognized the SFP28 module without trouble and successfully established a 25 Gbit/s link! 🎉 🥳</p>
<p>I did a quick speed test to confirm and called it a night.</p>
<h2 id="speedtest">Speed tests / benchmarks</h2>
<p>Just like in the early days of Gigabit connections, my internet connection is
now faster than the connection of many servers. It’s a luxury problem to be
sure, but in case you’re curious how far a 25 Gbit/s connection gets you in the
internet, in this section I collected some speed test results.</p>
<h3 id="ookla-speedtestnet">Ookla speedtest.net</h3>
<p>speedtest.net (run by Ookla) is the best way to measure fast connections that I’m aware of.</p>
<p>Here is <a href="https://www.speedtest.net/result/c/ed97e48a-3655-4fc8-8e7f-4d18d48f10f5">my first 25 Gbit/s
speedtest</a>,
which was run using the <a href="https://speedtest.init7.net/">init7 speedtest server</a>:</p>















<a href="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-14-speedtest-ookla-featured.png"><img
  srcset="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-14-speedtest-ookla-featured_hu9a3b8a18687193b143064b34e61f7b8e_236916_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-14-speedtest-ookla-featured_hu9a3b8a18687193b143064b34e61f7b8e_236916_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2022-04-23-fiber7-25gbit-upgrade/2022-04-14-speedtest-ookla-featured_hu9a3b8a18687193b143064b34e61f7b8e_236916_600x0_resize_box_3.png"
  
  width="600"
  height="237"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>I also ran speedtests to all other servers that were listed for the broader
Zürich area at the time, using the
<a href="https://hub.docker.com/r/tamasboros/ookla-speedtest">tamasboros/ookla-speedtest</a>
Docker image. As you can see, most speedtest servers are connected with a 10
Gbit/s port, and some (GGA Maur) even only with a 1 Gbit/s port:</p>
<table>
<thead>
<tr>
<th>Speedtest server</th>
<th>latency</th>
<th>download (mbps)</th>
<th>upload (mbps)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Init7 AG - Winterthur</td>
<td>1.45</td>
<td>23530.27</td>
<td>23031.24</td>
</tr>
<tr>
<td>fdcservers.net</td>
<td>18.15</td>
<td>9386.29</td>
<td>1262.92</td>
</tr>
<tr>
<td>GIB-Solutions AG - Schlieren</td>
<td>6.64</td>
<td>9154.12</td>
<td>2207.68</td>
</tr>
<tr>
<td>Monzoon Networks AG</td>
<td>0.74</td>
<td>8874.85</td>
<td>6427.66</td>
</tr>
<tr>
<td>Glattwerk AG</td>
<td>0.92</td>
<td>8719.04</td>
<td>4008.28</td>
</tr>
<tr>
<td>AltusHost B.V.</td>
<td>0.80</td>
<td>8373.34</td>
<td>8518.90</td>
</tr>
<tr>
<td>iWay AG - Zurich</td>
<td>2.13</td>
<td>8337.56</td>
<td>8194.89</td>
</tr>
<tr>
<td>Sunrise Communication AG</td>
<td>9.04</td>
<td>8279.60</td>
<td>3109.34</td>
</tr>
<tr>
<td>31173 Services AB</td>
<td>18.69</td>
<td>8279.75</td>
<td>1503.92</td>
</tr>
<tr>
<td>Wingo</td>
<td>4.25</td>
<td>6179.57</td>
<td>5248.36</td>
</tr>
<tr>
<td>Netrics Zürich AG</td>
<td>0.74</td>
<td>7910.78</td>
<td>8770.19</td>
</tr>
<tr>
<td>Cloudflare - Zurich</td>
<td>1.14</td>
<td>7410.97</td>
<td>2218.88</td>
</tr>
<tr>
<td>Netprotect - Zurich</td>
<td>0.87</td>
<td>7034.62</td>
<td>8948.01</td>
</tr>
<tr>
<td>C41.ch - Zurich</td>
<td>9.90</td>
<td>6792.60</td>
<td>690.33</td>
</tr>
<tr>
<td>Goldenphone GmbH</td>
<td>18.91</td>
<td>3116.32</td>
<td>659.23</td>
</tr>
<tr>
<td>GGA Maur</td>
<td>0.99</td>
<td>940.24</td>
<td>941.24</td>
</tr>
</tbody>
</table>
<h3 id="linux-mirrors">Linux mirrors</h3>
<p>For a few popular Linux distributions, I went through the mirror list and tried
all servers in Switzerland and Germany. Only one or two would be able to deliver
files at more than 1 Gigabit/s. Other miror servers were either capped at 1
Gigabit/s, or wouldn’t even reach that (slow disks?).</p>
<p>Here are the fast ones:</p>
<ul>
<li><strong>Debian:</strong> <code>mirror1.infomaniak.com</code> and <code>mirror2.infomaniak.com</code></li>
<li><strong>Arch Linux:</strong> <code>mirror.puzzle.ch</code></li>
<li><strong>Fedora Linux:</strong> <code>mirrors.xtom.de</code></li>
<li><strong>Ubuntu Linux:</strong> <code>mirror.netcologne.de</code> and <code>ubuntu.ch.altushost.com</code></li>
</ul>
<h3 id="iperf3">iperf3</h3>
<p>Using <code>iperf3 -P 2 -c speedtest.init7.net</code>, iperf3 shows 23 Gbit/s:</p>
<pre tabindex="0"><code>[SUM]   0.00-10.00  sec  26.9 GBytes  23.1 Gbits/sec  597             sender
[SUM]   0.00-10.00  sec  26.9 GBytes  23.1 Gbits/sec                  receiver
</code></pre><p>It’s hard to find public iperf3 servers that are connected with a fast-enough
port. I could only find one that claims to be connected via a 40 Gbit/s port,
but it was unavailable when I wanted to test.</p>
<h3 id="interested-in-a-speed-test">Interested in a speed test?</h3>
<p>Do you have a ≥ 10 Gbit/s line in Europe, too? Are you interested in a speed
test? Reach out to me and we can set something up.</p>
<h2 id="conclusion">Conclusion</h2>
<p>What an exciting time to be an init7 customer! I still can’t quite believe that
I now have a 25 Gbit/s connection in 2022, and it feels like I’m living 10 years
in the future.</p>
<p>Thank you to <a href="https://twitter.com/kuenzler">Fredy</a>,
<a href="https://twitter.com/spale75">Pascal</a>, <a href="https://twitter.com/patte8">Patrick</a>,
and all the other former and current init7 employees for showing how to run an
amazing Internet Service Provider. Thank you for letting me peek behind the
curtains, and keep up the good work! 💪</p>
<p>If you want to learn more, check out Pascal’s talk at DENOG:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/fmzst6I5LwQ" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="Wie wir unabsichtlich das schnellste residential Internet access gebaut haben - Pascal Gloor"></iframe>
</div>

]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Smart Home components 🏠]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/"/>
    <id>https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/</id>
    <published>2022-03-19T14:51:20+01:00</published>
    <content type="html"><![CDATA[<p>I have tried a bunch of different Smart Home products over the last few years
and figured I would give an overview of which ones I liked, which ones I
disliked, and how I would go about selecting good Smart Home products to buy.</p>
<h2 id="smart-lights">Smart Lights</h2>
<p>To me, the primary advantage of Smart Lights is the flexibility in where you
place extra light switches, and the extra functions that become much easier with
Smart Lights.</p>
<p>For example, I have added an extra light switch in the bed and next to the
couch, without having to have an electrician tear up the walls to add more
wiring. An “all-off” button is super handy at the end of the day or when
watching a movie.</p>
<p>Other attractive use-cases include controlling lights based on time of the day,
based on whether people are home, or based on a motion sensor.</p>
<p>I used the RGB color light bulb version of all of the below systems. In
practice, we typically don’t change the color much, but it is nice to be able to
adjust the color and brightness to something that fits the respective room. And,
every once in a while, scenes that use color are fun!</p>
<h3 id="tradfri">Moved away from: IKEA TRÅDFRI 👎</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4166.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4166_hu855bbe0a9c47ac557e5b09db74fa3b06_700735_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4166_hu855bbe0a9c47ac557e5b09db74fa3b06_700735_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4166_hu855bbe0a9c47ac557e5b09db74fa3b06_700735_600x0_resize_q75_box.jpg"
  
  width="600"
  height="600"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The first smart light system I used was IKEA TRÅDFRI. I figured as a system with
a large user base, they would be inclined to improve it over time, and
compatibility should be more likely than with other, smaller vendors.</p>
<p>Unfortunately the system is pretty much unchanged from when I first bought it
many years ago.</p>
<p>You can easily find documentation about the API for using the TRÅDFRI gateway
programmatically, but when I looked for available Go packages, I decided to
use COAP and DTLS myself back in 2019 for lack of an attractive Go package.</p>
<p>The <strong>light switches</strong> are good in terms of features, and easy to install: you
can just remove the old switch and glue the TRÅDFRI switch over the existing
switch.</p>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4620.JPG"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4620_hudd9dde466230b7da3c81dd3aa9f33f2d_584934_1200x0_resize_q75_box.JPG 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4620_hudd9dde466230b7da3c81dd3aa9f33f2d_584934_1800x0_resize_q75_box.JPG 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4620_hudd9dde466230b7da3c81dd3aa9f33f2d_584934_600x0_resize_q75_box.JPG"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4622.JPG"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4622_huacdef596d98276810695f10a2865fbf7_637307_1200x0_resize_q75_box.JPG 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4622_huacdef596d98276810695f10a2865fbf7_637307_1800x0_resize_q75_box.JPG 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4622_huacdef596d98276810695f10a2865fbf7_637307_600x0_resize_q75_box.JPG"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The downside of the light switches is that they are flimsy: because the switch
is magnetically held in place in its case, it can easily fall on the floor when
you bump against it.</p>
<p>Pairing the devices was always tricky for me. It got easier when I turned off
all other ZigBee devices in my apartment before doing anything with IKEA
devices.</p>
<p>At multiple points, the devices lost their pairing. It might have been when they
ran out of battery.</p>
<p>The <strong>battery lifetime</strong> of the light switches was very poor — only about a year
on average. They use the CR2032 form factor, which my charger does not support,
so I couldn’t use rechargables.</p>
<p>Swapping out the batteries and re-pairing the system every year or so quickly
becomes tedious!</p>
<h3 id="shellybulb">Moved away from: Shelly Bulb 👎</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4164.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4164_hu855bbe0a9c47ac557e5b09db74fa3b06_944949_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4164_hu855bbe0a9c47ac557e5b09db74fa3b06_944949_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4164_hu855bbe0a9c47ac557e5b09db74fa3b06_944949_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>Because I also bought some <a href="#shelly1l">Shelly 1L smart relays</a>, I figured I’d
give the <a href="https://shelly.cloud/products/shelly-bulb-smart-home-automation-device/">Shelly
Bulb</a> a
try.</p>
<p>Instead of ZigBee, the Shelly Bulbs use WiFi. This makes them easy to get into
your home network and does not require a separate gateway.</p>
<p>At 2 bulbs per room+hallway, and 2 buttons each, that sums up to having 16 extra
devices in your WiFi network. This wasn’t a problem for me in practice, but
depending on how stable your WiFi network is, it might be a concern.</p>
<p>Notably, this also means your lights can’t be controlled while your WiFi is unavailable.</p>
<p>In terms of physical <strong>light switches</strong>, you’ll need to use a separate product
such as the Shelly Button. This is the weakest point of the system. The latency
is noticeable, even when configuring a static IP address, which does make things
better, but still not good. The Shelly Button is extremely simple, so dimming
has to be emulated with double or triple-press actions.</p>
<p>Given that one typically interacts with this system multiple times a day via its
switches, I think it makes sense to chose a system that has good switches.</p>
<p>On the plus side, the Shelly Button uses a rechargable battery that can be
charged from a USB power bank, which is a concept I really like.</p>
<h3 id="hue">Philips Hue 👍</h3>
<p>After the Shelly Bulb, I figured I’d try Philips Hue. It’s by far the most
expensive system of the ones I have tried, but also by far the most polished and
user-friendly.</p>
<div style="max-width: 150px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4514.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4514_hu465888e0cd6ad3d33b69ac3fd7c0d8d4_1137438_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4514_hu465888e0cd6ad3d33b69ac3fd7c0d8d4_1137438_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4514_hu465888e0cd6ad3d33b69ac3fd7c0d8d4_1137438_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>People recommended the <a href="https://www.feller.ch/de/Produktangebot/Funktaster">Feller Smart Light
Control</a> switches, which use
energy harvesting (from you clicking them!) and hence don’t require a battery.</p>
<p>This makes it easy to place them anywhere, like next to the couch in the picture
on the left.</p>
<br style="clear: both">
<p>Feller recommends extending existing installations by buying the next-larger
mounting plate. Extending the box in the wall is not required, as no wires or
in-wall space are needed. Drilling new holes for extra screws is required for
stability, but that’s a lot more doable than extending the whole box. Here are
some pictures before, during and after the installation:</p>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3883.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3883_hu8c0865dc8466fdff9a77d98bdf88cd59_1645691_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3883_hu8c0865dc8466fdff9a77d98bdf88cd59_1645691_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3883_hu8c0865dc8466fdff9a77d98bdf88cd59_1645691_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4146.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4146_hua9f69e9404f3c1ad473f50d53fe232bd_1584661_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4146_hua9f69e9404f3c1ad473f50d53fe232bd_1584661_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4146_hua9f69e9404f3c1ad473f50d53fe232bd_1584661_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4513_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4513_featured_huefeda71fee31fb8bfc71d9a141c0606f_1702194_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4513_featured_huefeda71fee31fb8bfc71d9a141c0606f_1702194_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4513_featured_huefeda71fee31fb8bfc71d9a141c0606f_1702194_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<h3 id="shelly1l">Shelly 1L 👍</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4453.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4453_huf958f180f9b60d6df1711fc62ed8abfa_1239796_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4453_huf958f180f9b60d6df1711fc62ed8abfa_1239796_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4453_huf958f180f9b60d6df1711fc62ed8abfa_1239796_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The Shelly 1L is a very interesting device. It goes behind your existing device
into the wall and makes it smart!</p>
<p>This allows you to make smart any existing lights that can’t easily be replaced
by smart lights, for example a bathroom light built into the bathroom mirror
cabinet.</p>
<p>You can also make existing light switches smart if you like the ones you already
have and can’t exchange them.</p>
<p>Another use-case is to easily connect buttons or sensors into your network, for
example door bells or door sensors.</p>
<p>The Shelly 1L is special in that this specific model can be installed when all
you have is a live wire (i.e. wiring for a light switch).</p>
<p>One potential issue is that depending on the configuration and connected
device’s power usage, the Shelly might emit a slight hum noise. So, don’t
install one right next to your bed.</p>
<p>Another limitation is that while the Shelly does work with both, light
<strong>switches</strong> (changes state) and light <strong>buttons</strong> (generates an impulse), it
can only distinguish between short and long press events when you use a light
button. Newer light switches from Feller can be re-configured to function as a
button, but if your model is too old you might need to replace a light switch
with a button.</p>
<p>One weird issue I ran into was that after installing a new bathroom mirror
cabinet, the relay of the connected Shelly 1L would no longer function correctly
— the light just remained on, even when turning it off via the Shelly. I read on
the Shelly forum that this could be caused by running the Shelly upside-down,
and indeed, after turning it around, it started to work again!</p>
<h2 id="smart-heating">Smart Heating</h2>
<p>Smart Heating systems are often advertised to save cost. I wanted to try it out,
and was also interested in the temperature logging because my apartment is on
the more humid side and I wanted some data to optimize the situation.</p>
<h3 id="homematicheating">HomeMatic 😐</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3512.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3512_hu39bef23f314593ac5a570777d0269b05_1310266_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3512_hu39bef23f314593ac5a570777d0269b05_1310266_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3512_hu39bef23f314593ac5a570777d0269b05_1310266_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>I bought some HomeMatic temperature sensors and heating valve drives back
in 2017. The hardware feels solid and was easy enough to install.</p>
<p>One massive downside of the system was the poor software quality of their
Central Control Unit (CCU2). The web interface was super slow, looked very
dated, and the whole thing kept running out of memory every 2 weeks or so. It
was so bad that I <a href="/posts/2017-04-16-homematic-reimplementation/">re-implemented my own CCU in
Go</a>. I hear that by now, they
have a new and better Control Unit version, though.</p>
<p>So far, one valve drive has failed with error code F1; I replaced it with a new
one.</p>
<p>Turns out smart control of our heating does not seem to make any measurable
difference. The rooms feel the same as before. No money is saved because the
utility bill is divided equally among all tenants across the building (which
seems to be standard in Switzerland), not billed for individual usage.</p>
<p>So, overall, I would not install smart heating valve drives again. The
temperature sensors I still keep an eye on from time to time, but there are
cheaper options if you only need temperature!</p>
<h2 id="smart-lock">Smart Lock</h2>
<h3 id="nuki">Nuki 👍</h3>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4549.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4549_hu8716c73c1bc02c4025992cd5e8271b6a_1194122_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4549_hu8716c73c1bc02c4025992cd5e8271b6a_1194122_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4549_hu8716c73c1bc02c4025992cd5e8271b6a_1194122_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3691.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3691_hu5e11573d3decee60fb24009fdd50f085_1187917_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3691_hu5e11573d3decee60fb24009fdd50f085_1187917_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3691_hu5e11573d3decee60fb24009fdd50f085_1187917_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3484.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3484_hu6984d04b8d7e4c9d18665ea773d7a4fd_803023_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3484_hu6984d04b8d7e4c9d18665ea773d7a4fd_803023_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3484_hu6984d04b8d7e4c9d18665ea773d7a4fd_803023_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3780.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3780_hua8572cfd4bf6f6518e73ac8bea16411e_361388_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3780_hua8572cfd4bf6f6518e73ac8bea16411e_361388_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_3780_hua8572cfd4bf6f6518e73ac8bea16411e_361388_600x0_resize_q75_box.jpg"
  
  width="600"
  height="603"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>During the pandemic, I was receiving packages at home and hence I was relying on
my door bell much more than usual. Hence, I was looking for a way to make it
smarter!</p>
<p>The first device I got was the <a href="https://nuki.io/en/opener/">Nuki Opener</a>, a
smart intercom system. It allows you to get notifications on your phone when the
doorbell is rung, and to unlock the door from your phone.</p>
<p>I got this device because it was specifically marketed as compatible with the
BTicino intercom system our house uses. Unfortunately, this turned out to <a href="/posts/2020-11-30-scs-processing-microcontroller/">be
incorrect</a>, so I ended up
<a href="/posts/2021-03-13-smart-intercom-backpack/">building a hardware-modified intercom
unit</a> that is connected to the Nuki
Opener in analogue mode.</p>
<p>Once it actually works, it’s a convenient system, and having your doorbell
generate desktop notifications with sound is just super useful when wearing
headphones! Strongly recommended.</p>
<p>As you can see on the pictures, I’m powering the Nuki Opener via USB. It
normally runs on batteries, but I want to minimize battery usage and swapping. A
built-in rechargeable battery like in the Shelly devices would be a neat
improvement to the Nuki Opener, so that the device could still work during power
outages!</p>
<p>After I had the Nuki Opener, I also added a <a href="https://nuki.io/en/smart-lock/">Nuki Smart
Lock</a> so that we can not only open the house
front door, but also the apartment door itself in case one of us forgets their
key.</p>
<p>The Nuki Smart Lock was easy to install and works great. It also shows with an
elegant LED ring whether the door is currently locked or not, which I find
handy.</p>
<h2 id="motion-sensors">Motion Sensors</h2>
<p>Not having to turn on lights myself is something I find convenient, in
particular in the kitchen, but also in the bathroom. When carrying plates or
glasses into the kitchen, it’s nice to have the lights turn on while my hands
are full.</p>
<h3 id="fellermotion">Moved away from: Feller Motion Sensors 😐</h3>
<p>First I tried Feller’s Motion Sensors, because they physically fit well into the
existing Feller light switch installation:</p>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4311.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4311_hu7e0f6fdb96f9d7ea63815e1348871123_1546321_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4311_hu7e0f6fdb96f9d7ea63815e1348871123_1546321_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4311_hu7e0f6fdb96f9d7ea63815e1348871123_1546321_600x0_resize_q75_box.jpg"
  
  width="600"
  height="600"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4407.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4407_hu855bbe0a9c47ac557e5b09db74fa3b06_1459219_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4407_hu855bbe0a9c47ac557e5b09db74fa3b06_1459219_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4407_hu855bbe0a9c47ac557e5b09db74fa3b06_1459219_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>But, their limitations made me move away from them quickly: while you can change
one or two basic settings, you cannot, for example, disable the motion sensor
after a certain time of day, or manually disable it for a certain time period.</p>
<p>Also, because the device is installed in a fixed position (determined by where
your light switch is), it isn’t necessarily in the best place to spot all the
motion you want to detect.</p>
<h3 id="shellymotion">Shelly Motion 👍</h3>
<div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4552.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4552_hu933633299932c7881ce3078b048a8244_673846_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4552_hu933633299932c7881ce3078b048a8244_673846_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4552_hu933633299932c7881ce3078b048a8244_673846_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4550.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4550_hu8f211d5b79bcf88b6331bc02c9263d11_939504_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4550_hu8f211d5b79bcf88b6331bc02c9263d11_939504_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4550_hu8f211d5b79bcf88b6331bc02c9263d11_939504_600x0_resize_q75_box.jpg"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>


















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/shellymotion-webinterface.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/shellymotion-webinterface_hua3cd54dd2ab44c84582dd78906db0e26_937115_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/shellymotion-webinterface_hua3cd54dd2ab44c84582dd78906db0e26_937115_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/shellymotion-webinterface_hua3cd54dd2ab44c84582dd78906db0e26_937115_600x0_resize_q75_box.jpg"
  
  width="600"
  height="632"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The <a href="https://shelly.cloud/shelly-motion-smart-home-automation-sensor/">Shelly
Motion</a> Sensor
seems like a good motion sensor to me! It has a number of useful settings and
can easily trigger any REST API endpoint or can be used via MQTT.</p>
<p>Like with the Shelly Button, this device has a built-in rechargeable battery
that can be charged via USB. Depending on the location of the sensor, you can
either attach a USB powerbank once a year, or remove the sensor from its fixture
and charge it elsewhere.</p>
<p>The positioning of the Shelly Motion can either be easy (as it was in my
kitchen) or tricky to get right (in my bathroom). I don’t know if other motion
sensors are better in terms of range.</p>
<p>One thing to note is that the Shelly Motion only reports state changes (motion
start or motion end), and no continuous events while motion is detected.</p>
<p>For my kitchen, <a href="https://github.com/stapelberg/regelwerk/blob/8693602b899ae3bd682bea3b08289de782791483/motion.go#L94-L128">my regelwerk
code</a>
directly translates motion on/off into light on/off commands (to Philips Hue and
Shelly 1L), with the exception that a long-press turns off all motion control
for the next 10 minutes. The granularity of the Shelly Motion is to report after
no motion for 1 minute, which works well for me for the kitchen.</p>
<p>For my bathroom, I don’t want the lights to immediately turn off when no motion
is detected anymore, to err on the side of not turning off the light while
people are still using the bathroom and are just not seen by the motion
sensor. To implement that, I found that using the Shelly 1L’s timer
functionality works best. So, <a href="https://github.com/stapelberg/regelwerk/blob/511198c89bf27bb39b0ba03bd33fe44a1ab4b182/motion.go#L48-L104">in my
configuration</a>,
motion on means lights on, and motion off means lights on for 10 minutes, then
off. Turning off the light manually disables that logic.</p>
<p>Note that the Shelly Motion should really be mounted in the orientation
recommended by the manual. When the motion sensor lays on the side (or is upside
down), detection is much poorer.</p>
<h2 id="smart-power-plug">Smart Power Plug</h2>
<p>A smart plug is an easy way to turn off a power-hungry device while you’re away,
to make a lamp smart, or to power on a connected device like a kettle to boil
water for making a tea.</p>
<p>My current use-cases are saving power for the stereo sound system connected to
my PC, and saving power by <a href="https://github.com/gokrazy/bakery/commit/a32e6d0a12693d70ce0544617ff3e391480c4b5a">powering up the
devices</a>
in my <a href="https://gokrazy.org/platforms/">gokrazy Continuous Integration test
environment</a> on-demand only.</p>
<p>While there are tons of vendors selling smart plugs, the selection narrows
considerably when you look for one with a <a href="https://en.wikipedia.org/wiki/SN_441011">Swiss power
plug</a>.</p>
<h3 id="homematicplug">HomeMatic 👎</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4548.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4548_hu18e4c1844f7b5756b8bbfa0d35983f2a_673862_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4548_hu18e4c1844f7b5756b8bbfa0d35983f2a_673862_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_4548_hu18e4c1844f7b5756b8bbfa0d35983f2a_673862_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The HomeMatic smart plug is expensive (55 CHF) and super bulky! As you can see,
even if you connect it at the very end of a power strip, it still blocks the
adjacent connector.</p>
<p>Worse: the way it’s built (bulky side pointing away from the earth pin), I can’t
even insert it into 2 of the 3 power strips you see on the picture.</p>
<p>Somehow, even though it’s so bulky, the device feels flimsy at the same
time. I’m never 100% sure if the plug is inserted fully and correctly, and it’s
easy to accidentally turn off power when bumping against the smart plug with
your foot.</p>
<p>Because it’s a HomeMatic device, you need a working Central Control Unit (CCU)
to control it programmatically. Conceptually, I prefer smart plugs that can be
used with a REST or MQTT API.</p>
<p>The only upside of this smart plug is that it can measure power. I occasionally
use it for that.</p>
<h3 id="sonoff">Sonoff 😐</h3>
<div style="max-width: 250px; float: left; margin-right: 1em">















<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_1345.JPG"><img
  srcset="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_1345_hu8426f71a38f8a1ccbda71f33f5a21248_731883_1200x0_resize_q75_box.JPG 2x,https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_1345_hu8426f71a38f8a1ccbda71f33f5a21248_731883_1800x0_resize_q75_box.JPG 3x"
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/IMG_1345_hu8426f71a38f8a1ccbda71f33f5a21248_731883_600x0_resize_q75_box.JPG"
  
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



</div>
<p>The Sonoff S26 are much cheaper (≈12 USD when I bought mine) and come in a Swiss
plug variant. Contrary to the HomeMatic ones, the Sonoff smart plugs are built
“the right way around”, meaning I can plug them into many Swiss power
strips. Unfortunately, they also block adjacent connectors, but at least not as
many as the HomeMatic.</p>
<p>The <a href="https://tasmota.github.io/docs/">Open Source firmware Tasmota</a> supports the
Sonoff S26, but flashing them is a painful experience. You can’t do it over the
air; you need to access rather small serial console pins inside the device.</p>
<p>Once you have them flashed with Tasmota, the devices work great.</p>
<p>One feature they lack is power measurement.</p>
<p>I would love to find a smart plug with a Swiss plug, that supports power
measurement, and that is compatible with Tasmota (or builtin MQTT support), but
until that product comes along, the Sonoff S26 are what I’m going to use.</p>
<h2 id="architecture-as-of-march-2022">Architecture as of March 2022</h2>
<p>Here is an architecture diagram of the devices I’m currently using:</p>




<a href="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/2022-03-06-smart-home-architecture.svg"><img
  src="https://michael.stapelberg.ch/posts/2022-03-19-smart-home-components/2022-03-06-smart-home-architecture.svg"
  
  style="border: 1px solid #000; margin-right: 1rem"
  
  loading="lazy"></a>


<p>To tie these different systems together, I use a Raspberry Pi running
<a href="https://gokrazy.org/">gokrazy</a>, which in turn runs my
<a href="/posts/2021-01-10-mqtt-introduction/">regelwerk</a> program. regelwerk only talks
to MQTT, so all the different devices are connected to MQTT using small adapter
programs such as my <a href="https://github.com/stapelberg/hue2mqtt">hue2mqtt</a> or
<a href="https://github.com/stapelberg/shelly2mqtt">shelly2mqtt</a>.</p>
<p>A more off-the-shelf solution would be to use <a href="https://nodered.org/">Node-RED</a>,
if you want to do a little programming, or <a href="https://www.home-assistant.io/">Home
Assistant</a> if you want to do barely any
programming.</p>
<h2 id="my-strategy-for-selecting-components">My strategy for selecting components</h2>
<p>I don’t look for one vendor or one system that has components for
everything. Instead, I chose the leading vendor in each domain. Compatibility
between systems is generally poor, so I try to keep my compatibility
requirements to a minimum.</p>
<p>To programmatically interact with the devices, the best bet are devices that are
designed to be developer-friendly (e.g. Shelly devices support MQTT) or at least
have an official API with modules in my favorite programming language
(e.g. Philips Hue). In terms of API, I expect to talk to a gateway device in my
local network — I tried talking e.g. Zigbee directly but found it inconvenient
due to poor software support, sparse documentation and strange compatibility
issues.</p>
<p>Direct device-to-device communication is nice from a reliability perspective,
but on some battery-powered systems you pay for it with reduced battery
runtime. For example, when using multiple light switches for the same room with
IKEA TRÅDFRI, you pair one to the other, which also makes all signals go through
it.</p>
<p>If possible, I select devices that have an open firmware available. Ideally, I
can keep using the vendor’s firmware, but if the vendor unexpectedly goes out of
business, it’s handy to have an alternative firmware available. Also, if the
devices require a cloud service to function, using open firmware typically
allows using them in your local network.</p>
<p>I have come to avoid WiFi where latency is important, e.g. between light
switches and lights.</p>
<p>I stopped looking at the price too much and instead look at the user
experience. Smart home is about comfort and convenience, and if a product
doesn’t delight in daily usage, why bother with it? Targeting the high end of
mid-range devices seems like the sweet spot to me. Avoid anything more expensive
than that, though — established players often re-brand third-party solutions and
you only pay for the company name, not quality.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[My 2022 high-end Linux PC 🐧]]></title>
    <link href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/"/>
    <id>https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/</id>
    <published>2022-01-15T16:00:00+01:00</published>
    <content type="html"><![CDATA[<p>I finally managed to get my hands on some DDR5 RAM to complete my Intel i9-12900
high-end PC build! This article contains the exact component list if you’re
interested in doing a similar build.</p>















<a href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4025_featured_hu4b4c2e46b77a93acc4771692c9f8c225_1593191_600x0_resize_q75_box.jpg"
  
  width="600"
  height="521"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Usually, I try to stay on the latest Intel CPU generation when possible. But I
decided to skip the i9-10900 (<a href="https://en.wikipedia.org/wiki/Comet_Lake_(microprocessor)">Comet
Lake</a>) and i9-11900
(<a href="https://en.wikipedia.org/wiki/Rocket_Lake">Rocket Lake</a>) series entirely,
largely because they were still stuck on Intel’s 14nm manufacturing process and
didn’t seem to offer much improvement.</p>
<p>The new i9-12900 (<a href="https://en.wikipedia.org/wiki/Alder_Lake_(microprocessor)">Alder
Lake</a>) delivered good
benchmark results and is manufactured with the much newer Intel 7 process, so I
was curious: would an upgrade be worth it?</p>
<h2 id="components">Components</h2>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>196 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/fractal-define-7-solid-midi-tower-pc-gehaeuse-12757904">Fractal Define 7 Solid (Midi Tower)</a></td>
</tr>
<tr>
<td>89 CHF</td>
<td>Power Supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm750x-2018-750-w-pc-netzteil-7678690?supplier=406802">Corsair RM750x 2018 (750 W)</a></td>
</tr>
<tr>
<td>293 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asus-prime-z690-a-lga-1700-intel-z690-ddr5-atx-mainboard-17252893?supplier=406802">ASUS PRIME Z690-A (LGA1700, ATX)</a></td>
</tr>
<tr>
<td>646 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/intel-core-i9-12900k-lga-1700-320-ghz-16-core-prozessor-16552823?supplier=406802">Intel Core i9-12900K</a></td>
</tr>
<tr>
<td>113 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-u12a-1580-cm-cpu-kuehler-10847172?supplier=406802">Noctua NH-U12A</a></td>
</tr>
<tr>
<td>30 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140-mm-1-x-pc-luefter-657800?supplier=406802">Noctua NF-A14 PWM (140 m)</a></td>
</tr>
<tr>
<td>770 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-vengeance-2-x-16gb-ddr5-4800-dimm-288-pin-ram-17713383?supplier=406802">Corsair Vengeance CMK32GX5M2A4800C40 (64 GB)</a></td>
</tr>
<tr>
<td>408 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/wd-black-sn850-retail-2000-gb-m2-2280-ssd-15720645?supplier=406802">WD Black SN850 (2 TB)</a></td>
</tr>
<tr>
<td>605 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/gigabyte-aorus-geforce-rtx-2070-xtreme-8-gb-grafikkarte-9896232">GeForce RTX 2070</a></td>
</tr>
<tr>
<td>65 EUR</td>
<td>Network</td>
<td>Mellanox ConnectX-3 (10 Gbit/s)</td>
</tr>
</tbody>
</table>
<h2 id="fan-compatibility">Fan compatibility</h2>
<p>The Noctua NH-U12A CPU fan required an adapter (“Noctua NM-i17xx-MP78 SecuFirm2
mounting kit”) to be compatible with the Intel LGA1700 socket. I requested the
adapter on Noctua’s Website on November 5th, and it arrived November 26th.</p>
<h2 id="fractal-define-7-case">Fractal Define 7 case</h2>
<p>Anytime you need to access a PC’s components, you’ll deal with its
case. Especially for a self-built PC, the case you chose determines how easy it
is to assemble and later modify your PC.</p>
<p>Over the years, I have come to value the following aspects of a PC case:</p>
<ol>
<li>No extra effort should be required for the case to be as quiet as possible.</li>
<li>The case should not have any sharp corners (no danger of injury!).</li>
<li>The case should provide just enough space for easy access to your components.</li>
<li>The more support the case has to encourage clean cable routing, the better.</li>
<li>USB3 front panel headers should be included.</li>
</ol>
<p>I have been using Fractal cases for the past few years and came to generally
prefer them over other brands because of their good build quality.</p>
<p>Hence I’m happy to report that the Fractal Define 7 (their latest generation at
the time of writing) ticks all of the above boxes!</p>
<p>The case and power supply work well together in terms of cable management. It was a joy to route the cables.</p>
<p>It’s very easy to open the case doors (they clip in place), or remove the front
panel. This is definitely the best PC case I have seen so far in terms of quick
and easy access.</p>
<p>Here’s how clean the inside looks. Most cables are routed with very short ways
to the back, where the case offers plenty of convenient cable guides:</p>















<a href="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2022-01-15-high-end-linux-pc/IMG_4028_hudd03a6d43e16c3d8568666879b1bf746_2326577_600x0_resize_q75_box.jpg"
  
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>You might also find this YouTube video review of the Fractal Define 7 interesting:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/XeTxUjUrw4A" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="slow-boot">Slow boot</h2>
<p>When I first powered everything on, I waited for a while, but never saw any
picture on my monitor. The PC eventually rebooted, multiple times in a row. I
took that as a bad sign and turned it off to prevent further damage.</p>
<p>Turns out I should have just waited until it would eventually start up!</p>
<p>It took multiple minutes for the machine to eventually start. I’m not 100% sure
what the cause is for that, but I heard in a Linus Tech Tips YouTube video that
DDR5 requires time-consuming memory testing when powering up with a fresh memory
configuration, so that seems plausible.</p>
<p>In any case, my advice is: be patient when waiting for this machine to start up.</p>
<h2 id="ddr5-availability-as-of-late-2021">DDR5 availability as of Late 2021</h2>
<p>I originally ordered all components on November 5th 2021. It took a while for
the mainboard to become available, but almost everything shipped on November
15th — except for the DDR5 RAM.</p>
<p>Until Late December, I was not able to find any available DDR5 RAM in Switzerland.</p>
<p>The shortage is so pronounced that some YouTubers recommend going with DDR4
mainboards for now, which manufacturers are scrambling to introduce in their
lineups. I did really want to squeeze out the last few extra percent in
memory-intensive workloads, so I decided to wait.</p>
<h2 id="copying-the-data">Copying the data</h2>
<p>Where possible, I like only changing one thing at a time. In this case, I wanted
to change the hardware, but keep using my Linux installation as-is.</p>
<p>To copy my Linux installation over, I plugged my old M.2 SSD into the new
machine, and then started a live Linux environment, so that neither my old nor
my new SSD were in use. My preferred live Linux is <a href="https://grml.org/">grml (current version:
2021.07)</a>, which I copied to a USB memory stick and booted
the machine from it.</p>
<p>In the grml live Linux environment, I copied the full M.2 SSD contents from old
to new:</p>
<pre tabindex="0"><code>grml# dd \
  if=/dev/disk/by-id/nvme-Force_MP600_&lt;TAB&gt; \
  of=/dev/disk/by-id/nvme-WD_BLACK_SN850_2TB_&lt;TAB&gt; \
  bs=5M \
  status=progress
</code></pre><p>For some reason, <a href="https://twitter.com/zekjur/status/1476825858681802754">the transfer was super
slow</a>. Last time I
transferred the contents of a Samsung 960 Pro to a Samsung 970 Pro, it took only
16 minutes. But this time, copying the Force MP600 to a WD Black SN850 took many
hours!</p>
<p>Once the data was transferred, I unplugged the old M.2 SSD and booted the
system.</p>
<p>The hostname remains the same, and the network addresses are tied to the MAC
address of the network card that I moved to the new machine. So, I didn’t have
to adjust anything in the new machine and could just boot into my usual
environment.</p>
<h2 id="uefi-settings-enable-xmp-for-4800-mhz-ram">UEFI settings: enable XMP for 4800 MHz RAM</h2>
<p>By default, the memory uses 4000 MHz instead of the 4800 MHz advertised on the
box.</p>
<p>I figured it should be safe to try out the XMP option because it is shown as
part of ASUS’s “EZ Mode” welcome page in the UEFI setup.</p>
<p>So far, I have not noticed any issues when running the system with XMP enabled.</p>
<p><strong>Update February 2022</strong>: I have experienced weird crashes that seem to have
gone away after disabling XMP. I’ll leave it disabled for now.</p>
<h2 id="uefifan">UEFI settings: fan speed</h2>
<p>The Fractal Define case comes with a built-in fan controller.</p>
<p>I recommend not using the Fractal fan controller, as you can’t control it from
Linux!</p>
<p>Instead, I have plugged my fans into the mainboard directly.</p>
<p>In the UEFI setup, I have configured all fan speeds to use the “silent” profile.</p>
<h2 id="asus-prime-z690-a-sensors-and-fan-control">ASUS PRIME Z690-A: sensors and fan control</h2>
<p>With Linux 5.15.11, some fan speeds and temperature are displayed, but oddly
enough it only shows 2 out of the 3 fans I have connected:</p>
<pre tabindex="0"><code>% sudo sensors
nct6798-isa-0290
Adapter: ISA adapter
[…]
fan1:                        0 RPM  (min =    0 RPM)
fan2:                      944 RPM  (min =    0 RPM)
fan3:                        0 RPM  (min =    0 RPM)
fan4:                      625 RPM  (min =    0 RPM)
fan5:                        0 RPM  (min =    0 RPM)
fan6:                        0 RPM  (min =    0 RPM)
fan7:                        0 RPM  (min =    0 RPM)
SYSTIN:                    +35.0°C  (high = +80.0°C, hyst = +75.0°C)  sensor = thermistor
CPUTIN:                    +40.0°C  (high = +80.0°C, hyst = +75.0°C)  sensor = thermistor
AUXTIN0:                  -128.0°C    sensor = thermistor
AUXTIN1:                   +24.0°C    sensor = thermistor
AUXTIN2:                   +28.0°C    sensor = thermistor
AUXTIN3:                   +31.0°C    sensor = thermistor
PECI Agent 0 Calibration:  +40.0°C
[…]
</code></pre><p>Unfortunately, writing to the <code>/sys/class/hwmon/hwmon2/pwm2</code> file does not seem
to change its value, so I don’t think one can control the fans via PWM from
Linux (yet?).</p>
<p><a href="#uefifan">I have set all fans to silent in the UEFI setup</a>, which is sufficient
to not notice any noise.</p>
<h2 id="performance-comparison-i9-9900k-vs-i9-12900k">Performance comparison: i9-9900K vs. i9-12900K</h2>
<p>After cloning my old disk to the new disk, I took the opportunity to run a few
time-intensive tasks from my day-to-day that I could remember.</p>
<p>On both machines, I configured the CPU governor to <code>performance</code> for stable
results.</p>
<p>Keep in mind that I’m comparing two unique PC builds as they are (not under
controlled and fair conditions), so the results might not necessarily be
representative. For example, it seems like the SSD performance in the old
machine was heavily degraded due to a <a href="https://twitter.com/zekjur/status/1476950514386538497">incorrect TRIM
configuration</a>.</p>
<table>
<thead>
<tr>
<th>name</th>
<th>old</th>
<th>new</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/golang/go/tree/go1.18beta1">build Go 1.18beta1 (src/make.bash)</a></td>
<td>≈45s</td>
<td>≈29s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/rsync/tree/d1c307d7a3db853abb5b39de3a206303c4936f4f">gokrazy/rsync tests</a></td>
<td>≈8s</td>
<td>≈5s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/gokrazy/blob/678bb92c2ee058df4b157fca53c486922951f2c8/integration/uefiboot/uefiboot_test.go">gokrazy UEFI test</a></td>
<td>≈9s</td>
<td>≈8s</td>
</tr>
<tr>
<td><a href="https://github.com/distr1/distri/blob/1c7fc9ad7e93e1de8fb85d5c4f0ca59f1f8c15e2/Makefile">distri cryptimage (cold cache)</a></td>
<td>≈143s</td>
<td>≈18s</td>
</tr>
<tr>
<td><a href="https://github.com/gokrazy/kernel/tree/30167e68a3989313498679b9be05c824d956c4d4">gokrazy Linux compilation</a></td>
<td>215s</td>
<td>109s</td>
</tr>
</tbody>
</table>
<p>As we can see, in all of my tests, the new PC achieves measurably better times!
🎉</p>
<h2 id="conclusion">Conclusion</h2>
<p>Not only in the benchmarks above, but also subjectively, the new machine feels
fast!</p>
<p>Already in the first few days of usage, I notice how time-consuming tasks such
as <a href="https://github.com/gokrazy/kernel/commit/5aff50c59bbc350a034cf3b78f484d35d445c7e0">tracking down a Linux kernel
issue</a>
(requires multiple Linux kernel builds), are a little less terrible thanks to
the faster machine :)</p>
<p>The Fractal Define 7 case is great and will likely serve as a good base for
upgrades over the next couple of years, just like its predecessor (but perhaps
even longer).</p>
<p>As far as I can tell, the machine works well and is compatible with Linux.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Fixing the Logitech MX Ergo Trackball mouse buttons]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/"/>
    <id>https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/</id>
    <published>2021-12-05T13:23:20+01:00</published>
    <content type="html"><![CDATA[<p>The mouse I use daily for many hours is Logitech’s <a href="https://www.logitech.com/en-ch/products/mice/mx-ergo-wireless-trackball-mouse.910-005179.html">MX Ergo
trackball</a>
and I generally consider it the best trackball one can currently buy.</p>
<p>Unfortunately, after only a year or two of usage, the trackball’s mouse buttons
no longer function correctly. When clicking and dragging, they won’t hold down
the selection reliably.</p>
<p>The mouse buttons first broke in my private trackball, and later also the ones
in my work one!</p>
<p>After just buying a new one when the mouse buttons broke the first time, I
figured this time I wanted to try and fix the trackball myself.</p>















<a href="https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/logitech-mx-ergo-kailh.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/logitech-mx-ergo-kailh_hu25aa8b29bbc8203032e4b64c28800cde_1242226_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/logitech-mx-ergo-kailh_hu25aa8b29bbc8203032e4b64c28800cde_1242226_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-12-05-logitech-mx-ergo-mouse-button-kailh/logitech-mx-ergo-kailh_hu25aa8b29bbc8203032e4b64c28800cde_1242226_600x0_resize_q75_box.jpg"
  alt="Logitech MX Ergo and Kailh replacement switches" title="Logitech MX Ergo and Kailh replacement switches"
  width="600"
  height="338"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="video-recording">Video recording</h2>
<p>In this 27 minute video, you can look over my shoulder as I swap out the
worn-out Omron mouse buttons with Kailh replacement mouse buttons:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/TBaYEFkk2RU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>The basic steps are:</p>
<ol>
<li>Unscrew the outside Torx screws.</li>
<li>Unscrew the inside Philips screws.</li>
<li>Remove the PCB from the case and fix it securely for desoldering.</li>
<li>Desolder the switch: heat up all 3 pads as simultaneously as possible (add
more solder → more flux!), then gently push down on the pins to make the
switch fall out.</li>
<li>Cleanly remove all remaining solder, then insert the replacement switch,
double-check you aligned it will on the PCB, and solder it.</li>
<li>Put everything back together.</li>
</ol>
<h2 id="replacement-switches-kailh-gm-80">Replacement switches: Kailh GM 8.0</h2>
<p>The replacement mouse buttons I’m using are <a href="https://www.aliexpress.com/item/1005001286852407.html?spm=a2g0s.12269583.0.0.4a421ccfNFILvA">Kailh GM 8.0 from the Kailh
Official Store on
AliExpress</a>,
which are advertised as “ultra high life”. Even if their life span is also only
a few years, I bought enough of them to probably replace them another 2 to 3
times per trackball.</p>
<p>The Kailh mouse buttons behave very similarly to the original Omron mouse
buttons. The click is very satisfying now, and reminds me of a brand-new
Logitech MX Ergo trackball. I wouldn’t call the Kailh ones better than the Omron
ones, but maybe others notice a difference?</p>
<p>One interesting side note: I noticed that when wearing noise canceling
headphones, it was very hard to tell the worn-out Omron mouse buttons from the
Kailh mouse buttons. The difference really is mostly in the sound, not in the
feel when pressing the button down!</p>
<h2 id="why-is-the-mx-ergo-so-unreliable">Why is the MX Ergo so unreliable?</h2>
<p>There is a <a href="https://www.youtube.com/watch?v=v5BhECVlKJA">1-hour video by Alex
Kenis</a> saying that Logitech
switched from 5V to 3.3V logic voltages, and this violates the minimum
electrical condition for the Omron D2FC-F, which causes oxidation.</p>
<p>Indeed, when I merely opened the switches and cleaned them up with a screw
driver, this seemed to help. But, opening everything up is so fiddly that one
might as well solder in new switches altogether :)</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[MacBook Air M1: the best laptop?]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/"/>
    <id>https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/</id>
    <published>2021-11-28T16:50:00+01:00</published>
    <content type="html"><![CDATA[<p>You most likely have heard that Apple switched from Intel CPUs to their own,
ARM-based CPUs.</p>
<p>Various early reviews touted the new MacBooks, among the first devices with the
ARM-based M1 CPU, as the best computer ever. This got me curious: after years of
not using any Macs, would an M1 Mac blow my mind?</p>
<p>In this article, I share my thoughts about the MacBook Air M1, after a year of
occasional usage.</p>















<a href="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-11-28-macbook-air-m1/mba_hu855bbe0a9c47ac557e5b09db74fa3b06_1092595_600x0_resize_q75_box.jpg"
  alt="MacBook Air M1" title="MacBook Air M1"
  width="600"
  height="675"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="energy-efficiency">Energy efficiency</h2>
<p>The M1 CPU is remarkably energy-efficient. This has two notable effects:</p>
<ol>
<li>The device does not have a fan, and <strong>stays absolutely quiet</strong>. This is
pretty magical, and I now notice my ThinkPad’s fan immediately.</li>
<li>The <strong>battery lasts many hours</strong>, even with demanding use-cases like video
conferencing.</li>
</ol>
<p>When it comes to energy efficiency, Apple sets the bar. All other laptops should
be fanless, too! And the battery life really is incredible: taking notes in
Google Docs (via WiFi) while at a conference for many hours left me with well
over 80% of battery at the end of the day!</p>
<p>I briefly lent the computer to someone and got it back with a VPN client
installed. The battery life was considerably shortened by that VPN client and
recovered once I uninstalled it. So if you’re not seeing great battery life,
maybe a single program is ruining your experience.</p>
<p>The fast wakeup feature that was heavily stressed during the initial
introduction (to some ridicule) is actually pretty nice! I now notice having to
wait for my ThinkPad to wake up.</p>
<p>Battery life during standby is great, too. Anecdotally, when leaving my ThinkPad
lying around, it never survives until I plug it in again. The MacBook survives
every single time.</p>
<h2 id="chipset-advantage">Chipset advantage?</h2>
<p>Now, given that Apple controls the entire machine, does that mean they now offer
features that other computers cannot offer yet?</p>
<p>My personal bar for this question is whether a computer can be used with my
<a href="/posts/2017-12-11-dell-up3218k/">bandwidth-hungry 8K monitor</a>, and the
disappointing news is that the MacBook Air M1 cannot drive the 8K monitor with
its 7680x4320 pixels resolution (at 60 Hz, using 2 DisplayPort links), not even
with <a href="https://www.displaylink.com/products/find?vid_dp=1&amp;usbc=1">an external USB-C
dock</a>.</p>
<p>Maybe future hardware generations add support for 8K displays, but for my
day-to-day, Apple’s complete control doesn’t improve anything.</p>
<h2 id="built-in-peripherals">Built-in peripherals</h2>
<p>The screen is great! Everything looks sharp, colors are vibrant and brightness
is good.</p>
<p>As usual, the touchpad (which Apple calls “trackpad”) is great, much better than
any touchpad I have ever used on a PC laptop. Apple trackpads have always had
this advantage since I know them, and I don’t know why PC touchpads don’t seem
to get any better? 🤔</p>
<p>Apple brought back their <a href="https://www.macrumors.com/guide/butterfly-keyboard-vs-scissor-keyboard/">scissor mechanism
keyboards</a>,
which is a very welcome change. I have witnessed so so many problems with the
old butterfly mechanism keyboards.</p>
<p>This first MacBook Air M1 model has no MagSafe. Apple added MagSafe in the
MacBook Pro M1 in late 2021. I hope they’ll eventually expand MagSafe to all
notebooks.</p>
<h2 id="peripherals-not-enough-ports">Peripherals: not enough ports</h2>
<p>Staying in peripheral-land, let me first state that this MacBook’s <strong>2 USB-C
ports are not enough</strong>!</p>
<p>When working on the go, after plugging in power, I can plug in a wired ethernet
adapter (wireless can be spotty), but then won’t have any ports left for my
ergonomic keyboard and mouse.</p>
<p>For video conferencing, I can plug in power (to ensure I won’t run out of
battery), connect a table microphone, but won’t have any ports left for a decent
webcam. This is particularly annoying because this MacBook’s built-in webcam is
really bad, and the main reason why reviewers don’t give the MacBook a perfect
score (<a href="https://www.youtube.com/watch?v=OEaKQ0pxQsg">example review on
YouTube</a>).</p>
<p>So, in practice, you need to carry a USB-C dock, or at least a USB hub, with
your laptop when you anticipate possibly needing any peripherals. #donglelife</p>
<h2 id="not-enough-ram-for-local-software-development">Not enough RAM for local software development</h2>
<p>Hardware-wise, the biggest pain point for software developers is the small
amount of RAM: both the MacBook Air M1 and the MacBook Pro M1 (13&quot;) can be
configured with up to 16 GB of RAM. Only the newer MacBook Pro M1 14&quot; or 16&quot;
(introduced late 2021) support more RAM.</p>
<p>To be clear, 16 GB RAM is enough to do software development in general, but it
can quickly become limiting when you deal with larger programs or data sets.</p>
<p>In my ThinkPad, I have 64 GB of RAM, which allows for a lot more VMs, large
index data structures, or just plenty of page cache. With the ThinkPad, I don’t
have to worry about RAM.</p>
<p>Of course, there are strategies around this. Maybe your projects are large
enough to warrant maintaining a remote build cluster, and you can run your test
jobs in a staging environment. The MacBook makes for a fine thin client —
provided your internet connection is fast and stable.</p>
<h2 id="operating-system-macos">Operating System: macOS</h2>
<p>I am talking about Operating Systems at a very high level in this section. Many
use-cases will work fine, regardless of the Operating System one uses. I can
typically get by with a browser and a terminal program.</p>
<p>So, this section isn’t a nuanced or fair review or critique of macOS or anything
like that, just a collection of a few random things I found notable while
playing with this device :)</p>
<p>My favorite way to install macOS is Internet Recovery. You can install a blank
disk in your Mac and start the macOS installer via the internet! The Mac will
even remember your WiFi password. The closest thing I know in the PC world is
<a href="https://netboot.xyz/">netboot.xyz</a>, and that needs to be installed in your
local network first.</p>
<p>Similarly, Apple’s integration when using multiple devices seems pretty
good. For example, the Mac will offer to switch to your iPhone’s mobile
connection when it loses network connectivity.</p>
<p>But, just like in all other operating systems, there is plenty in macOS to
improve.</p>
<p>For example, software updates on the Mac still take 30 minutes (!) or so, which
is entirely unacceptable for such a fast device! In particular, Apple seems to
be (partially?) using immutable file system snapshots to distribute their
software, so I don’t know why <a href="https://distr1.org/">distri can install and update so much
faster</a>.</p>
<p>Speaking of Operating System shortcomings, I have observed how <a href="https://en.wikipedia.org/wiki/Apple_File_System">APFS (the Apple
File System)</a> can get into a
state in which it cannot be repaired, which I found pretty concerning! Automated
and frequent backups of all on-device data is definitely a must.</p>
<p>Slow software updates are annoying, and having little confidence in the file
system makes me uneasy, but what’s really a dealbreaker is that my preferred
keyboard layout does not work well on macOS: see <a href="#neo">Appendix A: NEO keyboard
layout</a>.</p>
<h2 id="linux-">Linux? 🐧</h2>
<p>So given my preference for Linux, could I just use Linux instead?</p>
<p>Unfortunately, while <a href="https://asahilinux.org">Asahi Linux</a> is making great
progress in bringing Linux to the M1 Macs, it seems like it’ll still be many
months before I can install a Linux distribution and expect it to just work on
the M1 Mac.</p>
<p>Until then, check out the <a href="https://asahilinux.org/blog/">Asahi Linux Progress Report blog
posts</a>!</p>
<h2 id="intel-to-m1-architecture-transition">Intel to M1 architecture transition</h2>
<p>Apple developed the <a href="https://en.wikipedia.org/wiki/Rosetta_(software)#Rosetta_2">Rosetta 2 dynamic binary
translator</a> which
transparently handles non-M1 programs, and so far it seems to work fine! All the
things I tried just worked, and architecture never seemed to play a role during
my usage.</p>
<h2 id="conclusion">Conclusion</h2>
<p>The MacBook Air M1 is indeed impressive! It’s light, silent, fast and the
battery life is amazing. If these points are the most important to you in a
laptop, and you’re already in the Mac ecosystem, I imagine you’ll be very happy
with this laptop.</p>
<p>But is the M1 really so mind-blowing that you should switch to it no matter
what? No. As a long-time Linux user who is primarily developing software, I
prefer my <a href="/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/">ThinkPad X1
Extreme</a> with
its plentiful peripheral connections and lots of RAM.</p>
<p>I know it’s not an entirely fair comparison: I should probably compare the
ThinkPad to the newer MacBook <strong>Pro</strong> models (not MacBook Air). But I’m not a
professional laptop reviewer, I can only speak about these 2 laptops that I
found interesting enough to personally try.</p>
<h2 id="neo">Appendix A: NEO keyboard layout</h2>
<p>The macOS implementation of the <a href="https://neo-layout.org/">NEO keyboard layout</a>
has a number of significant incompatibilities/limitations: its layer 3 does not
work correctly. Layer 3 contains many important common characters, such as <code>/</code>
(<code>Mod3 + i</code>, i.e. Caps Lock + i) or <code>?</code> (<code>Mod3 + s</code>).</p>
<p>I installed the current <code>neo.keylayout</code> file (2019-08-16) as described on the
<a href="https://neo-layout.org/Download/">NEO download page</a>.</p>
<p>In order to make <code>/</code> and <code>?</code> work in Google Docs, I had to enable the additional
Karabiner rule <em>“Prevent all layer 3 keys from being treated as option key
shortcut”</em> (see also: <a href="https://github.com/jgosmann/neo2-layout-osx/issues/6#issuecomment-604622834">this GitHub
issue</a>)</p>
<hr>
<p>I encountered the following issues, ordered by severity:</p>
<p><strong>Issue 1</strong>: I cannot use Emacs at all! I installed the emacsformacosx.com
version (also tried homebrew), but cannot enter keys such as <code>/</code> or <code>?</code>. Emacs
interprets these as <code>M-u</code> instead.</p>
<p>The Karabiner rule <em>“Prevent all layer 3 keys from being treated as option key
shortcut”</em> that fixed this issue in Google Docs does not help for
Emacs. Removing it from Karabiner changes behavior, but Emacs still recognizes
<code>M-i</code> instead of <code>/</code>, so it’s broken with or without the rule.</p>
<p><strong>Issue 2</strong>: In the Terminal app, I cannot enable the <em>“Use Option as Meta key”</em>
keyboard option, otherwise all layer 3 keys function as meta shortcuts (<code>M-i</code>)
instead of key symbols (<code>/</code>).</p>
<p>I commonly use the Meta key to jump around word-wise: <code>Alt+b</code> / <code>Alt+f</code> on a
PC. Since I can’t use Option + b / Option + f on a Mac, I need to use Option +
arrow keys instead, which works.</p>
<p>Since the Option key does not work as Meta key, I need to press (and release!)
the Escape key instead. This is pretty inconvenient in Emacs in a terminal.</p>
<p><strong>Issue 3</strong>: In Gmail in Chrome, the search keyboard shortcut (<code>/</code>) is not
recognized.</p>
<p>I <a href="https://git.neo-layout.org/neo/neo-layout/issues/590">reported this problem
upstream</a>, but there seems
to be no solution.</p>
<hr>
<p>I’m not sure why these programs don’t work well with NEO. I tried BBEdit for
comparison, and it had no trouble with (macOS-level) shortcuts such as
<code>command + /</code> and <code>option + command + /</code>.</p>
<p>On Linux, the NEO layout works so much better. I’m really not in the mood to
continuously fight with my operating system over keyboard input and shortcuts.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Silent HP Z440 workstation: replacing noisy fans]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/"/>
    <id>https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/</id>
    <published>2021-08-28T15:16:00+02:00</published>
    <content type="html"><![CDATA[<p>Since March 2020, I have been using my work computer at home: an <a href="https://support.hp.com/us-en/document/c04506309">HP Z440
workstation</a>.</p>
<p>When I originally took the machine home, I immediately noticed that it’s quite a
bit louder than my other PCs, but only now did I finally decide to investigate
what I could do about it.</p>
<h2 id="finding-all-the-fans">Finding all the fans</h2>
<p>I first identified all fans, both by opening the chassis and looking around, and
by looking at the <a href="http://h10032.www1.hp.com/ctg/Manual/c04823811">HP Z440 Maintenance and Service
Guide</a>, which contains this
description:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/chassis-components_hu36d388d2b36bd958f883a2df8c1aaea4_273387_600x0_resize_q75_box.jpg"
  alt="chassis components" title="chassis components"
  width="600"
  height="509"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Specifically, I identified the following fans:</p>
<ul>
<li>“1 Fan”, a 92mm rear fan, sucking air out of the back of the chassis.</li>
<li>“5 Memory fans”, two 60mm fans in a custom HP plastic enclosure that are
positioned directly above the DIMM slots to the left and right of the CPU.</li>
<li>“6 CPU Heat sink”, a 92mm fan on top of a heat sink</li>
<li>“11 Rear System Fan”, a 92mm front (!) fan, pulling air into the front of the
chassis.</li>
<li>My aftermarket nVidia GeForce GPU has 3 fans on a massive heat sink.</li>
<li>The power supply has a fan, too, which I will not touch.</li>
</ul>
<h2 id="memory-fans">Memory fans</h2>
<p>The Z440 comes with a custom HP plastic enclosure that is put over the CPU
cooler, fastened with two clips at opposite ends, and positions two small 60mm
fans above the DIMM banks.</p>
<p>This memory fan plastic enclosure is a pain to find anywhere. It looks like HP
is no longer producing it.</p>
<p>The enclosure plugs into the mainboard with a custom connector that is directly
wired up to the fans, meaning it’s a pain to replace the fans.</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-21-memory-fans_hu47042a7738bec735fd93d948ca344866_2106605_600x0_resize_q75_box.jpg"
  alt="memory fans" title="memory fans"
  width="600"
  height="696"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Luckily, while <a href="https://www.workstation4u.de/de/ersatzteile/hp/hp-z440/1513/hp-z440-memory-cooling-solution-neu">shopping around for an
enclosure</a>
I could modify, I realized that memory fans are only required when installing
more than 4 DIMM modules!</p>
<p>My machine “only” has 64 GB of RAM, in 4 DIMM modules, and I don’t intend to
upgrade anytime soon, so I just unplugged the whole memory fan enclosure and
removed it from the chassis.</p>
<p>The UEFI firmware does not complain about the memory fans missing (contrary to
the rear fan!), and this simple change alone makes a noticeable difference in
noise levels.</p>
<h2 id="gpu-fans">GPU fans</h2>
<p>nVidia GPUs can be run at different “PowerMizer” performance levels:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/nvidia-powermizer_hueedf559e14cfb4ac2af7a6d6a30751ae_1050836_600x0_resize_q75_box.jpg"
  alt="nVidia PowerMizer" title="nVidia PowerMizer"
  width="600"
  height="359"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Many years ago, I ran into lag when using Chrome that went away as soon as I
switched my nVidia GPU’s Preferred Mode to “Prefer Maximum Performance” instead
of “Auto” or “Adaptive mode”.</p>
<p>It turns out that nowadays, that is no longer a problem, so running at Prefer
Maximum Performance is no longer necessary.</p>
<p>Worse, pinning the GPU at the highest Performance Level means that it produces
more heat, resulting in the fans having to spin up more often, and run for
longer durations.</p>
<p>But, even after switching to Auto, resulting in Adaptive mode being chosen, I
noticed that my GPU was stuck at a higher PowerMizer level than I thought it
should be.</p>
<p>An easy fix is to limit the GPU to a certain PowerMizer level, and ideally not
the lowest level (level 0). For me, one level after that (level 1) seems to
result in no slow-down during my typical usage.</p>
<p>I followed <a href="https://db.tannercrook.com/limiting-nvidia-gpu-in-linux/">this blog post to limit my GPU to PowerMizer level
1</a>, i.e. I added
<code>/etc/modprobe.d/nvidia-power-save.conf</code> with the following contents:</p>
<pre tabindex="0"><code>options nvidia NVreg_RegistryDwords=&#34;OverrideMaxPerf=0x2&#34;
</code></pre><p>…followed by a rebuild of my initramfs (<code>update-initramfs -u</code>) and a <code>reboot</code>.</p>
<p>This way, the fans don’t typically need to spin up as the GPU stays below its
temperature limit.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">For some reason, the above method worked fine on my Debian work machine, but not
on my Arch private machine…? I have not investigated why.</div>
  </div>
</aside>

<h2 id="rear-and-front-fans">Rear and front fans</h2>
<p>With the memory fans and GPU fans out of the way, two easy to check fans remain:
the rear fan and front fan. These are 92mm in size, the model number is Foxconn
PVA092G12S.</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-20-rear-fan-featured_hubc92ae85c899c14de0806668526f039c_1572517_600x0_resize_q75_box.jpg"
  alt="rear fan" title="rear fan"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>I unplugged both of them to see what effect these fans have on the noise level,
and the difference was significant!</p>
<p>Unfortunately, unplugging isn’t enough: the UEFI firmware complains on boot when
the rear fan is not connected, requiring you to press <code>Enter</code> to boot. Also, the
machine seems to get a few degrees Celsius hotter inside without the front and
rear fans, so I don’t want to run the machine without these fans for an extended
period of time.</p>
<p>I ordered two <a href="https://noctua.at/en/nf-a9x14-pwm">Noctua NF-A9x14 PWM</a> fans (for
about 25 CHF each) to replace the stock front and rear fans.</p>
<p>Unfortunately, HP uses a custom 4-pin fan connector on its Z440 mainboard!
Luckily, modifying the connector of the Noctua Low-Noise Adapter cable to fit on
the custom 4-pin connector is as simple as using a knife to remove the
connector’s guard rails:</p>















<a href="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-08-28-silent-hp-z440-workstation/2021-08-24-fan-connector-mod_hu855bbe0a9c47ac557e5b09db74fa3b06_976008_600x0_resize_q75_box.jpg"
  alt="fan connector mod" title="fan connector mod"
  width="600"
  height="557"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="cpu-fan">CPU fan</h2>
<p>For the CPU fan, HP again chose to use a <a href="https://h30434.www3.hp.com/t5/Business-PCs-Workstations-and-Point-of-Sale-Systems/Z620-Aftermarker-CPU-Cooler-CPU-Cooling-shroud-necessary-or/td-p/7842134">custom (6-pin)
connector</a>.</p>
<p>On the web, I read that the Z440 CPU fan is quite efficient and not worth
replacing. This matches my experience, so I kept the standard Z440 CPU cooler.</p>
<h2 id="conclusion">Conclusion</h2>
<p>I was quite happy to discover that I could just unplug the memory fans, and
configure my GPU to make less noise. Together with replacing the front/rear fans
with Noctua ones, the machine is much quieter now than before!</p>
<p>One downside of workstation-class hardware is that manufacturers (at least HP)
like to build custom parts and solutions. Using their own fan connectors instead
of standard connectors is such a pain! I’ll be sure to stick to standard PC
hardware :)</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[25 Gigabit Linux internet router PC build]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/"/>
    <id>https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/</id>
    <published>2021-07-10T13:43:00+02:00</published>
    <content type="html"><![CDATA[<p>init7 recently announced that with their <a href="https://www.init7.net/en/internet/fiber7/">FTTH fiber offering
Fiber7</a>, they will now sell and
connect you with 25 Gbit/s (Fiber7-X2) or 10 Gbit/s (Fiber7-X) fiber optics, if
you want more than 1 Gbit/s.</p>
<p>While this offer will only become available at my location late this year (<a href="https://twitter.com/init7/status/1403287499175235584">or
possibly later due to the supply chain
shortage</a>), I already
wanted to get the hardware on my end sorted out.</p>
<p>After my <a href="/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/">previous
disappointment</a>
with the MikroTik CCR2004, I decided to try a custom PC build.</p>
<p>An alternative to many specialized devices, including routers, is to use a PC
with an expansion card. An internet router’s job is to configure a network
connection and forward network packets. So, in our case, we’ll build a PC and
install some network expansion cards!</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-router-featured_hu1fe795dd8828eccf339de1acf31abbd0_2106743_600x0_resize_q75_box.jpg"
  alt="router PC build" title="router PC build"
  width="600"
  height="607"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="goals">Goals</h2>
<p>For this PC internet router build, I had the following goals, highest priority
to lowest priority:</p>
<ol>
<li>Enough performance to saturate 25 Gbit/s, e.g. with two 10 Gbit/s downloads.</li>
<li>Silent: no loud fan noise.</li>
<li>Power-efficient: low power usage, as little heat as possible.</li>
<li>Low cost (well, for a high-end networking build…).</li>
</ol>
<h2 id="network-port-plan">Network Port Plan</h2>
<p>The simplest internet router has 2 network connections: one uplink to the
internet, and the local network. You can build a router without extra cards by
using a mainboard with 2 network ports.</p>
<p>Because there are no mainboards with SFP28 slots (for 25 Gbit/s SFP28 fiber
modules), we need at least 1 network card for our build. You might be able to
get by with a dual-port SFP28 network card if you have an SFP28-compatible
network switch already, or need just one fast connection.</p>
<p>I want to connect a few fast devices (directly and via fiber) to my router, so
I’m using 2 network cards: an SFP28 network card for the uplink, and a quad-port
10G SFP+ network card for the local network (LAN). This leaves us with the
following network ports and connections:</p>
<table>
<thead>
<tr>
<th>Network Card</th>
<th>max speed</th>
<th>cable</th>
<th>effective</th>
<th>Connection</th>
</tr>
</thead>
<tbody>
<tr>
<td>Intel XXV710</td>
<td>25 Gbit/s</td>
<td>fiber</td>
<td>25 Gbit/s</td>
<td>Fiber7-X2 uplink</td>
</tr>
<tr>
<td>Intel XXV710</td>
<td>25 Gbit/s</td>
<td>DAC</td>
<td>10 Gbit/s</td>
<td>workstation</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>RJ45</td>
<td>1 Gbit/s</td>
<td>rest (RJ45 Gigabit)</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>fiber</td>
<td>10 Gbit/s</td>
<td>MikroTik 1</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>fiber</td>
<td>10 Gbit/s</td>
<td>MikroTik 2</td>
</tr>
<tr>
<td>Intel XL710</td>
<td>10 Gbit/s</td>
<td>/</td>
<td>10 Gbit/s</td>
<td>(unused)</td>
</tr>
<tr>
<td>onboard</td>
<td>2.5 Gbit/s</td>
<td>RJ45</td>
<td>1 Gbit/s</td>
<td>(management)</td>
</tr>
</tbody>
</table>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-back-connectors_hu2cfa90931bbae9f0fd461262de6dceaf_1588951_600x0_resize_q75_box.jpg"
  alt="network connectors" title="network connectors"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="hardware-selection">Hardware selection</h2>
<p>Now that we have defined the goals and network needs, let’s select the actual
hardware!</p>
<h3 id="network-cards">Network Cards</h3>
<p>My favorite store for 10 Gbit/s+ network equipment is
<a href="https://www.fs.com/">FS.COM</a>. They offer Intel-based cards:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-03-network-cards_hue8caea776ef0fb2df2e421fd4fc4446d_3100418_600x0_resize_q75_box.jpg"
  alt="Network cards" title="Network cards"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<ul>
<li>
<p>(347 CHF) PCIe 3.0 x8 Dual-Port 25G SFP28 Ethernet Network Card (Intel XXV710) <br>
<a href="https://www.fs.com/de/products/75603.html">FS.COM XXV710AM2-F2 #75603</a></p>
</li>
<li>
<p>(329 CHF) PCIe 3.0 x8 Quad-Port 10G SFP+ Ethernet Network Card (Intel XL710-BM1) <br>
<a href="https://www.fs.com/de/products/75602.html">FS.COM FTXL710BM1-F4 #75602</a></p>
</li>
</ul>
<p>Both cards work out of the box with the <a href="https://www.kernel.org/doc/Documentation/networking/i40e.txt"><code>i40e</code> Linux kernel
driver</a>, no
firmware blobs required.</p>
<p>For a good overview over the different available Intel cards, check out the
second page (“Product View”) in the card’s <a href="https://img-en.fs.com/file/user_manual/network-adapter-user-manual.pdf">User
Manual</a>.</p>
<h3 id="cpu-and-chipset">CPU and Chipset</h3>
<p>I read on many different sites that AMD’s current CPUs beat Intel’s CPUs in
terms of performance per watt. We can better achieve goals 2 and 3 (low noise
and low power usage) by using fewer watts, so we’ll pick an AMD CPU and
mainboard for this build.</p>
<p>AMD’s current CPU generation is Zen 3, and <a href="https://en.wikipedia.org/wiki/List_of_AMD_Ryzen_processors#Zen_3_based">current Zen 3 based
CPUs</a>
can be divided into 65W <a href="https://en.wikipedia.org/wiki/Thermal_design_power">TDP (Thermal Design
Power)</a> and 105W TDP
models. Only one 65W model is available to customers right now: the Ryzen 5
5600X.</p>
<p>Mainboards are built for/with a certain so-called chipset. Zen 3 CPUs use the
AM4 socket, for which <a href="https://en.wikipedia.org/wiki/Socket_AM4#Chipsets">8 different
chipsets</a> exist. Our network
cards need PCIe 3.0, so that disqualifies 5 chipsets right away: only the A520,
B550 and X570 chipsets remain.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note:</strong> Multiple people pointed out (thank you!) that the Wikipedia table only
lists PCIe lanes provided by the chipset, and strictly speaking, the older X470
chipset (released March 2018) supports CPUs which provide PCIe 3.0
lines. E.g. the <a href="https://www.asus.com/microsite/motherboard/AMD-X470/">ROG Strix
X470-F</a> with its x8/x8
mode should work, too.</div>
  </div>
</aside>
















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-08-ryzen5-on-mainboard_hudb2375ee03466882b5ba09d7fd065b5d_1054095_600x0_resize_q75_box.jpg"
  alt="Ryzen 5" title="Ryzen 5"
  width="600"
  height="440"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="mainboard-pcie-bandwidth">Mainboard: PCIe bandwidth</h3>
<p>I originally tried using the ASUS PRIME X570-P mainboard, but I ran into two
problems:</p>
<p>Too loud: X570 mainboards need an annoyingly loud chipset fan for their 15W
TDP. Other chipsets such as the B550 don’t need a fan for their 5W TDP. With a
loud chipset fan, goal 2 (low noise) cannot be achieved. Only the
<a href="https://www.golem.de/news/sockel-am4-x570s-mainboards-mit-passivkuehlung-verfuegbar-2106-157434.html">recently-released X570<strong>S</strong>
variant</a>
comes without fans.</p>
<p>Not enough PCIe bandwidth/slots! This is how the ASUS tech specs describe the slots:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/x570p_expansion_hu3e0f2d5aa6180df20bb553ed5c6fa57b_271626_600x0_resize_q75_box.jpg"
  
  width="600"
  height="244"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>This means the board has 2 slots (1 CPU, 1 chipset) that are physically wide
enough to hold a full-length x16 card, but only the first port can
electronically be used as an x16 slot. The other port only has PCIe lanes
electronically connected for x4, hence “x16 (max at x4 mode)”.</p>
<p>Unfortunately, our network cards need electrical connection of all their PCIe x8
lanes to run at full speed. Perhaps Intel/FS.COM will one day offer a new
generation of network cards that use PCIe <strong>4.0</strong>, because PCIe 4.0 x4 achieves
the same 7.877 GB/s throughput as PCIe <strong>3.0</strong> x8. Until then, I needed to find
a new mainboard.</p>
<p>Searching mainboards by PCIe capabilities is rather tedious, as mainboard block
diagrams or PCIe tree diagrams are not consistently available from all mainboard
vendors.</p>
<p>Instead, we can look explicitly for a feature called <strong>PCIe Bifurcation</strong>. In a
nutshell, PCIe bifurcation lets us divide the PCIe bandwidth from the Ryzen CPU
from 1 PCIe 4.0 x16 into 1 PCIe 4.0 x8 + 1 PCIe 4.0 x8, definitely satisfying
our requirement for two x8 slots at full bandwidth.</p>
<p>I found a list of (only!) three B550 mainboards supporting PCIe Bifurcation in <a href="https://www.anandtech.com/show/15850/the-amd-b550-motherboard-overview-asus-gigabyte-msi-asrock-and-others/39">an
Anandtech
review</a>. Two
are made by Gigabyte, one by ASRock. I read the Gigabyte UEFI setup is rather
odd, so I went with the ASRock B550 Taichi mainboard.</p>
<h3 id="case">Case</h3>
<p>For the case, I needed a midi case (large enough for the B550 mainboard’s ATX
form factor) with plenty of options for large, low-spinning fans.</p>
<p>I stumbled upon the <a href="https://www.corsair.com/us/en/Categories/Products/Cases/Mid-Tower-ATX-Cases/4000D-Airflow-Tempered-Glass-Mid-Tower-ATX-Case/p/CC-9011200-WW">Corsair 4000D
Airflow</a>,
which is available for 80 CHF and <a href="https://www.gamersnexus.net/hwreviews/3624-corsair-4000d-airflow-case-review-vs-solid-panel">achieved positive
reviews</a>. I’m
pleased with the 4000D: there are no sharp corners, installation is quick, easy
and clean, and the front and top panels offer plenty of space for cooling behind
large air intakes:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-airflow-case-top_hu74d32c9eb10022fb50f09605538b4d16_1754161_600x0_resize_q75_box.jpg"
  alt="Airflow case (from the top)" title="Airflow case (from the top)"
  width="600"
  height="699"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Inside, the case offers plenty of space and options for routing cables on the back side:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-back_hu24f36c0d8bab8e8a026702698b97bc68_1930320_600x0_resize_q75_box.jpg"
  alt="Airflow case (back)" title="Airflow case (back)"
  width="600"
  height="536"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Which in turn makes for a clean front side:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-27-case-front_hu876ee6dd48eb5e24d09b830a310f7016_2072230_600x0_resize_q75_box.jpg"
  alt="Airflow case (front)" title="Airflow case (front)"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="fans">Fans</h3>
<p>I have been happy with <a href="https://noctua.at/">Noctua</a> fans for many years. In this
build, I’m using only Noctua fans so that I can reach goal 2 (silent, no loud
fan noise):</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-01-noctua-fans_hufa2be48cd91c5b51113bfeb4460bf154_1457999_600x0_resize_q75_box.jpg"
  alt="Noctua fans" title="Noctua fans"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>These fans are large (140mm), so they can spin on slow speeds and still be
effective.</p>
<p>The specific fan configuration I ended up with:</p>
<ul>
<li>1 Noctua NF-A14 PWM 140mm in the front, pulling air out of the case</li>
<li>1 Noctua NF-A14 PWM 140mm in the top, pulling air into the case</li>
<li>1 Noctua NF-A12x25 PWM 120mm in the back, pulling air into the case</li>
<li>1 Noctua NH-L12S CPU fan</li>
</ul>
<p>Note that this is most likely overkill: I can well imagine that I could turn off
one of these fans entirely without a noticeable effect on temperatures. But I
wanted to be on the safe side and have a lot of cooling capacity, as I don’t
know how hot the Intel network cards run in practice.</p>
<h3 id="fan-controller">Fan Controller</h3>
<p>The ASRock B550 Taichi <a href="https://www.techpowerup.com/review/asrock-b550-taichi/7.html">comes with a Nuvoton
NCT6683D-T</a> fan
controller.</p>
<p>Unfortunately, ASRock seems to have set the Customer ID register to 0 instead of
<code>CUSTOMER_ID_ASROCK</code>, so you need to load the <code>nct6683</code> Linux driver with its
<code>force</code> option.</p>
<p>Once the module is loaded, <code>lm-sensors</code> lists accurate PWM fan speeds, but the
temperature values are mislabeled and don’t quite match the temperatures I see
in the UEFI H/W Monitor:</p>
<pre tabindex="0"><code>nct6683-isa-0a20
Adapter: ISA adapter
fan1:              471 RPM  (min =    0 RPM)
fan2:                0 RPM  (min =    0 RPM)
fan3:                0 RPM  (min =    0 RPM)
fan4:                0 RPM  (min =    0 RPM)
fan5:                0 RPM  (min =    0 RPM)
fan6:                0 RPM  (min =    0 RPM)
fan7:                0 RPM  (min =    0 RPM)
Thermistor 14:     +45.5 C  (low  =  +0.0 C)
                            (high =  +0.0 C, hyst =  +0.0 C)
                            (crit =  +0.0 C)  sensor = thermistor
AMD TSI Addr 98h:  +40.0 C  (low  =  +0.0 C)
                            (high =  +0.0 C, hyst =  +0.0 C)
                            (crit =  +0.0 C)  sensor = AMD AMDSI
intrusion0:       OK
beep_enable:      disabled
</code></pre><p>At least with the <code>nct6683</code> Linux driver, there is no way to change the PWM fan
speed: the corresponding files in the <code>hwmon</code> interface are marked read-only.</p>
<p>At this point I accepted that I won’t be able to work with the fan controller
from Linux, and tried just configuring static fan control settings in the UEFI
setup.</p>
<p>But despite identical fan settings, one of my 140mm fans would end up turned
off. I’m not sure why — is it an unclean PWM signal, or is there just a bug in
the fan controller?</p>
<p>Controlling the fans to reliably spin at a low speed is vital to reach goal 2
(low noise), so I looked around for third-party fan controllers and found the
<a href="https://www.corsair.com/eu/en/Categories/Products/Accessories-%7C-Parts/iCUE-CONTROLLERS/iCUE-Commander-PRO-Smart-RGB-Lighting-and-Fan-Speed-Controller/p/CL-9011110-WW">Corsair Commander
Pro</a>,
which <a href="https://blog.ktz.me/a-usb-fan-controller-that-now-works-under-linux/">a blog post explains is compatible with
Linux</a>.</p>
<h3 id="server-disk">Server Disk</h3>
<p>This part of the build is not router-related, but I figured if I have a fast
machine with a fast network connection, I could add a fast big disk to it and
retire my other server PC.</p>
<p>Specifically, I chose the Samsung 970 EVO Plus M.2 SSD with 2 TB of
capacity. This disk can <a href="https://www.tomshardware.com/reviews/samsung-970-evo-plus-ssd,5608.html">deliver 3500 MB/s of sequential read
throughput</a>,
which is more than the ≈3000 MB/s that a 25 Gbit/s link can handle.</p>
<h3 id="graphics-card">Graphics Card</h3>
<p>An important part of computer builds for me is making troubleshooting and
maintenance as easy as possible. In my current tech landscape, that translates
to connecting an HDMI monitor and a USB keyboard, for example to boot from a
different device, to enter the UEFI setup, or to look at Linux console messages.</p>
<p>Unfortunately, the Ryzen 5 5600X does not have integrated graphics, so to get
any graphics output, we need to install a graphics card. I chose the Zotac
GeForce GT 710 Zone Edition, because it was the cheapest available card (60 CHF)
that’s passively cooled.</p>
<p>An alternative to using a graphics card might be to use a PCIe IPMI card like
the <a href="https://www.asrockrack.com/general/productdetail.asp?Model=PAUL#Specifications">ASRock
PAUL</a>,
however these seem to be harder to find, and more expensive.</p>
<p>Longer-term, I think the best option would be to use the Ryzen 5 5600G with
integrated graphics, but that model only <a href="https://www.pcmag.com/news/amds-new-ryzen-5000-g-series-will-come-with-an-integrated-gpu">becomes available later this
year</a>.</p>
<h3 id="component-list">Component List</h3>
<p>I’m listing 2 different options here. Option A is what I built (router+server),
but Option B is a lot cheaper if you only want a router. Both options use the
same base components:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>347 CHF</td>
<td>Network card</td>
<td><a href="https://www.fs.com/products/75603.html">FS.COM Intel XXV710, 2 × 25 Gbit/s (#75603)</a></td>
</tr>
<tr>
<td>329 CHF</td>
<td>Network card</td>
<td><a href="https://www.fs.com/products/75602.html">FS.COM Intel XL710, 4 × 10 Gbit/s (#75602)</a></td>
</tr>
<tr>
<td>314 CHF</td>
<td>CPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/amd-ryzen-5-5600x-am4-370ghz-6-core-prozessor-13987919">Ryzen 5 5600X</a></td>
</tr>
<tr>
<td>290 CHF</td>
<td>Mainboard</td>
<td><a href="https://www.digitec.ch/de/s1/product/asrock-b550-taichi-am4-amd-b550-atx-mainboard-13348335">ASRock B550 Taichi</a></td>
</tr>
<tr>
<td>92 CHF</td>
<td>Case</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-4000d-airflow-midi-tower-pc-gehaeuse-13552873">Corsair 4000D Airflow (Midi Tower)</a></td>
</tr>
<tr>
<td>67 CHF</td>
<td>Fan control</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-commander-pro-extern-6x-luefter-kontroller-6332927">Corsair Commander Pro</a></td>
</tr>
<tr>
<td>65 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a14-pwm-140mm-1x-pc-luefter-657800">2 × Noctua NF-A14 PWM (140mm)</a></td>
</tr>
<tr>
<td>62 CHF</td>
<td>CPU fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nh-l12s-7cm-cpu-kuehler-6817433">Noctua NH-L12S</a></td>
</tr>
<tr>
<td>35 CHF</td>
<td>Case fan</td>
<td><a href="https://www.digitec.ch/de/s1/product/noctua-nf-a12x25-pwm-120mm-1x-pc-luefter-9161307">1 × Noctua NF-A12x25 PWM (120mm)</a></td>
</tr>
<tr>
<td>60 CHF</td>
<td>GPU</td>
<td><a href="https://www.digitec.ch/de/s1/product/zotac-geforce-gt-710-zone-edition-1gb-grafikkarte-7526609">Zotac GeForce GT 710 Zone Edition (1GB)</a></td>
</tr>
</tbody>
</table>
<p>Base total: 1590 CHF</p>
<p><strong>Option A: Server extension</strong>. Because I had some parts lying around, and because I
wanted to use my router for serving files (from large RAM cache/fast disk), I
went with the following parts:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>309 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/samsung-970-evo-plus-2000gb-m2-2280-ssd-10339167">Samsung 970 EVO Plus 2000GB, M.2 2280</a></td>
</tr>
<tr>
<td>439 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-hyperx-predator-rgb-4x-16gb-ddr4-3600-dimm-288-ram-14062636">64GB HyperX Predator RAM (4x, 16GB, DDR4-3600, DIMM 288)</a></td>
</tr>
<tr>
<td>127 CHF</td>
<td>Power supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-sf600-platinum-600w-pc-netzteil-9034178">Corsair SF600 Platinum (600W)</a></td>
</tr>
<tr>
<td>14 CHF</td>
<td>Power ext</td>
<td><a href="https://www.digitec.ch/de/s1/product/silverstone-atx-24-24pin-verlaengerung-30cm-modding-sleeving-3456447">Silverstone ATX 24-24Pin Extension (30cm)</a></td>
</tr>
<tr>
<td>10 CHF</td>
<td>Power ext</td>
<td><a href="https://www.digitec.ch/de/s1/product/silverstone-atx-extension-8-844pin-30cm-modding-sleeving-5808252">Silverstone ATX Extension 8-8(4+4)Pin (30cm)</a></td>
</tr>
</tbody>
</table>
<p>The Corsair SF600 power supply is not server-related, I just had it lying around. I’d
recommend going for the Corsair RM650x *2018* (which has longer cables) instead.</p>
<p>Server total: 2770 CHF</p>
<p><strong>Option B: Non-server (router only) alternative</strong>. If you’re <em>only</em> interested
in routing, you can opt for cheaper low-end disk and RAM, for example:</p>
<table>
<thead>
<tr>
<th>Price</th>
<th>Type</th>
<th>Article</th>
</tr>
</thead>
<tbody>
<tr>
<td>112 CHF</td>
<td>Power supply</td>
<td><a href="https://www.digitec.ch/de/s1/product/corsair-rm650x-2018-650w-pc-netzteil-8849945">Corsair RM650x *2018*</a></td>
</tr>
<tr>
<td>33 CHF</td>
<td>Disk</td>
<td><a href="https://www.digitec.ch/de/s1/product/kingston-a400-120gb-m2-2280-ssd-10628775">Kingston A400 120GB M.2 SSD</a></td>
</tr>
<tr>
<td>29 CHF</td>
<td>RAM</td>
<td><a href="https://www.digitec.ch/de/s1/product/crucial-ct4g4dfs8266-1x-4gb-ddr4-2666-dimm-288-ram-10447900">Crucial CT4G4DFS8266 4GB DDR4-2666 RAM</a></td>
</tr>
</tbody>
</table>
<p>Non-server total: 1764 CHF</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><p>I had the Noctua NH-L12S CPU fan lying around, so I re-used it.</p>
<p>Noctua <a href="https://www.golem.de/news/nh-p1-noctuas-passiver-cpu-kuehler-schafft-125-watt-2106-157334.html">recently released a passive CPU
cooler</a>,
which might be an interesting alternative.</p>
</div>
  </div>
</aside>

<h2 id="asrock-b550-taichi-mainboard-uefi-setup">ASRock B550 Taichi Mainboard UEFI Setup</h2>
<p>To enable PCIe Bifurcation for our two PCIe 3.0 x8 card setup:</p>
<ol>
<li>Set <code>Advanced &gt; AMD PBS &gt; PCIe/GFX Lanes Configuration</code> <br>
to <code>x8x8</code>.</li>
</ol>
<p>To always turn on the PC after power is lost:</p>
<ol>
<li>Set <code>Advanced &gt; Onboard Devices Configuration &gt; Restore On AC Power Loss</code> <br>
to <code>Power On</code>.</li>
</ol>
<p>To PXE boot (via UEFI) on the onboard ethernet port (management), but disable
slow option roms for PXE boot on the FS.COM network cards:</p>
<ol>
<li>Set <code>Boot &gt; Boot From Onboard LAN</code> <br>
to <code>Enabled</code>.</li>
<li>Set <code>Boot &gt; CSM (Compatibility Support Module) &gt; Launch PXE OpROM Policy</code> <br>
to <code>UEFI only</code>.</li>
</ol>
<h2 id="fan-controller-setup">Fan Controller Setup</h2>
<p>The <a href="https://www.corsair.com/eu/en/Categories/Products/Accessories-%7C-Parts/iCUE-CONTROLLERS/iCUE-Commander-PRO-Smart-RGB-Lighting-and-Fan-Speed-Controller/p/CL-9011110-WW">Corsair Commander Pro</a> fan controller is well-supported on Linux.</p>
<p>After enabling the Linux kernel option <code>CONFIG_SENSORS_CORSAIR_CPRO</code>, the device
shows up in the <code>hwmon</code> subsystem.</p>
<p>You can completely spin up (100% PWM) or turn off (0% PWM) a fan like so:</p>
<pre tabindex="0"><code># echo 255 &gt; /sys/class/hwmon/hwmon3/pwm1
# echo 0 &gt; /sys/class/hwmon/hwmon3/pwm1
</code></pre><p>I run my fans at 13% PWM, which translates to about 226 rpm:</p>
<pre tabindex="0"><code># echo 33 &gt; /sys/class/hwmon/hwmon3/pwm1
# cat /sys/class/hwmon/hwmon3/fan1_input
226
</code></pre><p>Conveniently, the Corsair Commander Pro stores your settings even when power is
lost. So you don’t even need to run a permanent fan control process, a one-off
adjustment might be sufficient.</p>
<h2 id="power-usage">Power Usage</h2>
<p>The PC consumes about 48W of power when idle (only management network connected)
by default without further tuning. Each extra network link increases power usage
by ≈1W:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-11-power-network-link_hu6de13347ba7e4b65728687062274fcb9_385234_600x0_resize_q75_box.jpg"
  alt="graph showing power consumption when enabling network links" title="graph showing power consumption when enabling network links"
  width="600"
  height="370"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Enabling all <a href="https://wiki.gentoo.org/wiki/Ryzen#Kernel">Ryzen-related options</a>
in my Linux kernel and switching to the powersave CPU frequency governor lowers
power usage by ≈1W.</p>
<p>On some mainboards, you might need to <a href="https://twitter.com/falcon3754/status/1403102789367119876">force-enable Global
C-States</a> to save
power. Not on the B550 Taichi, though.</p>
<p>I tried undervolting the CPU, but that didn’t even make ≈1W of difference in
power usage. Potentially making my setup unreliable is not worth that little
power saving to me.</p>
<p>I measured these values using a <a href="https://www.conrad.ch/de/p/homematic-hm-es-pmsw1-pl-dn-r5-funk-schaltaktor-1-fach-funk-steckdose-2300-w-2507749.html">Homematic
HM-ES-PMSw1-Pl-DN-R5</a>
I had lying around.</p>
<h2 id="performance">Performance</h2>
<p>Goal 1 is to saturate 25 Gbit/s, for example using two 10 Gbit/s downloads. I’m
talking about large bulk transfers here, not many small transfers.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content">If you’re interested in the “many small packets” scenario, check out <a href="https://netoptimizer.blogspot.com/2014/05/the-calculations-10gbits-wirespeed.html">“The
calculations: 10Gbit/s
wirespeed”</a>
for a good intro, and <a href="https://twitter.com/fragstone/status/1401807613642280963">Thomas Fragstein’s benchmark tool
recommendations</a>. I
haven’t run any such tests yet.</div>
  </div>
</aside>

<p>To get a feel for the performance/headroom of the router build, I ran 3 different tests.</p>
<h3 id="test-a-10-gbits-bridging-throughput">Test A: 10 Gbit/s bridging throughput</h3>
<p>For this test, I connected 2 PCs to the router’s XL710 network card and used <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 to generate a 10 Gbit/s TCP stream between the
2 PCs. The router doesn’t need to modify the packets in this scenario, only
forward them, so this should be the lightest load scenario.</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-06-bridging_hub0cd44ce68a3ab7a30e115765c391440_953670_600x0_resize_q75_box.jpg"
  alt="bridging throughput" title="bridging throughput"
  width="600"
  height="315"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="test-b-10-gbits-nat-throughput">Test B: 10 Gbit/s NAT throughput</h3>
<p>In this test, the 2 PCs were connected such that the router performs <a href="https://en.wikipedia.org/wiki/Network_address_translation">Network
Address Translation
(NAT)</a>, which is
required for downloads from the internet via IPv4.</p>
<p>This scenario is slightly more involved, as the router needs to modify
packets. But, as we can see below, a 10 Gbit/s NAT stream consumes barely more
resources than 10 Gbit/s bridging:</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-12-nat_hu35fd080505f1a7e499871d8e450fe11e_573889_600x0_resize_q75_box.jpg"
  alt="NAT throughput" title="NAT throughput"
  width="600"
  height="250"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="test-c-4--10-gbits-tcp-streams">Test C: 4 × 10 Gbit/s TCP streams</h3>
<p>In this test, I wanted to max out the XL710 network card, so I connected 4 PCs
and started an <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 benchmark between each PC
and the router itself, simultaneously.</p>
<p>This scenario consumes about 16% CPU, meaning we’ll most likely have plenty of
headroom even when all ports are maxed out!</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-06-14-four_hu8fa147dd23d5c3ee204bf85eaa69eccf_646280_600x0_resize_q75_box.jpg"
  alt="four 10 Gbit/s streams" title="four 10 Gbit/s streams"
  width="600"
  height="292"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Tip: make sure to enable the <code>CONFIG_IRQ_TIME_ACCOUNTING</code> Linux kernel option to
<a href="https://tanelpoder.com/posts/linux-hiding-interrupt-cpu-usage/">include IRQ handlers in CPU usage
numbers</a> for
accurate measurements.</p>
<h2 id="alternatives-considered">Alternatives considered</h2>
<p>The passively-cooled SuperServer E302-9D comes with 2 SFP+ ports (10 Gbit/s). It
even comes with 2 PCIe 3.0 x8 capable slots. Unfortunately it seems impossible
to currently buy this machine, at least in Switzerland.</p>
<p>You can find a few more suggestions in the replies of <a href="https://twitter.com/zekjur/status/1361414105211437056">this Twitter
thread</a>. Most are either
unavailable, require a lot more DIY work (e.g. a custom case), or don’t support
25 Gbit/s.</p>
<h2 id="router-software-router7-porting">Router software: router7 porting</h2>
<p>I wrote <a href="https://router7.org/">router7</a>, my own small home internet router
software in Go, back in 2018, and have been using it ever since.</p>
<p>I don’t have time to support any users, so I don’t recommend anyone else use
router7, unless the project really excites you, and the lack of support doesn’t
bother you! Instead, you might be better served with a more established and
supported router software option. Popular options include
<a href="https://en.wikipedia.org/wiki/OPNsense">OPNsense</a> or
<a href="https://en.wikipedia.org/wiki/OpenWrt">OpenWrt</a>. See also Wikipedia’s <a href="https://en.wikipedia.org/wiki/List_of_router_and_firewall_distributions">List of
router and firewall
distributions</a>.</p>
<p>To make router7 work for this 25 Gbit/s router PC build, I had to make a few
adjustments.</p>
<p>Because we are using UEFI network boot instead of BIOS network boot, I first had
to make the PXE boot implementation in router7’s installer <a href="https://github.com/rtr7/tools/commits/00be57a557a5fb2bf8958fbc1417f57ab17fc54b">work with UEFI PXE
boot</a>.</p>
<p>I then enabled a few additional <a href="https://github.com/rtr7/kernel/commits/8694ece47fb07ffeea8a96dc48eb8faa3969250a">kernel options for network and storage
drivers</a>
in router7’s kernel.</p>
<p>To router7’s control plane code, I <a href="https://github.com/rtr7/router7/commits/b88ddd41c377087cc4b6d1fe6c7a5550399a730c">added bridge network device
configuration</a>,
which in my previous 2-port router setup was not needed.</p>
<p>During development, I compiled a few Linux programs statically or copied them
with their dependencies (→ <a href="https://gokrazy.org/prototyping/">gokrazy
prototyping</a>) to run them on router7, such as
<a href="https://manpages.debian.org/sensors.1"><code>sensors(1)</code></a>
, <a href="https://manpages.debian.org/ethtool.8"><code>ethtool(8)</code></a>
,
as well as iproute2’s <a href="https://manpages.debian.org/ip.8"><code>ip(8)</code></a>
 and <a href="https://manpages.debian.org/bridge.8"><code>bridge(8)</code></a>
 implementation.</p>
<h2 id="next-steps">Next Steps</h2>
<p>Based on my tests, the hardware I selected seems to deliver enough performance
to use it for distributing a 25 Gbit/s upstream link across multiple 10 Gbit/s
devices.</p>
<p>I won’t know for sure until the <a href="https://twitter.com/fiber7_ch">fiber7</a> Point Of
Presence (POP, German Anschlusszentrale) close to my home is upgraded to support
25 Gbit/s “Fiber7-X2” connections. As I mentioned, unfortunately <a href="https://twitter.com/init7/status/1403287499175235584">the upgrade
plan is delayed</a> due to
the component shortage. I’ll keep you posted!</p>
<h2 id="other-builds">Other Builds</h2>
<p>In case my build doesn’t exactly match your requirements, perhaps these others
help inspire you:</p>
<ul>
<li><a href="https://medium.com/@sdier/new-internet-service-calls-for-a-new-router-4dbebbdc6dbd">Scott Dier’s Intel NUC 9 Pro build</a></li>
</ul>
<h2 id="appendix-a-dpdk-test">Appendix A: DPDK test</h2>
<p><a href="https://twitter.com/ipngnetworks">Pim</a> ran a <a href="https://www.dpdk.org/">DPDK</a>
based loadtester called <a href="https://trex-tgn.cisco.com/">T-Rex</a> on this
machine. Here’s his summary of the test:</p>
<p>For DPDK, this hardware does 4x10G at 64b frames. It does not do 6x10G as it
tops out at 62Mpps using 4 cores (of 15.5Mpps per core).</p>
<p>I couldn&rsquo;t test 25G symmetric [because we lacked a 25G DAC cable], but
extrapolating from the numbers, 3 CPUs source and sink ~24.6Gbit per core, so
we&rsquo;d probably make it, leaving 1 core for OS and 2 cores for controlplane.</p>
<p>If the machine had a 12 core Ryzen, it would saturate all NICs with room to
spare. So that&rsquo;s what I&rsquo;ll end up buying :)</p>















<a href="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test.png"><img
  srcset="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_1200x0_resize_box_3.png 2x,https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_1800x0_resize_box_3.png 3x"
  src="https://michael.stapelberg.ch/posts/2021-07-10-linux-25gbit-internet-router-pc-build/2021-07-13-dpdk-test_hu37b3af6bd791c24945ccf8bd92c24adc_280211_600x0_resize_box_3.png"
  alt="DPDK test" title="DPDK test"
  width="600"
  height="447"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Laptop review: ThinkPad X1 Extreme (Gen 2)]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/"/>
    <id>https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/</id>
    <published>2021-06-05T20:43:00+02:00</published>
    <content type="html"><![CDATA[














<a href="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/2021-06-02-thinkpad-x1-extreme.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/2021-06-02-thinkpad-x1-extreme_hu855bbe0a9c47ac557e5b09db74fa3b06_2918849_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/2021-06-02-thinkpad-x1-extreme_hu855bbe0a9c47ac557e5b09db74fa3b06_2918849_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/2021-06-02-thinkpad-x1-extreme_hu855bbe0a9c47ac557e5b09db74fa3b06_2918849_600x0_resize_q75_box.jpg"
  alt="ThinkPad X1 Extreme Gen 2, pear for scale" title="ThinkPad X1 Extreme Gen 2, pear for scale"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>For many of my school and university years, I used and liked my ThinkPad X200
ultraportable laptop. But now that these years are long gone, I realized my
use-case for laptops had changed: instead of carrying my laptop with me every
day, I am now only bringing it on occasion, for example when I travel to
conferences, visit friends, or do volunteer work.</p>
<p>After the ThinkPad X200, I used a few different laptops:</p>
<ul>
<li>MacBook Pro 13&quot; Retina, bought for its screen</li>
<li>ThinkPad X1 Carbon, which newly introduced a hi-dpi screen to ThinkPads</li>
<li>Dell XPS 9360, for a change, to try a device that ships with Linux</li>
</ul>
<p>With each of these devices, I have felt limited by the lack of connectors and
slim compute power that comes with the Ultrabook brand, even after years of
technical progress.</p>
<p>More compute power is nice to be able to work on projects with larger data sets,
for example debiman (scanning and converting all manpages in Debian), or distri
(building Linux packages).</p>
<p>More peripheral options such as USB ports are nice when connecting a keyboard,
trackball, USB-to-serial adapter, etc., to work on a micro controller or
Raspberry Pi project, for example.</p>
<p>So, I was ready to switch from the heaviest Ultrabooks to the lightest of the
“mobile workstation” category, when I stumbled upon Lenovo’s ThinkPad X1 Extreme
(Gen 2), and it piqued my curiosity.</p>
<h2 id="peripherals">Peripherals</h2>
<p>Let me start by going into the key peripherals of a laptop: keyboard, touchpad
and screen. I will talk about these independently from the remaining hardware
because they define the experience of using the computer.</p>
<h3 id="keyboard">Keyboard</h3>
<p>After having used the Dell XPS 9360 for a few years, I can confidently say that
the keyboard of the ThinkPads is definitely much better, and in a noticeable
way.</p>
<p>It’s not that the Dell keyboards are <em>bad</em>. But comparing the Dell and ThinkPad
side-by-side makes it really clear that the ThinkPad keyboards are the best
notebook keyboards.</p>
<p>On the ThinkPad keyboard, every key press lands exactly as I imagine. Never do I
need to hit a key twice because I didn’t press it just-right, and never do I
notice additional ghost key presses.</p>
<p>Even though I connect my external Kinesis Advantage keyboard when doing longer
stretches of work, the quality of the built-in keyboard matters: a good keyboard
enables using the laptop on the couch.</p>
<h3 id="touchpad">Touchpad</h3>
<p>Unfortunately, while the keyboard is great, I can’t say the same about the
touchpad. I mean, it’s not terrible, but it’s also not good by any stretch.</p>
<p>This seems to be the status quo with PC touchpads for decades. It really blows
my mind that Apple’s touchpads are consistently so much better!</p>
<p>My only hope is that <a href="https://github.com/sponsors/gitclear">Bill Harding
(GitClear)</a>, who is working on improving
the Linux touchpad experience, will eventually find a magic software tweak or
something…</p>
<p>As <a href="https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_X1_Extreme_(Gen_2)#Touchpad">mentioned on the
ArchWiki</a>,
I also had to adjust the sensitivity like so:</p>
<pre tabindex="0"><code>% xinput set-prop &#39;SynPS/2 Synaptics TouchPad&#39; &#39;libinput Accel Speed&#39; 0.5
</code></pre><h3 id="display">Display</h3>
<p>I have high demands regarding displays: since 2013, every device of mine has a
hi-dpi display.</p>
<p>The industry hasn’t improved displays across the board as fast as I’d like, so
non-hi-dpi displays are still quite common. The silver lining is that it makes
laptop selection a little easier for me: anything without a decent display I can
discard right away.</p>
<p>I’m glad to report that the 4K display in the ThinkPad X1 Extreme with its
3840x2160 pixels is sharp, bright, and generally has good viewing angles.</p>
<p>It’s also a touchscreen, which I don’t strictly need, but it’s nice to use it
from time to time.</p>
<p>I use the display in 200% scaling mode, i.e. I set <code>Xft.dpi: 192</code>. See also
<a href="https://wiki.archlinux.org/index.php/HiDPI">HiDPI in ArchWiki</a>.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Tip</strong>: In case your brightness control keys don’t work, check if the <a href="https://gitlab.freedesktop.org/drm/intel/issues/510">required
patches</a> have not been
applied in your environment yet.</div>
  </div>
</aside>

<h2 id="hardware">Hardware</h2>
<p>Spec-wise, the ThinkPad X1 Extreme is a beast!</p>















<a href="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/specs.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/specs_hub98e688078adf6db327505acb00135c2_814598_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/specs_hub98e688078adf6db327505acb00135c2_814598_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-06-05-laptop-review-lenovo-thinkpad-x1-extreme-gen2/specs_hub98e688078adf6db327505acb00135c2_814598_600x0_resize_q75_box.jpg"
  alt="ThinkPad X1 Extreme Specs" title="ThinkPad X1 Extreme Specs"
  width="600"
  height="475"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>The build quality seems very robust to me.</p>
<p>Another big plus of the ThinkPad series over other laptop series is the
availability of the official Hardware Maintenance Manual: you can put “ThinkPad
X1 Extreme Gen 2 Hardware Maintenance Manual” into Google and will find
<a href="https://download.lenovo.com/pccbbs/mobiles_pdf/p1_gen2_x1extreme_hmm_v1.pdf"><code>p1_gen2_x1extreme_hmm_v1.pdf</code></a>
as the first hit. This manual describes in detail how to repair or upgrade your
device if you want to (or have to) do it yourself.</p>
<h3 id="wifi">WiFi</h3>
<p>The built-in Intel AX200 WiFi interface works fine, provided you have a
new-enough <code>linux-firmware</code> package and kernel version installed.</p>
<p>I had trouble with Linux 5.6.0, and Linux 5.6.5 fixed it. Luckily, at the time
of writing, Linux 5.11 is the most recent release, so most distributions should
be recent enough for things to just work.</p>
<p>The WiFi card reaches almost the same download speed as the most modern WiFi
device I can test: a MacBook Air M1. Both are connected to my <a href="https://unifi-hd.ui.com/">UniFi
UAP-AC-HD</a> access point.</p>
<table>
<thead>
<tr>
<th>Laptop</th>
<th>Download</th>
<th>Upload</th>
</tr>
</thead>
<tbody>
<tr>
<td>ThinkPad X1 Extreme</td>
<td>500 Mbit/s</td>
<td>150 Mbit/s</td>
</tr>
<tr>
<td>MacBook Air M1</td>
<td>600 Mbit/s</td>
<td>500 Mbit/s</td>
</tr>
</tbody>
</table>
<p>I’m not sure why the upload speed is so low in comparison.</p>
<h3 id="gpu">GPU</h3>
<p>The GPU in this machine is by far the most troublesome bit of hardware.</p>
<p>I had hoped that after many years of laptops containing Intel/nVidia hybrid
graphics, this setup would largely work, but was disappointed.</p>
<p>Both the proprietary nVidia driver and the <code>nouveau</code> driver would not work
reliably for me. I ran into kernel error messages and hard-freezes, with even
SSH sessions to the machine breaking.</p>
<p>In the end, I blacklisted the <code>nouveau</code> driver to use Intel graphics only:</p>
<pre tabindex="0"><code>% echo blacklist nouveau | sudo tee /etc/modprobe.d/blacklist.conf 
</code></pre><p>Without the nVidia driver, the GPU will not go into powersave mode, so I remove
it from the PCI bus entirely to save power:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#007020">#!/bin/zsh
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span>
</span></span><span style="display:flex;"><span>sudo tee /sys/bus/pci/devices/0000<span style="color:#4070a0;font-weight:bold">\:</span>01<span style="color:#4070a0;font-weight:bold">\:</span>00.0/remove <span style="color:#666">&lt;&lt;&lt;</span><span style="color:#40a070">1</span>
</span></span><span style="display:flex;"><span>sudo tee /sys/bus/pci/devices/0000<span style="color:#4070a0;font-weight:bold">\:</span>01<span style="color:#4070a0;font-weight:bold">\:</span>00.1/remove <span style="color:#666">&lt;&lt;&lt;</span><span style="color:#40a070">1</span>
</span></span></code></pre></div><p>You can only re-awaken the GPU with a reboot.</p>
<p>Obviously this isn’t a great setup — I would prefer to be able to actually use
the GPU. If you have any tips or a better experience, please let me know.</p>
<p>Also note that the HDMI port will be unusable if you go this route, as the HDMI
port is connected to the nVidia GPU only.</p>
<h3 id="battery-life">Battery life</h3>
<p>The 80 Wh battery lasts between 5 to 6 hours for me, without any extra power
saving tuning beyond what the Linux distribution Fedora 33 comes with by
default.</p>
<p>This is good enough for using the laptop away from a power socket from time to
time, which matches my expectation for this kind of mobile workstation.</p>
<h2 id="software-support">Software support</h2>
<p>Linux support is generally good on this machine! Yes, I provide a few pointers
in this article regarding problems, patches and old software versions. But, if
you use a newer Linux distribution, all of these fixes are included and things
just work out of the box. I tested with Fedora 33.</p>
<p>For a few months, I was using this laptop exclusively with my research Linux
distribution <a href="https://distr1.org/">distri</a>, so even if you just track upstream
software closely, the machine works well.</p>
<h3 id="firmware-updates">Firmware updates</h3>
<p>Lenovo partnered with the <a href="https://fwupd.org/">Linux Vendor Firmware Service Project
(LVFS)</a>, which means that through <code>fwupd</code>, ThinkPad laptops
such as this X1 Extreme can easily receive firmware updates!</p>
<p>This is a huge improvement in comparison to earlier ThinkPad models, where you
had to jump through hoops with Windows-only software, or CD images that you
needed to boot just right.</p>
<p>If your laptop has a very old firmware version (before <code>1.30</code>), you might be
affected by the <a href="https://wiki.archlinux.org/index.php/Lenovo_ThinkPad_X1_Extreme_(Gen_2)#Skipping_keystrokes">skipping
keystrokes</a>
issues. You can check using the always-handy <a href="https://manpages.debian.org/lshw.1"><code>lshw(1)</code></a>

tool.</p>
<h2 id="performance">Performance</h2>
<p>The specific configuration of my ThinkPad is:</p>
<table>
<thead>
<tr>
<th></th>
<th>ThinkPad X1 Extreme Spec (2020)</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>Intel Core i7-9750H CPU @ 2.60GHz</td>
</tr>
<tr>
<td>RAM</td>
<td>2 × 32 GB Samsung M471A4G43MB1-CTD</td>
</tr>
<tr>
<td>Disk</td>
<td>2 × SAMSUNG MZVLB2T0HALB-000L7 NVMe disk</td>
</tr>
</tbody>
</table>
<p>You can google for CPU benchmarks and comparisons yourself, and those likely are
more scientific and carefully done than I have time for.</p>
<p>What I can provide however, is a comparison of working on one of my projects on
the ThinkPad vs. on my workstation, an Intel Core i9-9900K that I bought in
2018:</p>
<table>
<thead>
<tr>
<th></th>
<th>Workstation Spec (2018)</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>Intel(R) Core(TM) i9-9900K CPU @ 3.60GHz</td>
</tr>
<tr>
<td>RAM</td>
<td>4 × Corsair CMK32GX4M2A2666C16</td>
</tr>
<tr>
<td>Disk</td>
<td>Corsair Force MP600 M.2 NVMe disk</td>
</tr>
</tbody>
</table>
<p>Specifically, I am comparing how long my manpage static archive generator
<a href="https://github.com/Debian/debiman/">debiman</a> takes to analyze and render all
manpages in Debian unstable, using the following command:</p>
<pre tabindex="0"><code>ulimit -n 8192; time ~/go/bin/debiman \
  -keyring=/usr/share/keyrings/debian-archive-keyring.gpg \
  -sync_codenames=, \
  -sync_suites=unstable \
  -serving_dir=/srv/man/benchmark \
  -inject_assets=~/go/src/github.com/Debian/debiman/debian-assets \
  -concurrency_render=20 \
  -alternatives_dir=~/go/src/github.com/Debian/debiman/piuparts
</code></pre><p>On both machines, I ensured that:</p>
<ol>
<li>The CPU performance governor was set to <code>performance</code></li>
<li>A warm <code>apt-cacher-ng</code> cache was present, i.e. network download was not part of the test.</li>
<li>Linux kernel caches were dropped using <code>echo 3 | sudo tee /proc/sys/vm/drop_caches</code></li>
<li>I was using <a href="https://github.com/Debian/debiman/tree/f78c160f05c1f4d25c7836a6ca9198019947c1b5">debiman git revision <code>f78c160</code></a></li>
</ol>
<p>Here are the results:</p>
<table>
<thead>
<tr>
<th>Machine</th>
<th>Time</th>
</tr>
</thead>
<tbody>
<tr>
<td>i9-9900K Workstation</td>
<td>4:57,10 (100%)</td>
</tr>
<tr>
<td>ThinkPad X1 Extreme (Gen 2)</td>
<td>7:19,56 (147%)</td>
</tr>
</tbody>
</table>
<p>This reaffirms my impression that even high-end laptop hardware just cannot beat
a workstation setup (which has more space and better thermals), but it comes
close enough to be useful.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Positives:</p>
<ul>
<li>
<p>The ergonomics of the device really are great. It is a pleasure to type on a
first-class, full-size ThinkPad keyboard. The screen has good quality and a
high resolution.</p>
</li>
<li>
<p>Performance-wise, this machine can almost replace a proper workstation.</p>
</li>
</ul>
<p>Negatives are:</p>
<ul>
<li>the mediocre battery life</li>
<li>an annoyingly loud fan that spins up too frequently</li>
<li>poor software/driver support for hybrid nVidia GPUs.</li>
</ul>
<p>Notably, all of these could be improved by better power saving, so perhaps it’s
just a matter of time until Linux kernel developers land some improvements…? :)</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[How I configured and then promptly returned a MikroTik CCR2004 router for Fiber7]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/"/>
    <id>https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/</id>
    <published>2021-05-28T14:57:00+02:00</published>
    <content type="html"><![CDATA[<p>init7 recently announced that with their <a href="https://www.init7.net/en/internet/fiber7/">FTTH fiber offering
Fiber7</a>, they will now sell and
connect you with 25 Gbit/s (Fiber7-X2) or 10 Gbit/s (Fiber7-X) fiber optics, if
you want more than 1 Gbit/s.</p>
<p>This is possible thanks to the upgrade of their network infrastructure as part
of their “lifecycle management”, meaning the old networking gear was declared as
end-of-life. The new networking gear supports not only SFP+ modules (10 Gbit/s),
but also SFP28 modules (25 Gbit/s).</p>
<p>Availability depends on the <a href="https://www.init7.net/en/infrastructure/fiber7-pops/">POP (Point Of Presence, German «Anschlusszentrale»)
you’re connected to</a>. My
POP is planned to be upgraded in September.</p>
<p>Nevertheless, I wanted to already prepare my end of the connection, and ordered
the only router that <a href="https://www.init7.net/en/internet/hardware/">init7 currently lists as compatible with
Fiber7-X/X2</a>: the MikroTik
CCR2004-1G-12S+2XS.</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/mikrotik-ccr2004.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-28-configured-and-returned-mikrotik-ccr2004-for-fiber7/mikrotik-ccr2004_hu855bbe0a9c47ac557e5b09db74fa3b06_1283584_600x0_resize_q75_box.jpg"
  alt="MikroTik CCR2004-1G-12S&#43;2XS" title="MikroTik CCR2004-1G-12S&#43;2XS"
  width="600"
  height="347"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>The rest of this article walks through what I needed to configure (a lot,
compared to Ubiquiti or OpenWRT) in the hope that it helps other MikroTik users,
and then ends in <a href="#returned">Why I returned it</a>.</p>
<h2 id="configuration">Configuration</h2>
<p>Connect an Ethernet cable to the management port on the MikroTik and:</p>
<ol>
<li>log into the system using <code>ssh admin@192.168.88.1</code></li>
<li>point a web browser to “Webfig” at http://192.168.88.1/ (no login required)</li>
</ol>
<h2 id="update-firmware">Update firmware</h2>
<p>Update the CCR2004 to the latest firmware version. At the time of writing, the
Long-term RouterOS track is <a href="https://mikrotik.com/download">at version 6.47.9</a>
for the CCR2004 (ARM64):</p>
<ol>
<li>Use <code>/system package print</code> to display the current version.</li>
<li>Upload <code>routeros-arm64-6.47.9.npk</code> using Webfig.</li>
<li><code>/system reboot</code> and verify that <code>/system package print</code> shows <code>6.47.9</code> now.</li>
<li><code>/system routerboard upgrade</code> to upgrade the firmware of the underlying chipsets, etc. Enter <code>y</code> at the prompt, wait for a response of &ldquo;echo: system,info,critical Firmware upgraded successfully, please reboot for changes to take effect&rdquo;</li>
<li><code>/system reboot</code> again and verify that <code>/system routerboard print</code> has the line <code>current-firmware:6.47.9</code> now.</li>
</ol>
<h2 id="set-up-auth">Set up auth</h2>
<p>Set a password to prevent others from logging into the router:</p>
<pre tabindex="0"><code>/user set admin password=secret
</code></pre><p>Additionally, you can enable passwordless SSH key login, if you
want.</p>
<ol>
<li>
<p>Create an RSA key, because <a href="https://forum.mikrotik.com/viewtopic.php?t=109143">ed25519 keys are not
supported</a>:</p>
<pre tabindex="0"><code>% ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key: /home/michael/.ssh/id_mikrotik
</code></pre></li>
<li>
<p>Upload the <code>id_mikrotik.pub</code> file in Webfig</p>
</li>
<li>
<p>Import the SSH public key for the <code>admin</code> user:</p>
<pre tabindex="0"><code>/user ssh-keys import user=admin public-key-file=id_mikrotik.pub
</code></pre></li>
</ol>
<h2 id="lock-down-the-router">Lock down the router</h2>
<ol>
<li>
<p><a href="https://help.mikrotik.com/docs/display/ROS/Webfig#Webfig-EnableHTTPS">Enable HTTPS in Webfig</a>.</p>
</li>
<li>
<p>Disable all remote access except for SSH and HTTPS:</p>
<pre tabindex="0"><code>/ip service disable telnet,ftp,www,api,api-ssl,winbox
</code></pre></li>
<li>
<p>Follow <a href="https://wiki.mikrotik.com/wiki/Manual:Securing_Your_Router#Neighbor_Discovery">MikroTik Securing Your
Router</a>
recommendations:</p>
<pre tabindex="0"><code>/tool mac-server set allowed-interface-list=none
/tool mac-server mac-winbox set allowed-interface-list=none
/tool mac-server ping set enabled=no
/tool bandwidth-server set enabled=no
/ip ssh set strong-crypto=yes
/ip neighbor discovery-settings set discover-interface-list=none
</code></pre></li>
</ol>
<h2 id="enable-dhcpv6-client">Enable DHCPv6 Client</h2>
<p>For some reason, you need to explicitly enable IPv6 in 2021:</p>
<pre tabindex="0"><code>/system package enable ipv6
/system reboot
</code></pre><p>MikroTik says this is a precaution so that users don’t end up with default-open
firewall settings for IPv6. But then why don’t they just add some default
firewall rules?!</p>
<p>Anyway, to configure and immediately enable the DHCPv6 client, use:</p>
<pre tabindex="0"><code>/ipv6 dhcp-client add pool-name=fiber7 pool-prefix-length=64 interface=sfp28-1 add-default-route=yes use-peer-dns=no request=address,prefix
</code></pre><h3 id="modify-the-ipv6-duid">Modify the IPv6 DUID</h3>
<p>Unfortunately, MikroTik does not offer any user interface to set the IPv6 DUID,
which I need to configure to obtain my static IPv6 network prefix from my
provider’s DHCPv6 server.</p>
<p>Luckily, the DUID is included in backup files, so we can edit it and restore
from backup:</p>
<ol>
<li>
<p>Run <code>/system backup save</code></p>
</li>
<li>
<p>Download the backup file in Webfig by navigating to Files → Backup → Download.</p>
</li>
<li>
<p>Convert the backup file to hex in textual form, edit the DUID and convert it back to binary:</p>
<pre tabindex="0"><code>% xxd MikroTik-19700102-0111.backup MikroTik-19700102-0111.backup.hex

% emacs MikroTik-19700102-0111.backup.hex
# Search for “dhcp/duid” in the file and edit accordingly:
# got:  00030001085531dfa69e

% xxd -r MikroTik-19700102-0111.backup.hex MikroTik-19700102-0111-patched.backup
</code></pre></li>
<li>
<p>Upload the file in Webfig, then restore the backup:</p>
<p><code>/system backup load name=MikroTik-19700102-0111-patched.backup</code></p>
</li>
</ol>
<h2 id="enable-ipv6-router-advertisements">Enable IPv6 Router Advertisements</h2>
<p>To make the router assign an IPv6 address from the obtained pool for itself, and
then send IPv6 Router Advertisements to the network, set:</p>
<pre tabindex="0"><code>/ipv6 address add address=::1 from-pool=fiber7 interface=bridge1
/ipv6 nd add interface=bridge1 managed-address-configuration=yes other-configuration=yes
</code></pre><h2 id="enable-dhcpv4-client">Enable DHCPv4 Client</h2>
<p>To configure and immediately enable the <a href="https://wiki.mikrotik.com/wiki/Manual:IP/DHCP_Client">DHCPv4
client</a> on the upstream
port, use:</p>
<pre tabindex="0"><code>/ip dhcp-client add interface=sfp28-1 disabled=no
</code></pre><p>I also changed the MAC address to match my old router’s address, just to take
maximum precaution to avoid any Port Security related issues with my provider’s
DHCP server:</p>
<pre tabindex="0"><code>/interface ethernet set sfp28-1 mac-address=00:0d:fa:4c:0c:31
</code></pre><h2 id="enable-dns-server">Enable DNS Server</h2>
<p>By default, the Mikrotik Router will not respond to DNS Queries, when enabling remote requests make sure to firewall the DNS server from responding to DNS Queries from the greater internet. Otherwise you will find yourself participating in DNS DDOS attacks.</p>
<pre tabindex="0"><code>/ip dns set allow-remote-requests=yes
/ip firewall filter add chain=input protocol=tcp port=53 in-interface=sfp28-1 action=drop
/ip firewall filter add chain=input protocol=udp port=53 in-interface=sfp28-1 action=drop
</code></pre><h2 id="enable-dhcpv4-server">Enable DHCPv4 Server</h2>
<p>First, let’s bundle all SFP+ ports into a single bridge interface:</p>
<pre tabindex="0"><code>/interface bridge add name=bridge1
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus1 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus2 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus3 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus4 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus5 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus6 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus7 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus8 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus9 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus10 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus11 hw=yes
/interface bridge port add bridge=bridge1 interface=sfp-sfpplus12 hw=yes
</code></pre><p>This means we’ll use the device like a big switch with routing between the
switch and the uplink port <code>sfp28-1</code>.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note</strong>: I don’t know if this configuration reduces performance. I find
MikroTik’s documentation regarding hardware offloading and performance not the
clearest. Then again, the CCR2004 has no hardware offloading whatsoever (?) <a href="https://forum.mikrotik.com/viewtopic.php?t=173065">as
per a forum post</a>.</div>
  </div>
</aside>

<p>To configure the DHCPv4 Server, configure an IP address, then start the setup
wizard:</p>
<pre tabindex="0"><code>/ip address add address=10.0.0.1/24 interface=bridge1
/ip dhcp-server setup
Select interface to run DHCP server on

dhcp server interface: bridge1
Select network for DHCP addresses

dhcp address space: 10.0.0.0/24
Select gateway for given network

gateway for dhcp network: 10.0.0.1
Select pool of ip addresses given out by DHCP server

addresses to give out: 10.0.0.2-10.0.0.240
Select DNS servers

dns servers: 10.0.0.1,8.8.8.8
Select lease time

lease time: 20m
</code></pre><h2 id="enable-ipv4-nat">Enable IPv4 NAT</h2>
<p>We need NAT to route all IPv4 traffic over our single public IP address:</p>
<pre tabindex="0"><code>/ip firewall nat add action=masquerade chain=srcnat out-interface=sfp28-1
</code></pre><p>Disable NAT services for security, e.g. to mitigate against NAT slipstreaming
attacks:</p>
<pre tabindex="0"><code>/ip firewall service-port disable ftp,tftp,irc,h323,sip,pptp,udplite,dccp,sctp
</code></pre><p>I can observe ≈10-20% CPU load when doing a Gigabit speed test over IPv4.</p>
<h2 id="todo-list">TODO list</h2>
<p>The following features I did not get around to configuring, but they were on my
list:</p>
<ul>
<li><a href="https://help.mikrotik.com/docs/display/ROS/First+Time+Configuration">IPv4 port forwardings</a></li>
<li>Cloudflare DynDNS update script</li>
<li><a href="https://wiki.mikrotik.com/wiki/Setting_static_DNS_record_for_each_DHCP_lease">DNS resolution for DHCP hostnames</a></li>
</ul>
<h2 id="returned">Why I returned it</h2>
<p>Initially, I thought the device’s fan spins up only at boot, and then the large
heatsink takes care of all cooling needs. Unfortunately, after an hour or so
into my experiment, I noticed that the MikroTik would spin up the fan for a
whole minute or so occasionally! Very annoying.</p>
<p>I also ran into weird DNS slow-downs, which I didn’t fully diagnose. In
Wireshark, it looked like my machine sent 2 DNS queries but received only 1 DNS
result, and then waited for a timeout.</p>
<p>I also noticed that I have a few more unexpected dependencies such as my home
automation using DHCP lease state by subscribing to an MQTT topic. Addressing
this issue and other similar little problems would have taken a bunch more time
and would have resulted in a less reliable system than I have today.</p>
<p>Since I last used MikroTik in 2014 the software seems to have barely changed. I
wish they finally implemented some table-stakes features like DNS resolution for
DHCP hostnames.</p>
<p>Given all the above, I no longer felt like getting enough value for the money
from the MikroTik, and found it easier to just switch back to <a href="https://router7.org/">my own
router7</a> and return the MikroTik.</p>
<p>I will probably stick with the router7 software, but exchange the PC Engines APU
with the smallest PC that has enough PCI-E bandwidth for a multi-port SFP28
network card.</p>
<h2 id="appendix-a-full-configuration">Appendix A: Full configuration</h2>
<pre tabindex="0"><code># may/28/2021 11:40:15 by RouterOS 6.47.9
# software id = 6YZE-HKM8
#
# model = CCR2004-1G-12S+2XS
/interface bridge
add name=bridge1
/interface ethernet
set [ find default-name=sfp28-1 ] auto-negotiation=no mac-address=00:0d:fa:4c:0c:31
/interface wireless security-profiles
set [ find default=yes ] supplicant-identity=MikroTik
/ip pool
add name=dhcp_pool0 ranges=10.0.0.2-10.0.0.240
/ip dhcp-server
add address-pool=dhcp_pool0 disabled=no interface=bridge1 lease-time=20m name=dhcp1
/interface bridge port
add bridge=bridge1 interface=sfp-sfpplus1
add bridge=bridge1 interface=sfp-sfpplus2
add bridge=bridge1 interface=sfp-sfpplus3
add bridge=bridge1 interface=sfp-sfpplus4
add bridge=bridge1 interface=sfp-sfpplus5
add bridge=bridge1 interface=sfp-sfpplus6
add bridge=bridge1 interface=sfp-sfpplus7
add bridge=bridge1 interface=sfp-sfpplus8
add bridge=bridge1 interface=sfp-sfpplus9
add bridge=bridge1 interface=sfp-sfpplus10
add bridge=bridge1 interface=sfp-sfpplus11
add bridge=bridge1 interface=sfp-sfpplus12
/ip neighbor discovery-settings
set discover-interface-list=none
/ip address
add address=192.168.88.1/24 comment=defconf interface=ether1 network=192.168.88.0
add address=10.0.0.1/24 interface=bridge1 network=10.0.0.0
/ip dhcp-client
add disabled=no interface=sfp28-1 use-peer-dns=no
/ip dhcp-server lease
add address=10.0.0.54 mac-address=DC:A6:32:02:AA:10
/ip dhcp-server network
add address=10.0.0.0/24 dns-server=10.0.0.1 domain=lan gateway=10.0.0.1
/ip dns
set allow-remote-requests=yes servers=8.8.8.8,8.8.4.4,2001:4860:4860::8888,2001:4860:4860::8844
/ip firewall nat
add action=masquerade chain=srcnat out-interface=sfp28-1 to-addresses=0.0.0.0
/ip firewall service-port
set ftp disabled=yes
set tftp disabled=yes
set irc disabled=yes
set h323 disabled=yes
set sip disabled=yes
set pptp disabled=yes
set udplite disabled=yes
set dccp disabled=yes
set sctp disabled=yes
/ip service
set telnet disabled=yes
set ftp disabled=yes
set www disabled=yes
set www-ssl certificate=webfig disabled=no
set api disabled=yes
set winbox disabled=yes
set api-ssl disabled=yes
/ip ssh
set strong-crypto=yes
/ipv6 address
add address=::1 from-pool=fiber7 interface=bridge1
/ipv6 dhcp-client
add add-default-route=yes interface=sfp28-1 pool-name=fiber7 request=address,prefix use-peer-dns=no
/ipv6 nd
add interface=bridge1 managed-address-configuration=yes other-configuration=yes
/system clock
set time-zone-name=Europe/Zurich
/system logging
add topics=dhcp
/tool bandwidth-server
set enabled=no
/tool mac-server
set allowed-interface-list=none
/tool mac-server mac-winbox
set allowed-interface-list=none
/tool mac-server ping
set enabled=no
</code></pre>]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Home network 10 Gbit/s upgrade]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/"/>
    <id>https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/</id>
    <published>2021-05-16T17:33:16+02:00</published>
    <content type="html"><![CDATA[<p>After <a href="/posts/2020-08-09-fiber-link-home-network/">adding a fiber link to my home
network</a>, I am upgrading that link
from 1 Gbit/s to 10 Gbit/s.</p>
<p>As a reminder, conceptually the fiber link is built using two media converters
from/to ethernet:</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-08-04-media-converters.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-08-04-media-converters_hu863a0a53ff58eb79e087ca8992fd5d37_416326_600x0_resize_q75_box.jpg"
  alt="0.9mm thin fiber cables" title="0.9mm thin fiber cables"
  width="600"
  height="217"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Schematically, this is what’s connected to both ends:</p>




<a href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-05-15-bottleneck-1g.svg"><img
  src="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-05-15-bottleneck-1g.svg"
  alt="1 Gbit/s bottleneck" title="1 Gbit/s bottleneck"
  style="border: 1px solid #000; margin-right: 1rem"
  
  loading="lazy"></a>


<p>All links are 1 Gbit/s, so it’s easy to see that, for example, transfers between
chuchi↔router7 and storage2↔midna cannot both use 1 Gbit/s at the same time.</p>
<p>This upgrade serves 2 purposes:</p>
<ol>
<li>
<p><strong>Raise the floor to 1 Gbit/s end-to-end</strong>: Ensure that serving large files
(e.g. distri Linux images and packages) does no longer impact, and is no
longer impacted by, other bandwidth flows that also use this transfer link in
my home network, e.g. daily backups.</p>
</li>
<li>
<p><strong>Raise the ceiling to 10 Gbit/s</strong>: Make it possible to selectively upgrade
Linux PCs on either end of the link to 10 Gbit/s peak bandwidth.</p>
</li>
</ol>
<p>Note that the internet uplink remains untouched at 1 Gbit/s — only transfers
within the home network can happen at 10 Gbit/s.</p>
<h2 id="replacing-the-media-converters-with-mikrotik-switches">Replacing the media converters with Mikrotik switches</h2>
<p>We first replace both media converters and switches with a <a href="https://mikrotik.com/product/crs305_1g_4s_in">Mikrotik
CRS305-1G-4S+IN</a>.</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-07-30-mikrotiks-featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-07-30-mikrotiks-featured_hu0957e5d484a34f5f279de33468b78758_1267758_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-07-30-mikrotiks-featured_hu0957e5d484a34f5f279de33468b78758_1267758_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2020-07-30-mikrotiks-featured_hu0957e5d484a34f5f279de33468b78758_1267758_600x0_resize_q75_box.jpg"
  alt="Mikrotik CRS305-1G-4S&#43;IN" title="Mikrotik CRS305-1G-4S&#43;IN"
  width="600"
  height="411"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>This device <a href="https://www.digitec.ch/de/s1/product/mikrotik-crs305-1g-4sin-5ports-switch-9876046">costs 149 CHF on digitec</a> and comes with 5 ports:</p>
<ul>
<li>1 × RJ45 Ethernet port for management, can be used as a regular 1 Gbit/s port.</li>
<li>4 × SFP+ ports</li>
</ul>
<p>Each SFP+ port can be used with either an RJ-45 Ethernet or a fiber SFP+ module,
but beware! As <a href="https://twitter.com/Nexus2kSwiss/status/1394395280120897544">Nexus2kSwiss points out on
twitter</a>, the
Mikrotik supports <strong>at most 2 RJ-45 SFPs at a time</strong>!</p>
<h2 id="fiber-module-upgrade">Fiber module upgrade</h2>
<p>I’m using 10 Gbit/s fiber SFP+ modules for the fiber link between my kitchen and
living room.</p>
<p>To make use of the 10 Gbit/s link between the switches, all devices that should
get their guaranteed 1 Gbit/s end-to-end connection need to be connected
directly to a Mikrotik switch.</p>
<p>I’m connecting the PCs to the switch using Direct Attach Cables (DAC) where
possible. The advantage of DAC cables over RJ45 SFP+ modules is their lower
power usage and heat.</p>
<p>The resulting list of SFP modules used in the two Mikrotik switches looks like
so:</p>
<table>
<thead>
<tr>
<th>Mikrotik 1 SFP</th>
<th>speed</th>
<th></th>
<th>speed</th>
<th>Mikrotik 2 SFP</th>
</tr>
</thead>
<tbody>
<tr>
<td>chuchi</td>
<td>10 Gbit/s DAC</td>
<td></td>
<td>10 Gbit/s DAC</td>
<td>midna</td>
</tr>
<tr>
<td>storage2</td>
<td>1 Gbit/s  RJ45</td>
<td></td>
<td>1 Gbit/s RJ45</td>
<td>router7</td>
</tr>
<tr>
<td></td>
<td>10 Gbit/s BiDi</td>
<td>⬅ BiDi fiber link ➡</td>
<td>10 Gbit/s BiDi</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="hardware-sourcing">Hardware sourcing</h2>
<p>The total cost of this upgrade is 676 CHF, with the biggest chunk spent on the
Mellanox ConnectX-3 network cards and MikroTik switches.</p>
<h3 id="fs-fiber-store-order">FS (Fiber Store) order</h3>
<p><a href="https://www.FS.COM">FS.COM</a> was my go-to source for anything
fiber-related. Everything they have is very affordable, and products in stock at
their German warehouse arrive in Switzerland (and presumably other European
countries, too) within the same week.</p>
<table>
<thead>
<tr>
<th>num</th>
<th>price</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>1 ×</td>
<td>34 CHF</td>
<td><a href="https://www.fs.com/de/products/74681.html">Generic Compatible 10GBASE-BX BiDi SFP+ 1270nm-TX/1330nm-RX 10km DOM Transceiver Module, FS P/N: SFP-10G-BX #74681</a></td>
</tr>
<tr>
<td>1 ×</td>
<td>34 CHF</td>
<td><a href="https://www.fs.com/de/products/74682.html">Generic Compatible 10GBASE-BX BiDi SFP+ 1330nm-TX/1270nm-RX 10km DOM Transceiver Module, FS P/N: SFP-10G-BX #74682</a></td>
</tr>
<tr>
<td>2 ×</td>
<td>14 CHF</td>
<td><a href="https://www.fs.com/de/products/74621.html">3m Generic Compatible 10G SFP+ Passive Direct Attach Copper Twinax Cable</a></td>
</tr>
<tr>
<td>0 ×</td>
<td>56 CHF</td>
<td><del><a href="https://www.fs.com/de/products/74680.html">SFP+ Transceiver Modul - Generisch kompatibel 10GBASE-T SFP+ Kupfer RJ-45 30m, FS P/N: SFP-10G-T #74680</a></del></td>
</tr>
</tbody>
</table>
<h3 id="digitec-order">digitec order</h3>
<p>There are a few items that <a href="https://www.FS.COM">FS.COM</a> doesn’t stock. These I
bought at <a href="https://www.digitec.ch/">digitec</a>, a big and popular electronics
store in Switzerland. My thinking is that if products are available at digitec,
they most likely are available at your preferred big electronics store, too.</p>
<table>
<thead>
<tr>
<th>num</th>
<th>price</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>2 ×</td>
<td>149 CHF</td>
<td><a href="https://www.digitec.ch/de/s1/product/mikrotik-crs305-1g-4sin-5ports-switch-9876046">Mikrotik CRS305-1G-4S+IN</a> switch</td>
</tr>
</tbody>
</table>
<h3 id="misc-order">misc order</h3>
<p>The Mellanox cards are not as widely available as I’d like.</p>
<p>I’m waiting for an FS.COM card to arrive, which might be a better choice.</p>
<table>
<thead>
<tr>
<th>num</th>
<th>price</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>2 ×</td>
<td>129 EUR</td>
<td><a href="https://www.heise.de/preisvergleich/nvidia-mellanox-connectx-3-en-10g-mcx311a-xcat-a2508412.html">Mellanox ConnectX-3 MCX311A-XCAT</a></td>
</tr>
</tbody>
</table>
<h2 id="mikrotik-switch-setup">Mikrotik switch setup</h2>
<p>I want to use my switches only as switches, not for any routing or other layer 3
features that might reduce bandwidth, so I first reboot the <a href="https://mikrotik.com/product/crs305_1g_4s_in">MikroTik
CRS305-1G-4S+</a> into SwOS:</p>
<ol>
<li>
<p>In the web interface menu, navigate to <em>System → Routerboard →
Settings</em>, open the <em>Boot OS</em> drop-down and select option
<em>SwOS</em>.</p>
</li>
<li>
<p>In the web interface menu, navigate to <em>System → Reboot</em>.</p>
</li>
<li>
<p>After the device rebooted, change the hostname which was reset to <code>MikroTik</code>.</p>
</li>
</ol>
<p>Next, upgrade the firmware to 2.12 to fix a weird issue with certain
combinations of SFP modules (SFP-10G-BX in SFP1, SFP-10G-T in SFP2):</p>
<ol>
<li>In the SwOS web interface, select the <em>Upgrade</em> tab, then click
<em>Download &amp; Upgrade</em>.</li>
</ol>
<h2 id="network-card-setup-linux">Network card setup (Linux)</h2>
<p>After booting with the Mellanox ConnectX3 in a PCIe slot, the card should show
up in <a href="https://manpages.debian.org/dmesg.8"><code>dmesg(8)</code></a>
:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>mlx4_core: Mellanox ConnectX core driver v4.0-0
</span></span><span style="display:flex;"><span>mlx4_core: Initializing 0000:03:00.0
</span></span><span style="display:flex;"><span>mlx4_core 0000:03:00.0: DMFS high rate steer mode is: disabled performance optimized steering
</span></span><span style="display:flex; background-color:#d8d8d8"><span>mlx4_core 0000:03:00.0: 31.504 Gb/s available PCIe bandwidth (8.0 GT/s PCIe x4 link)
</span></span><span style="display:flex;"><span>mlx4_en: Mellanox ConnectX HCA Ethernet driver v4.0-0
</span></span><span style="display:flex;"><span>mlx4_en 0000:03:00.0: Activating port:1
</span></span><span style="display:flex;"><span>mlx4_en: 0000:03:00.0: Port 1: Using 16 TX rings
</span></span><span style="display:flex;"><span>mlx4_en: 0000:03:00.0: Port 1: Using 16 RX rings
</span></span><span style="display:flex;"><span>mlx4_en: 0000:03:00.0: Port 1: Initializing port
</span></span><span style="display:flex;"><span>mlx4_en 0000:03:00.0: registered PHC clock
</span></span><span style="display:flex;"><span>mlx4_core 0000:03:00.0 enp3s0: renamed from eth0
</span></span><span style="display:flex;"><span>&lt;mlx4_ib&gt; mlx4_ib_add: mlx4_ib: Mellanox ConnectX InfiniBand driver v4.0-0
</span></span><span style="display:flex;"><span>&lt;mlx4_ib&gt; mlx4_ib_add: counter index 1 for port 1 allocated 1
</span></span><span style="display:flex;"><span>mlx4_en: enp3s0: Steering Mode 1
</span></span><span style="display:flex;"><span>mlx4_en: enp3s0: Link Up</span></span></code></pre></div>
<p>Another way to verify the device is running at maximum speed on the computer’s
PCIe bus, is to ensure <code>LnkSta</code> matches <code>LnkCap</code> in the <a href="https://manpages.debian.org/lspci.8"><code>lspci(8)</code></a>
 output:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>% sudo lspci -vv
</span></span><span style="display:flex;"><span>03:00.0 Ethernet controller: Mellanox Technologies MT27500 Family [ConnectX-3]
</span></span><span style="display:flex;"><span>	Subsystem: Mellanox Technologies Device 0055
</span></span><span style="display:flex;"><span>[…]
</span></span><span style="display:flex;"><span>	Capabilities: [60] Express (v2) Endpoint, MSI 00
</span></span><span style="display:flex;"><span>[…]
</span></span><span style="display:flex; background-color:#d8d8d8"><span>		LnkCap:	Port #8, Speed 8GT/s, Width x4, ASPM L0s, Exit Latency L0s unlimited
</span></span><span style="display:flex;"><span>			ClockPM- Surprise- LLActRep- BwNot- ASPMOptComp+
</span></span><span style="display:flex;"><span>		LnkCtl:	ASPM Disabled; RCB 64 bytes, Disabled- CommClk+
</span></span><span style="display:flex;"><span>			ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt-
</span></span><span style="display:flex; background-color:#d8d8d8"><span>		LnkSta:	Speed 8GT/s (ok), Width x4 (ok)
</span></span><span style="display:flex;"><span>			TrErr- Train- SlotClk+ DLActive- BWMgmt- ABWMgmt-
</span></span><span style="display:flex;"><span>[…]</span></span></code></pre></div>
<p>You can verify your network link is running at 10 Gbit/s using <a href="https://manpages.debian.org/ethtool.8"><code>ethtool(8)</code></a>
:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>% sudo ethtool enp3s0
</span></span><span style="display:flex;"><span>Settings for enp3s0:
</span></span><span style="display:flex;"><span>	Supported ports: [ FIBRE ]
</span></span><span style="display:flex;"><span>	Supported link modes:   1000baseKX/Full
</span></span><span style="display:flex;"><span>	                        10000baseKR/Full
</span></span><span style="display:flex;"><span>	Supported pause frame use: Symmetric Receive-only
</span></span><span style="display:flex;"><span>	Supports auto-negotiation: No
</span></span><span style="display:flex;"><span>	Supported FEC modes: Not reported
</span></span><span style="display:flex;"><span>	Advertised link modes:  1000baseKX/Full
</span></span><span style="display:flex;"><span>	                        10000baseKR/Full
</span></span><span style="display:flex;"><span>	Advertised pause frame use: Symmetric
</span></span><span style="display:flex;"><span>	Advertised auto-negotiation: No
</span></span><span style="display:flex;"><span>	Advertised FEC modes: Not reported
</span></span><span style="display:flex; background-color:#d8d8d8"><span>	Speed: 10000Mb/s
</span></span><span style="display:flex;"><span>	Duplex: Full
</span></span><span style="display:flex;"><span>	Auto-negotiation: off
</span></span><span style="display:flex;"><span>	Port: Direct Attach Copper
</span></span><span style="display:flex;"><span>	PHYAD: 0
</span></span><span style="display:flex;"><span>	Transceiver: internal
</span></span><span style="display:flex;"><span>	Supports Wake-on: d
</span></span><span style="display:flex;"><span>	Wake-on: d
</span></span><span style="display:flex;"><span>        Current message level: 0x00000014 (20)
</span></span><span style="display:flex;"><span>                               link ifdown
</span></span><span style="display:flex;"><span>	Link detected: yes</span></span></code></pre></div>
<h2 id="benchmarking-batch-transfers">Benchmarking batch transfers</h2>
<p>As mentioned in the introduction, routing 10 Gbit/s is out of scope in this
article. If you’re interested in routing performance, check out Andree Toonk’s
<a href="https://toonk.io/linux-kernel-and-measuring-network-throughput/index.html">post which confirms that Linux can route 10 Gbit/s at line
rate</a>.</p>
<p>The following sections cover individual batch transfers of large files, not many
small flows.</p>
<h3 id="iperf3-speed-test">iperf3 speed test</h3>
<p>Out of the box, the speeds that <a href="https://manpages.debian.org/iperf3.1"><code>iperf3(1)</code></a>
 measures
are decent:</p>
<pre tabindex="0"><code>chuchi % iperf3 --version
iperf 3.6 (cJSON 1.5.2)
Linux chuchi 4.19.0-16-amd64 #1 SMP Debian 4.19.181-1 (2021-03-19) x86_64
Optional features available: CPU affinity setting, IPv6 flow label, SCTP, TCP congestion algorithm setting, sendfile / zerocopy, socket pacing, authentication

chuchi % iperf3 --server
[…]

midna % iperf3 --version          
iperf 3.9 (cJSON 1.7.13)
Linux midna 5.12.1-arch1-1 #1 SMP PREEMPT Sun, 02 May 2021 12:43:58 +0000 x86_64
Optional features available: CPU affinity setting, IPv6 flow label, TCP congestion algorithm setting, sendfile / zerocopy, socket pacing, authentication

midna % iperf3 --client chuchi.lan
Connecting to host 10.0.0.173, port 5201
[  5] local 10.0.0.76 port 43168 connected to 10.0.0.173 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-1.00   sec  1.10 GBytes  9.42 Gbits/sec    0   1.62 MBytes       
[  5]   1.00-2.00   sec  1.09 GBytes  9.41 Gbits/sec    0   1.70 MBytes       
[  5]   2.00-3.00   sec  1.10 GBytes  9.41 Gbits/sec    0   1.70 MBytes       
[  5]   3.00-4.00   sec  1.09 GBytes  9.41 Gbits/sec    0   1.78 MBytes       
[  5]   4.00-5.00   sec  1.09 GBytes  9.41 Gbits/sec    0   1.87 MBytes       
[  5]   5.00-6.00   sec  1.10 GBytes  9.42 Gbits/sec    0   1.87 MBytes       
[  5]   6.00-7.00   sec  1.10 GBytes  9.42 Gbits/sec    0   1.87 MBytes       
[  5]   7.00-8.00   sec  1.10 GBytes  9.41 Gbits/sec    0   1.87 MBytes       
[  5]   8.00-9.00   sec  1.09 GBytes  9.41 Gbits/sec    0   1.96 MBytes       
[  5]   9.00-10.00  sec  1.09 GBytes  9.38 Gbits/sec  402   1.52 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.00  sec  11.0 GBytes  9.41 Gbits/sec  402             sender
[  5]   0.00-10.00  sec  11.0 GBytes  9.40 Gbits/sec                  receiver

iperf Done.
</code></pre><h3 id="http-speed-test">HTTP speed test</h3>
<p>Downloading a file from an <a href="https://manpages.debian.org/nginx.1"><code>nginx(1)</code></a>
 web server using <a href="https://manpages.debian.org/curl.1"><code>curl(1)</code></a>
 is fast, too:</p>
<pre tabindex="0"><code>% curl -o /dev/null http://chuchi.lan/distri/supersilverhaze/img/distri-disk.img.zst
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  934M  100  934M    0     0  1118M      0 --:--:-- --:--:-- --:--:-- 1117M
</code></pre><p>Note that this download was served from RAM (Linux page cache). The next upgrade
I need to do in this machine is replace the SATA SSD with an NVMe SSD, because
the disk is now the bottleneck.</p>
<h2 id="conclusion">Conclusion</h2>
<p>This was a pleasantly simple upgrade: plug in a bunch of new hardware and batch
transfers become faster.</p>
<p>The Mikrotik switch provides great value for money, and the Mellanox ConnectX-3
cards work well, provided you can find them.</p>
<h2 id="appendix-a-switching-from-rj45-sfp-modules-to-direct-attach-cables">Appendix A: Switching from RJ45 SFP+ modules to Direct Attach Cables</h2>
<p>Originally, I connected all PCs to the MikroTik switches with RJ45 SFP+ modules
for two reasons:</p>
<ol>
<li>I bought <a href="https://www.digitec.ch/de/s1/product/intel-x550-t2-pci-express-30-netzwerkadapter-5926807">Intel
X550-T2</a>
PCIe 10 Gbit/s network cards that RJ45 as my first choice.</li>
<li>The SFP+ modules are backwards-compatible and can be used with 1 Gbit/s RJ45
devices, too, which makes for a nice incremental upgrade path.</li>
</ol>
<p>However, I later was made aware that the RJ45 SFP+ modules use significantly
more power and run significantly hotter than Direct Attach Cables (DAC).</p>
<p>I measured it: each RJ45 SFP+ module was causing my BiDi SFP+ module to run 5℃
hotter!</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-06-06-sfp-temperatures.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-06-06-sfp-temperatures_hu7dc6d141e645d7cfd271ec6844fcfc18_272504_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-06-06-sfp-temperatures_hu7dc6d141e645d7cfd271ec6844fcfc18_272504_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-16-home-network-fiber-10-gbits-upgrade/2021-06-06-sfp-temperatures_hu7dc6d141e645d7cfd271ec6844fcfc18_272504_600x0_resize_q75_box.jpg"
  
  width="600"
  height="269"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>Around 06/02 I replaced one RJ45 SFP+ module with a Direct Attach Cable.</p>
<p>Around 06/06 I replaced the remaining RJ45 SFP+ module with another Direct
Attach Cable.</p>
<p>As you can see, this caused a 10℃ drop in temperature of the BiDi SFP+ module.</p>
<p>The MikroTik is still uncomfortably hot, making it hard to work with when it’s
powered on.</p>
<h2 id="appendix-b-network-card-setup-linux-with-intel-x550-t2">Appendix B: Network card setup (Linux) with Intel X550-T2</h2>
<p>For reference, here is the Network card setup (Linux) section, but with the
Intel X550-T2 that I previously used.</p>
<p>After booting with the Intel X550-T2 in a PCIe slot, the card should show up in
<a href="https://manpages.debian.org/dmesg.8"><code>dmesg(8)</code></a>
:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>ixgbe: Intel(R) 10 Gigabit PCI Express Network Driver
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.0: Multiqueue Enabled: Rx Queue count = 16, Tx Queue count = 16 XDP Queue count = 0
</span></span><span style="display:flex; background-color:#d8d8d8"><span>ixgbe 0000:03:00.0: 31.504 Gb/s available PCIe bandwidth (8.0 GT/s PCIe x4 link)
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.0: MAC: 4, PHY: 0, PBA No: H86377-006
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.0: Intel(R) 10 Gigabit Network Connection
</span></span><span style="display:flex;"><span>libphy: ixgbe-mdio: probed
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.1: Multiqueue Enabled: Rx Queue count = 16, Tx Queue count = 16 XDP Queue count = 0
</span></span><span style="display:flex; background-color:#d8d8d8"><span>ixgbe 0000:03:00.1: 31.504 Gb/s available PCIe bandwidth (8.0 GT/s PCIe x4 link)
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.1: MAC: 4, PHY: 0, PBA No: H86377-006
</span></span><span style="display:flex;"><span>tun: Universal TUN/TAP device driver, 1.6
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.1: Intel(R) 10 Gigabit Network Connection
</span></span><span style="display:flex;"><span>libphy: ixgbe-mdio: probed
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.0 enp3s0f0: renamed from eth0
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.1 enp3s0f1: renamed from eth1
</span></span><span style="display:flex;"><span>pps pps0: new PPS source ptp1
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.0: registered PHC device on enp3s0f0
</span></span><span style="display:flex;"><span>pps pps1: new PPS source ptp2
</span></span><span style="display:flex;"><span>ixgbe 0000:03:00.1: registered PHC device on enp3s0f1</span></span></code></pre></div>
<p>I think if you only use 1 of the card’s 2 network ports, you might not hit any
bottlenecks even when running the card only at <a href="https://en.wikipedia.org/wiki/PCI_Express#History_and_revisions">PCIe 3.0 ×2 link
speed</a>, but I
haven’t verified this!</p>
<p>Another way to verify the device is running at maximum speed on the computer’s
PCIe bus, is to ensure <code>LnkSta</code> matches <code>LnkCap</code> in the <a href="https://manpages.debian.org/lspci.8"><code>lspci(8)</code></a>
 output:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>% sudo lspci -vv
</span></span><span style="display:flex;"><span>[…]
</span></span><span style="display:flex;"><span>03:00.0 Ethernet controller: Intel Corporation Ethernet Controller 10G X550T (rev 01)
</span></span><span style="display:flex;"><span>        Subsystem: Intel Corporation Ethernet Converged Network Adapter X550-T2
</span></span><span style="display:flex;"><span>[…]
</span></span><span style="display:flex;"><span>        Capabilities: [a0] Express (v2) Endpoint, MSI 00
</span></span><span style="display:flex;"><span>[…]
</span></span><span style="display:flex; background-color:#d8d8d8"><span>                LnkCap: Port #0, Speed 8GT/s, Width x4, ASPM L0s L1, Exit Latency L0s &lt;2us, L1 &lt;16us
</span></span><span style="display:flex;"><span>                        ClockPM- Surprise- LLActRep- BwNot- ASPMOptComp+
</span></span><span style="display:flex;"><span>                LnkCtl: ASPM Disabled; RCB 64 bytes, Disabled- CommClk+
</span></span><span style="display:flex;"><span>                        ExtSynch- ClockPM- AutWidDis- BWInt- AutBWInt-
</span></span><span style="display:flex; background-color:#d8d8d8"><span>                LnkSta: Speed 8GT/s (ok), Width x4 (ok)
</span></span><span style="display:flex;"><span>                        TrErr- Train- SlotClk+ DLActive- BWMgmt- ABWMgmt-
</span></span><span style="display:flex;"><span>[…]</span></span></code></pre></div>
<p>You can verify your network link is running at 10 Gbit/s using <a href="https://manpages.debian.org/ethtool.8"><code>ethtool(8)</code></a>
:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>% sudo ethtool enp3s0f1 
</span></span><span style="display:flex;"><span>Settings for enp3s0f1:
</span></span><span style="display:flex;"><span>	Supported ports: [ TP ]
</span></span><span style="display:flex;"><span>	Supported link modes:   100baseT/Full
</span></span><span style="display:flex;"><span>	                        1000baseT/Full
</span></span><span style="display:flex; background-color:#d8d8d8"><span>	                        10000baseT/Full
</span></span><span style="display:flex;"><span>	                        2500baseT/Full
</span></span><span style="display:flex;"><span>	                        5000baseT/Full
</span></span><span style="display:flex;"><span>	Supported pause frame use: Symmetric
</span></span><span style="display:flex;"><span>	Supports auto-negotiation: Yes
</span></span><span style="display:flex;"><span>	Supported FEC modes: Not reported
</span></span><span style="display:flex;"><span>	Advertised link modes:  100baseT/Full
</span></span><span style="display:flex;"><span>	                        1000baseT/Full
</span></span><span style="display:flex;"><span>	                        10000baseT/Full
</span></span><span style="display:flex;"><span>	Advertised pause frame use: Symmetric
</span></span><span style="display:flex;"><span>	Advertised auto-negotiation: Yes
</span></span><span style="display:flex;"><span>	Advertised FEC modes: Not reported
</span></span><span style="display:flex; background-color:#d8d8d8"><span>	Speed: 10000Mb/s
</span></span><span style="display:flex;"><span>	Duplex: Full
</span></span><span style="display:flex;"><span>	Auto-negotiation: on
</span></span><span style="display:flex;"><span>	Port: Twisted Pair
</span></span><span style="display:flex;"><span>	PHYAD: 0
</span></span><span style="display:flex;"><span>	Transceiver: internal
</span></span><span style="display:flex;"><span>	MDI-X: Unknown
</span></span><span style="display:flex;"><span>	Supports Wake-on: d
</span></span><span style="display:flex;"><span>	Wake-on: d
</span></span><span style="display:flex;"><span>        Current message level: 0x00000007 (7)
</span></span><span style="display:flex;"><span>                               drv probe link
</span></span><span style="display:flex;"><span>	Link detected: yes</span></span></code></pre></div>
<h2 id="appendix-c-bios-update-for-mellanox-connectx-3">Appendix C: BIOS update for Mellanox ConnectX-3</h2>
<p>On my Supermicro X11SSZ-QF mainboard, the Mellanox ConnectX-3 would not
establish a link. The Mellanox Linux kernel driver logged a number of errors:</p>
<pre tabindex="0"><code>kernel: mlx4_en: enp1s0: CQE error - cqn 0x8e, ci 0x0, vendor syndrome: 0x57 syndrome: 0x4
kernel: mlx4_en: enp1s0: Related WQE - qpn 0x20d, wqe index 0x0, wqe size 0x40
kernel: mlx4_en: enp1s0: Scheduling port restart
kernel: mlx4_core 0000:01:00.0: Internal error detected:
kernel: mlx4_core 0000:01:00.0: device is going to be reset
kernel: mlx4_core 0000:01:00.0: crdump: devlink snapshot disabled, skipping
kernel: mlx4_core 0000:01:00.0: device was reset successfully
kernel: mlx4_en 0000:01:00.0: Internal error detected, restarting device
kernel: &lt;mlx4_ib&gt; mlx4_ib_handle_catas_error: mlx4_ib_handle_catas_error was started
kernel: &lt;mlx4_ib&gt; mlx4_ib_handle_catas_error: mlx4_ib_handle_catas_error ended
kernel: mlx4_core 0000:01:00.0: command 0x21 failed: fw status = 0x1
kernel: pcieport 0000:00:1c.0: AER: Uncorrected (Fatal) error received: 0000:00:1c.0
kernel: pcieport 0000:00:1c.0: PCIe Bus Error: severity=Uncorrected (Fatal), type=Transaction Layer, (Receiver ID)
kernel: mlx4_core 0000:01:00.0: command 0x43 failed: fw status = 0x1
kernel: infiniband mlx4_0: ib_query_port failed (-5)
kernel: pcieport 0000:00:1c.0:   device [8086:a110] error status/mask=00040000/00010000
kernel: pcieport 0000:00:1c.0:    [18] MalfTLP                (First)
kernel: pcieport 0000:00:1c.0: AER:   TLP Header: 4a000001 01000004 00000000 00000000
kernel: mlx4_core 0000:01:00.0: mlx4_pci_err_detected was called
kernel: mlx4_core 0000:01:00.0: Fail to set mac in port 1 during unregister
systemd-networkd[313]: enp1s0: Link DOWN
kernel: mlx4_en: enp1s0: Failed activating Rx CQ
kernel: mlx4_en: enp1s0: Failed restarting port 1
kernel: mlx4_en: enp1s0: Link Down
kernel: mlx4_en: enp1s0: Close port called
systemd-networkd[313]: enp1s0: Lost carrier
kernel: mlx4_en 0000:01:00.0: removed PHC
kernel: mlx4_core 0000:01:00.0: mlx4_restart_one_up: ERROR: mlx4_load_one failed, pci_name=0000:01:00.0, err=-5
kernel: mlx4_core 0000:01:00.0: mlx4_restart_one was ended, ret=-5
systemd-networkd[313]: enp1s0: DHCPv6 lease lost
kernel: pcieport 0000:00:1c.0: AER: Root Port link has been reset
kernel: mlx4_core 0000:01:00.0: mlx4_pci_resume was called
kernel: mlx4_core 0000:01:00.0: Multiple PFs not yet supported - Skipping PF
kernel: mlx4_core 0000:01:00.0: mlx4_pci_resume: mlx4_load_one failed, err=-22
kernel: pcieport 0000:00:1c.0: AER: device recovery successful
</code></pre><p>What helped was to update the X11SSZ-QF BIOS to the latest version.</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Measure and reduce keyboard input latency with QMK on the Kinesis Advantage]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/"/>
    <id>https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/</id>
    <published>2021-05-08T15:57:00+02:00</published>
    <content type="html"><![CDATA[<p>Over the last few years, I worked on a few projects around keyboard input latency:</p>
<p>In 2018, I introduced the <a href="/posts/2018-04-17-kinx/">kinX keyboard controller with 0.2ms of input
latency</a>.</p>
<p>In 2020, I introduced the <a href="/posts/2020-07-09-kint-kinesis-keyboard-controller/">kinT keyboard
controller</a>, which works
with a wide range of Teensy micro controllers, and both the old KB500 and the
newer KB600 Kinesis Advantage models.</p>
<p>While the 2018 kinX controller had built-in latency measurement, I was starting
from scratch with the kinT design, where I wanted to use the QMK keyboard
firmware instead of my own firmware.</p>
<p>That got me thinking: instead of adjusting the firmware to self-report latency
numbers, is there a way we can do latency measurements externally, ideally
without software changes?</p>
<p>This article walks you through how to set up a measurement environment for your
keyboard controller’s input latency, be it original or self-built. I’ll use a
Kinesis Advantage keyboard, but this approach should generalize to all
keyboards.</p>
<p>I will explain a few common causes for extra keyboard input latency and show you
how to fix them in the QMK keyboard firmware.</p>
<h2 id="measurement-setup">Measurement setup</h2>
<p>The idea is to connect a <a href="https://www.pjrc.com/store/teensy40.html">Teensy 4.0</a>
(or similar), which simulates pressing the Caps Lock key and measures the
duration until the keypress resulted in a Caps Lock LED change.</p>
<p>We use the Caps Lock key because it is one of the few keys that results in an
LED change.</p>
<p>Here you can see the Teensy 4.0 connected to the <a href="https://github.com/kinx-project/kint/">kinT
controller</a>, connected to a laptop:</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/endtoend_measure_featured.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/endtoend_measure_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1237431_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/endtoend_measure_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1237431_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/endtoend_measure_featured_hu855bbe0a9c47ac557e5b09db74fa3b06_1237431_600x0_resize_q75_box.jpg"
  alt="measurement setup" title="measurement setup"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="enable-the-debug-console-in-qmk">Enable the debug console in QMK</h3>
<p>Let’s get our QMK working copy ready for development! I like to work in a
separate QMK working copy per project:</p>
<pre tabindex="0"><code>% docker run -it -v $PWD:/usr/src archlinux
# pacman -Sy &amp;&amp; pacman -S qmk make which diffutils python-hidapi python-pyusb
# cd /usr/src
# qmk clone -b develop qmk/qmk_firmware $PWD/qmk-input-latency
# cd qmk-input-latency
</code></pre><p>I compile the firmware for my keyboard like so:</p>
<pre tabindex="0"><code># make kinesis/kint36:stapelberg
</code></pre><p>To enable the debug console, I need to edit my QMK keymap <code>stapelberg</code> by
updating <code>keyboards/kinesis/keymaps/stapelberg/rules.mk</code> to contain:</p>
<pre tabindex="0"><code>CONSOLE_ENABLE = yes
</code></pre><p>After compiling and flashing the firmware, the <code>hid_listen</code> tool will detect the
device and listen for QMK debug messages:</p>
<pre tabindex="0"><code>% sudo hid_listen
Waiting for device:...
Listening:
</code></pre><h3 id="finding-the-pins">Finding the pins</h3>
<p>Let’s locate the Caps Lock key’s corresponding row and column in our keyboard matrix!</p>
<p>We can make QMK show which keys are recognized after each scan by adding to
<code>keyboards/kinesis/keymaps/stapelberg/keymap.c</code> the following code:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#902000">void</span> <span style="color:#06287e">keyboard_post_init_user</span>() {
</span></span><span style="display:flex;"><span>  debug_config.enable <span style="color:#666">=</span> <span style="color:#007020">true</span>;
</span></span><span style="display:flex;"><span>  debug_config.matrix <span style="color:#666">=</span> <span style="color:#007020">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Now we’ll see in the <code>hid_listen</code> output which key is active when pressing Caps Lock:</p>
<pre tabindex="0"><code>r/c 01234567
00: 00100000
01: 00000000
[…]
</code></pre><p>For our kinT controller, Caps Lock is on QMK matrix row 0, column 2.</p>
<p>In the <a href="https://github.com/kinx-project/kint/blob/master/schematic-v2021-04-25.pdf">kinT
schematic</a>,
the corresponding signals are <code>ROW_EQL</code> and <code>COL_2</code>.</p>
<p>To hook up the Teensy 4.0 latency measurement driver, I am making the following
GPIO connections to the kint36, kint41 or kint2pp (with voltage converter!)
keyboard controllers:</p>
<table>
<thead>
<tr>
<th>driver 4.0</th>
<th>signal</th>
<th>kint36, kint41</th>
<th>kint2pp (5V!)</th>
</tr>
</thead>
<tbody>
<tr>
<td>GND</td>
<td><code>GND</code></td>
<td>GND</td>
<td>GND</td>
</tr>
<tr>
<td>pin 10</td>
<td><code>ROW_EQL</code></td>
<td>pin 8</td>
<td>D7</td>
</tr>
<tr>
<td>pin 11</td>
<td><code>COL_2</code></td>
<td>pin 15</td>
<td>F7</td>
</tr>
<tr>
<td>pin 12</td>
<td><code>LED_CAPS_LOCK</code></td>
<td>pin 12</td>
<td>C1</td>
</tr>
</tbody>
</table>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note:</strong> Unfortunately, the signals are not available on the Teensy 4.x dev kit
<a href="https://www.nxp.com/design/development-boards/i-mx-evaluation-and-development-boards/mimxrt1060-evk-i-mx-rt1060-evaluation-kit:MIMXRT1060-EVK">NXP i.MX RT1060 Evaluation Kit
(<code>MIMXRT1060-EVK</code>)</a>. Here,
pin 8 (<code>B1_00</code>) is used for the LVDI interface instead.</div>
  </div>
</aside>

<h3 id="eagercaps">Eager Caps Lock LED</h3>
<p>When the host signals to the keyboard that Caps Lock is now turned on, the QMK
firmware first updates a flag in the USB interrupt handler, but only updates the
Caps Lock LED pin after the next matrix scan has completed.</p>
<p>This is fine in normal usage, but our measurement readings will get more precise
if we immediately update the Caps Lock LED pin. We can do this in
<code>set_led_transfer_cb</code> in <code>tmk_core/protocol/chibios/usb_main.c</code>, which is called
from the USB interrupt handler:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#007020">#include</span> <span style="color:#007020">&#34;gpio.h&#34;</span><span style="color:#007020">
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">static</span> <span style="color:#902000">void</span> <span style="color:#06287e">set_led_transfer_cb</span>(USBDriver <span style="color:#666">*</span>usbp) {
</span></span><span style="display:flex;"><span>    <span style="color:#007020;font-weight:bold">if</span> (usbp<span style="color:#666">-&gt;</span>setup[<span style="color:#40a070">6</span>] <span style="color:#666">==</span> <span style="color:#40a070">2</span>) { <span style="color:#60a0b0;font-style:italic">/* LSB(wLength) */</span>
</span></span><span style="display:flex;"><span>        <span style="color:#902000">uint8_t</span> report_id <span style="color:#666">=</span> set_report_buf[<span style="color:#40a070">0</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#007020;font-weight:bold">if</span> ((report_id <span style="color:#666">==</span> REPORT_ID_KEYBOARD) <span style="color:#666">||</span> (report_id <span style="color:#666">==</span> REPORT_ID_NKRO)) {
</span></span><span style="display:flex;"><span>            keyboard_led_state <span style="color:#666">=</span> set_report_buf[<span style="color:#40a070">1</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#007020;font-weight:bold">else</span> {
</span></span><span style="display:flex;"><span>        keyboard_led_state <span style="color:#666">=</span> set_report_buf[<span style="color:#40a070">0</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex; background-color:#d8d8d8"><span>    <span style="color:#007020;font-weight:bold">if</span> ((keyboard_led_state <span style="color:#666">&amp;</span> <span style="color:#40a070">2</span>) <span style="color:#666">!=</span> <span style="color:#40a070">0</span>) {
</span></span><span style="display:flex; background-color:#d8d8d8"><span>      writePinLow(C7); <span style="color:#60a0b0;font-style:italic">// turn on CAPS_LOCK LED
</span></span></span><span style="display:flex; background-color:#d8d8d8"><span><span style="color:#60a0b0;font-style:italic"></span>    } <span style="color:#007020;font-weight:bold">else</span> {
</span></span><span style="display:flex; background-color:#d8d8d8"><span>      writePinHigh(C7); <span style="color:#60a0b0;font-style:italic">// turn off CAPS_LOCK LED
</span></span></span><span style="display:flex; background-color:#d8d8d8"><span><span style="color:#60a0b0;font-style:italic"></span>    }
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<h3 id="host-side-linux">Host side (Linux)</h3>
<p>On the USB host, i.e. the Linux computer, I switch to a <a href="https://en.wikipedia.org/wiki/Virtual_console">Virtual Terminal
(VT)</a> by stopping my login
manager (killing my current graphical session!):</p>
<pre tabindex="0"><code>% sudo systemctl stop gdm
</code></pre><p>With the Virtual Terminal active, we know that the Caps Lock key press will be
handled entirely in kernel driver code without having to round-trip to
userspace.</p>
<p>We can verify this by collecting stack traces with <a href="https://manpages.debian.org/bpftrace.8"><code>bpftrace(8)</code></a>
 when the kernel executes the <a href="https://elixir.bootlin.com/linux/v5.12/source/drivers/tty/vt/keyboard.c#L1521"><code>kbd_event</code> function in
<code>drivers/tty/vt</code></a>:</p>
<pre tabindex="0"><code>% sudo bpftrace -e &#39;kprobe:kbd_event { @[kstack] = count(); }&#39;
</code></pre><p>After pressing Caps Lock and cancelling the <code>bpftrace</code> process, you should see a
stack trace.</p>
<p>I then measured the baseline end-to-end latency, using <a href="https://github.com/kinx-project/measure-fw">my <code>measure-fw</code>
firmware</a> running on the FRDM-K66F
eval kit, a cheap and widely available USB 2.0 High Speed device. The firmware
measures the latency between a button press and the USB HID report for the Caps
Lock LED, but without any additional matrix scanning delay or similar:</p>
<pre tabindex="0"><code>% cat /dev/ttyACM0
sof=74 μs	report=393 μs
sof=42 μs	report=512 μs
sof=19 μs	report=512 μs
sof=39 μs	report=488 μs
sof=20 μs	report=518 μs
sof=90 μs	report=181 μs
sof=42 μs	report=389 μs
sof=7 μs	report=319 μs
</code></pre><p>This is the quickest reaction we can get out of this computer. Anything on top
(e.g. X11, application) will be slower, so this measurement establishes a lower
bound.</p>
<h3 id="code-to-simulate-key-presses-and-take-measurements">Code to simulate key presses and take measurements</h3>
<p>I’m running the <a href="https://github.com/kinx-project/latencydriver">latencydriver Arduino
sketch</a>, with the Arduino IDE
configured for:</p>
<p>Teensy 4.0 (USB Type: Serial, CPU Speed: 600 MHz, Optimize: Faster)</p>
<p>Here’s how we set up the pins in the measurement driver Teensy 4.0:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#902000">void</span> <span style="color:#06287e">setup</span>() {
</span></span><span style="display:flex;"><span>  Serial.begin(<span style="color:#40a070">9600</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#60a0b0;font-style:italic">// Connected to kinT pin 15, COL_2
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>  pinMode(<span style="color:#40a070">11</span>, OUTPUT);
</span></span><span style="display:flex;"><span>  digitalWrite(<span style="color:#40a070">11</span>, HIGH);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#60a0b0;font-style:italic">// Connected to kinT pin 8, ROW_EQL.
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>  <span style="color:#60a0b0;font-style:italic">// Pin 11 will be high/low in accordance with pin 10
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>  <span style="color:#60a0b0;font-style:italic">// to simulate a key-press, and always high (unpressed)
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>  <span style="color:#60a0b0;font-style:italic">// otherwise.
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>  pinMode(<span style="color:#40a070">10</span>, INPUT_PULLDOWN);
</span></span><span style="display:flex;"><span>  attachInterrupt(digitalPinToInterrupt(<span style="color:#40a070">10</span>), onScan, CHANGE);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#60a0b0;font-style:italic">// Connected to the kinT LED_CAPS_LOCK output:
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>  pinMode(<span style="color:#40a070">12</span>, INPUT_PULLDOWN);
</span></span><span style="display:flex;"><span>  attachInterrupt(digitalPinToInterrupt(<span style="color:#40a070">12</span>), onCapsLockLED, CHANGE);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>In order to make a key read as pressed, we need to connect the column with the
row in the keyboard matrix, but only when the column is scanned. We do that in
the interrupt handler like so:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#902000">bool</span> simulate_press <span style="color:#666">=</span> <span style="color:#007020">false</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#902000">void</span> <span style="color:#06287e">onScan</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">if</span> (simulate_press) {
</span></span><span style="display:flex;"><span>    <span style="color:#60a0b0;font-style:italic">// connect row scan signal with column read
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>    digitalWrite(<span style="color:#40a070">11</span>, digitalRead(<span style="color:#40a070">10</span>));
</span></span><span style="display:flex;"><span>  } <span style="color:#007020;font-weight:bold">else</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#60a0b0;font-style:italic">// always read not pressed otherwise
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>    digitalWrite(<span style="color:#40a070">11</span>, HIGH);
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>In our text interface, we can now start a measurement like so:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>caps_lock_on_to_off <span style="color:#666">=</span> capsLockOn();
</span></span><span style="display:flex;"><span>Serial.printf(<span style="color:#4070a0">&#34;# Caps Lock key pressed (transition: %s)</span><span style="color:#4070a0;font-weight:bold">\r\n</span><span style="color:#4070a0">&#34;</span>,
</span></span><span style="display:flex;"><span>  caps_lock_on_to_off <span style="color:#666">?</span> <span style="color:#4070a0">&#34;on to off&#34;</span> <span style="color:#666">:</span> <span style="color:#4070a0">&#34;off to on&#34;</span>);
</span></span><span style="display:flex;"><span>simulate_press <span style="color:#666">=</span> <span style="color:#007020">true</span>;
</span></span><span style="display:flex;"><span>t0 <span style="color:#666">=</span> ARM_DWT_CYCCNT;
</span></span><span style="display:flex;"><span>emt0 <span style="color:#666">=</span> <span style="color:#40a070">0</span>;
</span></span><span style="display:flex;"><span>eut0 <span style="color:#666">=</span> <span style="color:#40a070">0</span>;
</span></span></code></pre></div><p>The next keyboard matrix scan will detect the key as pressed, send the HID
report to the OS, and when the OS responds with its HID report containing the
Caps Lock LED status, our Caps Lock LED interrupt handler is called to finish
the measurement:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#902000">void</span> <span style="color:#06287e">onCapsLockLED</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">const</span> <span style="color:#902000">uint32_t</span> t1 <span style="color:#666">=</span> ARM_DWT_CYCCNT;
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">const</span> <span style="color:#902000">uint32_t</span> elapsed_millis <span style="color:#666">=</span> emt0;
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">const</span> <span style="color:#902000">uint32_t</span> elapsed_micros <span style="color:#666">=</span> eut0;
</span></span><span style="display:flex;"><span>  <span style="color:#902000">uint32_t</span> elapsed_nanos <span style="color:#666">=</span> (t1 <span style="color:#666">-</span> t0) <span style="color:#666">/</span> cycles_per_ns;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  Serial.printf(<span style="color:#4070a0">&#34;# Caps Lock LED (pin 12) is now %s</span><span style="color:#4070a0;font-weight:bold">\r\n</span><span style="color:#4070a0">&#34;</span>, capsLockOn() <span style="color:#666">?</span> <span style="color:#4070a0">&#34;on&#34;</span> <span style="color:#666">:</span> <span style="color:#4070a0">&#34;off&#34;</span>);
</span></span><span style="display:flex;"><span>  Serial.printf(<span style="color:#4070a0">&#34;# %u ms == %u us</span><span style="color:#4070a0;font-weight:bold">\r\n</span><span style="color:#4070a0">&#34;</span>, elapsed_millis, elapsed_micros);
</span></span><span style="display:flex;"><span>  Serial.printf(<span style="color:#4070a0">&#34;BenchmarkKeypressToLEDReport 1 %u ns/op</span><span style="color:#4070a0;font-weight:bold">\r\n</span><span style="color:#4070a0">&#34;</span>, elapsed_nanos);
</span></span><span style="display:flex;"><span>  Serial.printf(<span style="color:#4070a0">&#34;</span><span style="color:#4070a0;font-weight:bold">\r\n</span><span style="color:#4070a0">&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="running-measurements">Running measurements</h3>
<p>Connect the Teensy 4.0 to your computer and open its USB serial console:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% screen /dev/ttyACM0 <span style="color:#40a070">115200</span>
</span></span></code></pre></div><p>You should be greeted by a welcome message:</p>
<pre tabindex="0"><code># kinT latency measurement driver
#   t  - trigger measurement
</code></pre><p>To save your measurements to file, use <code>C-a H</code> in <code>screen</code> to make it write to
file <code>screenlog.0</code>.</p>
<p>Press <code>t</code> a few times to trigger a few measurements and close <code>screen</code> using
<code>C-a k</code>.</p>
<p>You can summarize the measurements using
<a href="https://pkg.go.dev/golang.org/x/perf/cmd/benchstat"><code>benchstat</code></a>:</p>
<pre tabindex="0"><code>% benchstat screenlog.0
name                 time/op
KeypressToLEDReport  1.82ms ±20%
</code></pre><h3 id="scantoscandelay">Scan-to-scan delay</h3>
<p>The measurement output on the USB serial console also contains the matrix
scan-to-scan delay:</p>
<pre tabindex="0"><code># scan-to-scan delay: 422475 ns
</code></pre><p>Each keyboard matrix scan turns on each row one-by-one, then reads all the columns.</p>
<p>This means that in each matrix scan, <code>ROW_EQL</code> will be set high once, then low again.</p>
<p>The Teensy 4.0 measures scan-to-scan delay by timing the activations of
<code>ROW_EQL</code>.</p>
<p>We can verify this approach by making QMK self-report its scan rate. Enable the
matrix scan rate debug option in <code>keyboards/kinesis/keymaps/stapelberg/config.h</code>
like so:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#007020">#pragma once
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span>
</span></span><span style="display:flex;"><span><span style="color:#007020">#define DEBUG_MATRIX_SCAN_RATE
</span></span></span></code></pre></div><p>Using <code>hid_listen</code> we can now see the following QMK debug messages:</p>
<pre tabindex="0"><code>% sudo hid_listen
Waiting for new device:..
Listening:
matrix scan frequency: 2300
matrix scan frequency: 2367
matrix scan frequency: 2367
</code></pre><p>A matrix scan rate/frequency of 2367 scans per second corresponds to 422μs per
scan:</p>
<pre tabindex="0"><code>1000000 μs / 2367 scans/second = 422μs
</code></pre><p>Yet another way of verifying the approach is by short-circuiting an end-to-end
measurement with a one-line change in our QMK keyboard code:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#902000">bool</span> <span style="color:#06287e">process_action_kb</span>(keyrecord_t <span style="color:#666">*</span>record) {
</span></span><span style="display:flex;"><span><span style="color:#007020">#define LED_CAPS_LOCK LINE_PIN12
</span></span></span><span style="display:flex;"><span><span style="color:#007020">#define ledTurnOn writePinLow
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span>  ledTurnOn(LED_CAPS_LOCK);
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">return</span> <span style="color:#007020">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Repeating the measurements, this gives us:</p>
<pre tabindex="0"><code>% benchstat screenlog.0     
name                 time/op
KeypressToLEDReport  693µs ±26%
</code></pre><p>This value is between [0, 2 * 422μs] because a key might be pressed
after it was already scanned by the in-progress matrix scan, meaning it will
need to wait until the next scan completed (!) before it can be registered as
pressed.</p>
<h2 id="measurement-harness">Measurement harness</h2>
<p>Now that we have our general measurement environment all set up, it’s time to
connect our Teensy 4.0 to a few different keyboard controllers!</p>
<h3 id="kint36-kint41-gpio">kint36, kint41: GPIO</h3>
<p>If you have an un-soldered micro controller you want to measure, setup is easy:
just connect all GPIOs to the Teensy 4.0 latency test driver directly! I’m using
this for the <code>kint36</code> and <code>kint41</code>:</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kint41_gpio_measure.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kint41_gpio_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_607037_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kint41_gpio_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_607037_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kint41_gpio_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_607037_600x0_resize_q75_box.jpg"
  alt="GPIO measurement" title="GPIO measurement"
  width="600"
  height="329"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>(build in <code>/home/michael/kinx/kintpp/rebased</code>, last results in <code>screenlog-kint36-eager-caps.0</code>)</p>
<h3 id="kint2pp-5v">kint2pp: 5V</h3>
<p>Because the Teensy++ uses 5V logic levels, we need to convert the levels from/to
3.3V. This is easily done using e.g. the <a href="https://www.sparkfun.com/products/12009">SparkFun Logic Level Converter
(Bi-Directional)</a> on a breadboard:</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kint2pp_levelshifter.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kint2pp_levelshifter_hua983c5221b9326c29ab4450c04cd6d00_1691385_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kint2pp_levelshifter_hua983c5221b9326c29ab4450c04cd6d00_1691385_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kint2pp_levelshifter_hua983c5221b9326c29ab4450c04cd6d00_1691385_600x0_resize_q75_box.jpg"
  alt="kint2pp with level shifter" title="kint2pp with level shifter"
  width="600"
  height="800"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h3 id="kinx-fpc">kinX: FPC</h3>
<p>But what if you have a design where the micro controller doesn’t come
standalone, only soldered to a keyboard controller board, such as my earlier
kinX controller?</p>
<p>You can use a spare FPC connector (<a href="https://octopart.com/39-53-2135-molex-7670149?r=sp">Molex
39-53-2135</a>) and solder
jumper wires to the pins for <code>COL_2</code> and <code>ROW_EQL</code>. For Caps Lock and Ground,
I soldered jumper wires to the board:</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kinx_fpc_measure.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kinx_fpc_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_1315352_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kinx_fpc_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_1315352_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kinx_fpc_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_1315352_600x0_resize_q75_box.jpg"
  alt="kinX measurement" title="kinX measurement"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Note:</strong> The
<a href="https://github.com/kinx-project/adapter-use-kb600-with-kb500-controller">adapter-use-kb600-with-kb500-controller</a>
unfortunately cannot be used for this purpose: the required pins are connected
to the ground plane.</div>
  </div>
</aside>

<h3 id="original-kinesis-controller">Original Kinesis controller</h3>
<p>But what if you don’t want to solder jumper wires directly to the board?</p>
<p>The least invasive method is to connect the FPC connector break-out, and hold
probe heads onto the contacts while doing your measurements:</p>















<a href="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kinesis_original_measure.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kinesis_original_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_944081_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kinesis_original_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_944081_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-05-08-keyboard-input-latency-qmk-kinesis/kinesis_original_measure_hu855bbe0a9c47ac557e5b09db74fa3b06_944081_600x0_resize_q75_box.jpg"
  alt="kinesis original controller measurement" title="kinesis original controller measurement"
  width="600"
  height="450"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<h2 id="qmk-input-latency">QMK input latency</h2>
<p>Now that the measurement hardware is set up, we can go through the code.</p>
<p>The following sections each cover one possible contributor to input latency.</p>
<h3 id="eagerdebounce">Eager debounce</h3>
<p>Key switches don’t generate a clean signal when pressed, instead they show a
ripple effect. Getting rid of this ripple is called
<a href="https://en.wiktionary.org/wiki/debounce">debouncing</a>, and every keyboard
firmware does it.</p>
<p>See <a href="https://beta.docs.qmk.fm/using-qmk/software-features/feature_debounce_type">QMK’s documentation on the Debounce
API</a>
for a good explanation of the differences between the different debounce approaches.</p>
<p>QMK’s default debounce algorithm <code>sym_defer_g</code> is chosen very cautiously. I
don’t know what the criteria are specifically for which types of key switches
suffer from noise and therefore need the <code>sym_defer_g</code> algorithm, but I know
that Cherry MX key switches with diodes like used in the Kinesis Advantage don’t
have noise and hence can use the other debounce algorithms, too.</p>
<p>While the default <code>sym_defer_g</code> debounce algorithm is robust, it also adds 5ms
of input latency:</p>
<pre tabindex="0"><code>% benchstat screenlog-kint36.0
name                 time/op
KeypressToLEDReport  7.61ms ± 8%
</code></pre><p>For lower input latency, we need an <code>eager</code> algorithm. Specifically, I am
chosing the <code>sym_eager_pk</code> debounce algorithm by adding to my
<code>keyboards/kinesis/kint36/rules.mk</code>:</p>
<pre tabindex="0"><code>DEBOUNCE_TYPE = sym_eager_pk
</code></pre><p>Now, the extra 5ms are gone:</p>
<pre tabindex="0"><code>% benchstat screenlog-kint36-eager.0
name                 time/op
KeypressToLEDReport  2.12ms ±16%
</code></pre><p>Example change: <a href="https://github.com/qmk/qmk_firmware/pull/12626">https://github.com/qmk/qmk_firmware/pull/12626</a></p>
<h3 id="quickusbpolling">Quicker USB polling interval</h3>
<p>The USB host (computer) divides time into fixed-length segments called frames:</p>
<ul>
<li>USB Full Speed (USB 1.0) uses frames that are 1ms each.</li>
<li>USB High Speed (USB 2.0) introduces micro frames, which are 125μs.</li>
</ul>
<p>Each USB device specifies in its device descriptor how frequently (in frames)
the device should be polled. The <a href="https://en.wikipedia.org/wiki/USB_(Communications)#Transaction_latency">quickest polling
rate</a>
for USB 1.0 is 1 frame, meaning the device can send data after at most
1ms. Similarly, for USB 2.0, it’s 1 micro frame, i.e. send data every 125μs.</p>
<p>Of course, a quicker polling rate also means occupying resources on the USB bus
which are then no longer available to other devices. On larger USB hubs, this
might mean fewer devices can be used concurrently. The specifics of this
limitation depend on a lot of other factors, too. The polling rate plays a role,
in combination with the max. packet size and the number of endpoints.</p>
<p>Note that we are only talking about concurrent device usage, not about hogging
bandwidth: the bulk transfers that USB mass storage devices use are not any
slower in my tests. I achieve about 37 MiB/s with or without the kint41 USB 2.0
High Speed controller with <code>bInterval=1</code> present.</p>
<p>Even connecting two kint41 controllers at the same time still leaves enough
resources to use a Logitech C920 webcam in its most bandwidth-intensive pixel
format and resolution. The same cannot be said for e.g. NXP’s LPC-Link2 debug
probe.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Open question:</strong> Would declaring multiple alternate settings in our USB device
descriptor dynamically reduce resource usage? Our keyboard could offer one
alternate setting with <code>bInterval=1</code> and one with <code>bInterval=10</code>.</div>
  </div>
</aside>

<p>To display the configured interval, the Linux kernel provides a debug pseudo file:</p>
<pre tabindex="0"><code>% sudo cat /sys/kernel/debug/usb/devices

[…]
T:  Bus=01 Lev=02 Prnt=09 Port=02 Cnt=02 Dev#= 53 Spd=480  MxCh= 0
D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=1209 ProdID=345c Rev= 0.01
S:  Manufacturer=&#34;https://github.com/stapelberg&#34;
S:  Product=&#34;kinT (kint41)&#34;
C:* #Ifs= 3 Cfg#= 1 Atr=a0 MxPwr=500mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=125us
I:* If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
E:  Ad=82(I) Atr=03(Int.) MxPS=  32 Ivl=125us
I:* If#= 2 Alt= 0 #EPs= 2 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
E:  Ad=83(I) Atr=03(Int.) MxPS=  32 Ivl=125us
E:  Ad=04(O) Atr=03(Int.) MxPS=  32 Ivl=125us
[…]
</code></pre><p>Alternatively, you can display the USB device descriptor using e.g. <code>sudo lsusb -v -d 1209:345c</code> and interpret the <code>bInterval</code> setting yourself.</p>
<p>The above shows the best case: a USB 2.0 High Speed device (<code>Spd=480</code>) with
<code>bInterval=1</code> in its device descriptor (<code>Iv=125us</code>).</p>
<p>The original Kinesis Advantage 2 keyboard controller (KB600) uses USB 2.0, but
in Full Speed mode (<code>Spd=12</code>), i.e. no faster than USB 1.1. In addition, they
specify <code>bInterval=10</code>, which results in a 10ms polling interval (<code>Ivl=10ms</code>):</p>
<pre tabindex="0"><code>T:  Bus=01 Lev=02 Prnt=09 Port=02 Cnt=02 Dev#= 52 Spd=12   MxCh= 0
D:  Ver= 2.00 Cls=00(&gt;ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=29ea ProdID=0102 Rev= 1.00
S:  Manufacturer=Kinesis
S:  Product=Advantage2 Keyboard
C:* #Ifs= 3 Cfg#= 1 Atr=a0 MxPwr=100mA
I:* If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbhid
E:  Ad=83(I) Atr=03(Int.) MxPS=   8 Ivl=10ms
I:* If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=01 Driver=usbhid
E:  Ad=84(I) Atr=03(Int.) MxPS=   8 Ivl=2ms
I:* If#= 2 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
E:  Ad=85(I) Atr=03(Int.) MxPS=   8 Ivl=2ms
</code></pre><p>My recommendation:</p>
<ul>
<li>With USB 1.1 Full Speed, definitely specify <code>bInterval=1</code>. I’m not aware of
any downsides.</li>
<li>With USB 2.0 High Speed, I also think <code>bInterval=1</code> is a good choice, but I am
less certain. If you run into trouble, reduce to <code>bInterval=3</code> and send me a
message :)</li>
</ul>
<p>For details on measuring, see <a href="#appendixb">Appendix B: USB polling interval (device
side)</a>.</p>
<p>Example change: <a href="https://github.com/qmk/qmk_firmware/pull/12625">https://github.com/qmk/qmk_firmware/pull/12625</a></p>
<h3 id="fastmatrixscan">Faster matrix scan</h3>
<p>The purpose of a keyboard controller is reporting pressed keys after scanning
the key matrix. The more scans a keyboard controller can do per second, the
faster it can react to your key press.</p>
<p>How many scans your controller does depends on multiple factors:</p>
<ul>
<li>
<p>The clock speed of your micro controller. It’s worth checking if your micro
controller model supports running at faster clock speeds, or upgrading your
keyboard to a faster model to begin with. There is a point of diminishing
returns, which I would guess is at ≈100 MHz. Comparing e.g. the kint36 at 120
MHz vs. 180 MHz, the difference in scan-to-scan is 5μs.</p>
</li>
<li>
<p>How much other code your firmware runs aside from matrix scanning. If you
enable any non-standard QMK features, or even self-written code, it’s worth
disabling and measuring.</p>
</li>
<li>
<p>Whether you run scans back-to-back or e.g. synchronized with USB
start-of-frame interrupts. QMK runs scans back-to-back, so this point is only
relevant for other firmwares.</p>
</li>
<li>
<p>How long you need to sleep to let the signal settle. Reducing your sleep times
results in more scans per second, but if you don’t sleep long enough, you’ll
see ghost key presses. See also the next section about Shorter sleeps.</p>
</li>
</ul>
<p>For details on measuring, see the <a href="#scantoscandelay">Scan-to-scan delay section</a>
above.</p>
<p>I also tried configuring the GPIOs to be faster to see if that would reduce the
required unselect delay, but unfortunately there was no difference between the
default setting and the fastest setting: drive strength 6 (<code>DSE=6</code>), fast
slew rate (<code>SRE=1</code>), 200 MHz (<code>SPEED=3</code>).</p>
<h3 id="shortsleeps">Shorter sleeps</h3>
<p>QMK calls <a href="https://www.chibios.org/dokuwiki/doku.php?id=chibios:documentation:books:rt:kernel_threading#delays_api">ChibiOS’s <code>chThdSleepMicroseconds</code>
function</a>
in its matrix scanning code. This function unfortunately has a rather long
shortest sleep duration of 1 ChibiOS tick: if you tell it to sleep less than
100μs, it will still sleep at least 100μs!</p>
<p>This is a problem on controllers such as the kint41, where we want to sleep for
only 10μs.</p>
<p>The length of a ChibiOS tick is determined by how the ARM SysTick timer is set
up on the specific micro controller you’re using. While the SysTick timer itself
could be configured to fire more frequently, it is not advisable to shorten
ChibiOS ticks: <code>chSysTimerHandlerI()</code> <a href="http://forum.chibios.org/viewtopic.php?t=3712#p27851">must be executable in less than one
tick</a>.</p>
<p>Instead, I found it easier to implement short delays by busy-looping until the
ARM Cycle Counter Register (<code>CYCCNT</code>) indicates enough time has passed. Here’s
an example from <code>keyboards/kinesis/kint41/kint41.c</code>:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic">// delay_inline sleeps for |cycles| (e.g. sleeping for F_CPU will sleep 1s).
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic">//
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic">// delay_inline assumes the cycle counter has already been initialized and
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic">// should not be modified, i.e. is safe to call during keyboard matrix scan.
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic">//
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic">// ChibiOS enables the cycle counter in chcore_v7m.c.
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span><span style="color:#007020;font-weight:bold">static</span> <span style="color:#902000">void</span> <span style="color:#06287e">delay_inline</span>(<span style="color:#007020;font-weight:bold">const</span> <span style="color:#902000">uint32_t</span> cycles) {
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">const</span> <span style="color:#902000">uint32_t</span> start <span style="color:#666">=</span> DWT<span style="color:#666">-&gt;</span>CYCCNT;
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">while</span> ((DWT<span style="color:#666">-&gt;</span>CYCCNT <span style="color:#666">-</span> start) <span style="color:#666">&lt;</span> cycles) {
</span></span><span style="display:flex;"><span>    <span style="color:#60a0b0;font-style:italic">// busy-loop until time has passed
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>  }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#902000">void</span> <span style="color:#06287e">matrix_output_unselect_delay</span>(<span style="color:#902000">void</span>) {
</span></span><span style="display:flex;"><span>  <span style="color:#60a0b0;font-style:italic">// 600 cycles at 0.6 cycles/ns == 1μs
</span></span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic"></span>  <span style="color:#007020;font-weight:bold">const</span> <span style="color:#902000">uint32_t</span> cycles_per_us <span style="color:#666">=</span> <span style="color:#40a070">600</span>;
</span></span><span style="display:flex;"><span>  delay_inline(<span style="color:#40a070">10</span> <span style="color:#666">*</span> cycles_per_us);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Of course, the cycles/ns value is specific to the frequency at which your micro
controller runs, so this code needs to be adjusted for each platform.</p>
<h2 id="results">Results</h2>
<p>With the QMK keyboard firmware configured for lowest input latency, how do the
different Kinesis keyboard controller compare? Here are my measurements:</p>
<table>
<thead>
<tr>
<th>model</th>
<th>CPU speed</th>
<th>USB poll interval</th>
<th>scan-to-scan</th>
<th>scan rate</th>
<th>caps-to-report</th>
</tr>
</thead>
<tbody>
<tr>
<td>kint41</td>
<td>600 MHz</td>
<td>125μs</td>
<td>181μs</td>
<td>5456 scans/s</td>
<td>930µs ±17%</td>
</tr>
<tr>
<td>kinX</td>
<td>120 MHz</td>
<td>125μs</td>
<td>213μs</td>
<td>4694 scans/s</td>
<td>953µs ±15%</td>
</tr>
<tr>
<td>kint36</td>
<td>180 MHz</td>
<td>1000μs</td>
<td>444μs</td>
<td>2252 scans/s</td>
<td>1.97ms ±15%</td>
</tr>
<tr>
<td>kint2pp</td>
<td>16 MHz</td>
<td>1000μs</td>
<td>926μs</td>
<td>1078 scans/s</td>
<td>3.27ms ±32%</td>
</tr>
<tr>
<td>original</td>
<td>60 MHz</td>
<td>10000μs</td>
<td>1936μs</td>
<td>516 scans/s</td>
<td>13.6ms ±21%</td>
</tr>
</tbody>
</table>
<p>The changes required to obtain these results are included since QMK 0.12.38
(2021-04-20).</p>
<p><a href="https://github.com/kinx-project/kint/issues/5">kint41 support is being added</a>
with all required changes to begin with, but still in progress.</p>
<p>The following sections go into detail about the results.</p>
<h3 id="kint41">kint41</h3>
<p>I am glad that the most recent Teensy 4.1 micro controller takes the lead! The
kinX controller achieved similar numbers, but was quite difficult to build, so
few people ended up using it.</p>
<p>The key improvement compared to the Teensy 3.6 is the now-available USB 2.0 High
Speed, and the powerful clock speed of 600 MHz allows for an even faster matrix
scan rate.</p>
<h3 id="kinx">kinX</h3>
<p>In my <a href="/posts/2018-04-17-kinx-keyboard-controller/">previous article about the kinX
controller</a>, I measured the kinX
scan delay as ≈100μs. During my work on this article, I learnt that the ≈100μs
figure was misleading: the measurement code turned off interrupts to measure
only the scan function. While that is technically correct, it is not a useful
measure, as in practice, <a href="https://github.com/kinx-project/mk66f-fw/commit/cae21f3d13331061bcd8c9d411adbb0d7d8c0ae4">interrupts should not be
disabled</a>,
and the scanning function is interrupted frequently enough that it comes in at
≈208μs.</p>
<p>I also fixed the USB polling interval in the kinX firmware, which <a href="https://github.com/kinx-project/mk66f-fw/commit/b40ae0287ed3b042886e29621dbeecefba1c148b">wasn’t set to
<code>bInterval=1</code></a>.</p>
<h3 id="original-kinesis">Original Kinesis</h3>
<p>The original keyboard controller that the Kinesis Advantage 2 (KB600) keyboard
comes with uses <a href="https://www.microchip.com/wwwproducts/en/AT32UC3B0256#datasheet-toggle">an AT32UC3B0256 micro
controller</a>
which is clocked at 60 MHz, but the measured input latency is much higher than
even the slowest kint controller (kint2pp at 16 MHz). What gives?</p>
<p>Here’s what we can deduce without access to their firmware:</p>
<ol>
<li>They seem to be using an <a href="#eagerdebounce">eager debounce algorithm</a> (good!),
otherwise we would observe even higher latency.</li>
<li>Their <a href="#quickusbpolling">USB polling interval</a> setting (<code>bInterval=10</code>) is
excessively high, even more so because they are using USB Full Speed with
longer USB frames. I would recommend they change it to <code>bInterval=1</code> for up
to 10ms less input latency!</li>
<li>The matrix scan rate is twice as slow as with my kint2pp. I can’t say for
sure why this is. Perhaps their firmware does a lot of other things between
matrix scans.</li>
</ol>
<p>Note that we could not apply the <a href="#eagercaps">Eager Caps Lock LED</a> firmware
change to the original controller, which is why the measurement variance is
±21%. This variance includes ± 1.9ms for finishing a matrix scan before updating
the LED state.</p>
<h2 id="conclusion">Conclusion</h2>
<p>After analyzing the different controllers in my measurement environment, I think
the following factors play the largest role in keyboard input latency, ordered
by importance:</p>
<ol>
<li>Does the firmware use an <a href="#eagerdebounce">eager debounce algorithm</a>?</li>
<li>Does the device specify a <a href="#quickusbpolling">quick USB polling rate (<code>bInterval</code>
setting)</a>?</li>
<li>Is the matrix scan frequency in the expected range, or are there unexpected
slow-downs?</li>
</ol>
<p>Hopefully, this article gives you all the tools you need to measure and reduce
keyboard input latency of your own keyboard controller!</p>
<h2 id="appendix-a-isitsnappy">Appendix A: isitsnappy</h2>
<p>The iPhone app <a href="https://isitsnappy.com/">Is It Snappy?</a> records video using the
iPhone’s 240 fps camera and allows you to mark the frame that starts
respectively ends the measurement.</p>
<p>The app does a good job of making this otherwise tedious process of navigating a
video frame by frame much more pleasant.</p>
<p>However, for measuring keyboard input latency, I think this approach is futile:</p>
<ul>
<li>The resolution is too imprecise. At 240 fps, that means each frame represents
4.6ms of time, which is already higher than the input latency of our slowest
micro controller.</li>
<li>Visually deciding whether a key switch is pressed or not pressed, at
frame-perfect precision, seems impossible to me.</li>
</ul>
<p>I believe the app can work, provided the latency you want to measure is really
high. But with the devices covered in this article, the app couldn’t measure
even 10ms of injected input latency.</p>
<h2 id="appendixb">Appendix B: USB polling interval (device side)</h2>
<p>You can also verify the USB polling interval on the device side. In the SOF
(Start Of Frame) interrupt in <code>tmk_core/protocol/chibios/usb_main.c</code>, we can
print the cycle delta to the previous SOF callback, every second:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#007020">#include</span> <span style="color:#007020">&#34;timer.h&#34;</span><span style="color:#007020">
</span></span></span><span style="display:flex;"><span><span style="color:#007020"></span>
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">static</span> <span style="color:#902000">uint32_t</span> last_sof <span style="color:#666">=</span> <span style="color:#40a070">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">static</span> <span style="color:#902000">uint32_t</span> sof_timer <span style="color:#666">=</span> <span style="color:#40a070">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#902000">void</span> <span style="color:#06287e">kbd_sof_cb</span>(USBDriver <span style="color:#666">*</span>usbp) {
</span></span><span style="display:flex;"><span>  (<span style="color:#902000">void</span>)usbp;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#902000">uint32_t</span> now <span style="color:#666">=</span> DWT<span style="color:#666">-&gt;</span>CYCCNT;
</span></span><span style="display:flex;"><span>  <span style="color:#902000">uint32_t</span> delta <span style="color:#666">=</span> now <span style="color:#666">-</span> last_sof;
</span></span><span style="display:flex;"><span>  last_sof <span style="color:#666">=</span> now;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#902000">uint32_t</span> timer_now <span style="color:#666">=</span> timer_read32();
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">if</span> (TIMER_DIFF_32(timer_now, sof_timer) <span style="color:#666">&gt;</span> <span style="color:#40a070">1000</span>) {
</span></span><span style="display:flex;"><span>    sof_timer <span style="color:#666">=</span> timer_now;
</span></span><span style="display:flex;"><span>    dprintf(<span style="color:#4070a0">&#34;sof delta: %u cycles&#34;</span>, delta);
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Using <code>hid_listen</code>, we expect to see ≈75000 cycles of delta, which
corresponds to the 125μs microframe latency of USB 2.0 High Speed with
<code>bInterval=1</code> in the USB device descriptor:</p>
<p>125μs * 1000 * 0.6 cycles/ns = 75000 cycles</p>
]]></content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Linux and USB virtual serial devices (CDC ACM)]]></title>
    <link href="https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/"/>
    <id>https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/</id>
    <published>2021-04-27T08:18:00+02:00</published>
    <content type="html"><![CDATA[<p>During my work on <a href="https://www.pjrc.com/store/teensy41.html">Teensy 4.1</a> support
in <a href="https://en.wikipedia.org/wiki/ChibiOS/RT">ChibiOS</a> for the QMK keyboard
firmware, I noticed that ChibiOS’s virtual serial device USB demo would
sometimes print garbled output, and that I would never see the ChibiOS shell
prompt.</p>
<p>This article walks you through diagnosing and working around this issue, in the
hope that it helps others who are working with micro controllers and USB virtual
serial devices.</p>
<h2 id="background">Background</h2>
<p>Serial interfaces are often the easiest option when working with micro
controllers to print text: you only connect <code>GND</code> and the micro controller’s
serial <code>TX</code> pin to a USB-to-serial converter. The <code>RX</code> pin is only needed when
you want to send text to the micro controller as well.</p>
<p>While conceptually simple, the requirement for an extra piece of hardware
(USB-to-serial adapter) is annoying. If your micro controller has a working USB
interface and USB stack, a popular alternative is for the micro controller to
provide a virtual serial device via USB.</p>
<p>This way, you just need one USB cable between your micro controller and
computer, reusing the same connection you already use for programming the
device.</p>
<p>A popular choice within this solution is to provide a device conforming to the
USB Communications Device Class (CDC) standard, specifically its Abstract
Control Model (ACM), which is typically used for modem hardware.</p>
<p>On Linux, these devices show up as e.g. <code>/dev/ttyACM0</code>. In case you’re
wondering: <code>/dev/ttyUSB0</code> device names are used by more specific drivers
(vendor-specific). The blog post <a href="https://rfc1149.net/blog/2013/03/05/what-is-the-difference-between-devttyusbx-and-devttyacmx/">What is the difference between /dev/ttyUSB and
/dev/ttyACM?</a>
goes into a lot more detail.</p>
<h2 id="modemmanager">ModemManager</h2>
<p>One unfortunate side-effect of using a modem standard to provide a generic
serial device is that modem-related software might mistake our micro controller
for a modem.</p>
<p>Use the following command to disable ModemManager until the next reboot, which
otherwise might open and probe any new serial devices:</p>
<pre tabindex="0"><code>% sudo systemctl mask --runtime --now ModemManager
</code></pre><h2 id="problem-statement">Problem statement</h2>
<p>With a regular, non-USB serial interface, you can send data at any time. If
nobody is receiving the data on the other end, the micro controller doesn’t care
and still writes serial data.</p>
<p>When using the ChibiOS shell with a regular serial interface, this means that if
you open the serial interface too late, you will not see the ChibiOS shell
prompt. But, if you have the serial interface already opened when powering on
your device, you will be greeted by ChibiOS’s shell prompt:</p>
<pre tabindex="0"><code>ChibiOS/RT Shell
ch&gt; 
</code></pre><p>With a USB serial, however, the host will not transfer data from the device
until the serial interface is opened. This means that writes to the USB serial
can block, whereas writes to the UART serial will not block but may go ignored
if nobody is listening.</p>
<p>So when I open the USB serial interface, I would expect to see the ChibiOS shell
prompt like above. Instead, I would often not see any prompt at all, and I would
even sometimes see garbled output like this:</p>
<pre tabindex="0"><code>cch&gt; biOS/RT She
</code></pre><h2 id="usb-analysis-with-wireshark">USB analysis with Wireshark</h2>
<p><a href="https://en.wikipedia.org/wiki/Wireshark">Wireshark</a> allows us to analyze USB
traffic in combination with the <code>usbmon</code> Linux kernel module.</p>
<p>Looking through the captured packets, I noticed unexpected packets from the host
(computer) to the device (micro controller), specifically containing the
following bytes:</p>
<ol>
<li>hex <code>0xa</code> = ASCII <code>\n</code></li>
<li>hex <code>0xd</code> = ASCII <code>\r</code></li>
</ol>
<p>Seeing any packets in this direction is unexpected, because I am only opening
the serial interface <strong>for reading</strong>, and I am not consciously sending
anything. So where do the packets come from?</p>
<p>To verify I am not missing any nuance of the CDC protocol, I added debug
statements to the ChibiOS shell to log any incoming data. The <code>\n\r</code> bytes
indeed make it to the ChibiOS shell.</p>
<p>When the shell receives a line break, it prints a new prompt. This seems to be
the reason why I’m seeing garbled data: while the output is transferred to the
host, line breaks are received, causing more data transfers. It’s as if somebody
was hammering the return key really quickly.</p>
<h2 id="linux-tty-echo-vs-chibios-shell-banner">Linux tty echo vs. ChibiOS shell banner</h2>
<p>The unexpected <code>\n\r</code> bytes turn out to come from the Linux USB CDC ACM driver,
or its interplay with the Linux tty driver, to be specific. The CDC ACM driver
is a kind of tty driver, so it is built atop the Linux tty infrastructure, whose
<a href="https://elixir.bootlin.com/linux/v5.11.16/source/drivers/tty/tty_io.c#L122">standard settings include various <code>ECHO</code>
flags</a>.</p>
<p>When echoing is enabled, the ChibiOS shell banner triggers echo characters,
which in turn are interpreted as input to the shell, causing garbled output.</p>
<p>So why is echoing enabled? Wouldn’t a terminal emulator turn off echoing first
thing?</p>
<p>Yes. But, when the CDC ACM driver receives the first data transfer via USB
(already queued), the standard tty settings are still in effect, because the
application did not yet have a chance to set its tty configuration up!</p>
<p>This can be verified by running the following command on a Linux host:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% stty -F /dev/ttyACM0 <span style="color:#40a070">115200</span> -echo -echoe -echok
</span></span></code></pre></div><p>Even though the command’s sole purpose is to configure the tty, its opening of
the device still causes the banner to print, and echoing to happen, and garbled
output is the result.</p>
<p>It turns out this is a somewhat common problem. Hence, the Linux USB CDC ACM
driver <a href="https://elixir.bootlin.com/linux/v5.11.16/source/drivers/usb/class/cdc-acm.c#L1708">has a quirks
table</a>,
in which devices that print a banner select the <code>DISABLE_ECHO</code> quirk, which
results in the CDC ACM driver turning off the echoing termios flag early:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">static</span> <span style="color:#007020;font-weight:bold">const</span> <span style="color:#007020;font-weight:bold">struct</span> usb_device_id acm_ids[] <span style="color:#666">=</span> {
</span></span><span style="display:flex;"><span>	<span style="color:#60a0b0;font-style:italic">/* quirky and broken devices */</span>
</span></span><span style="display:flex;"><span>	{ USB_DEVICE(<span style="color:#40a070">0x0424</span>, <span style="color:#40a070">0x274e</span>), <span style="color:#60a0b0;font-style:italic">/* Microchip Technology, Inc. */</span>
</span></span><span style="display:flex;"><span>	  .driver_info <span style="color:#666">=</span> DISABLE_ECHO, }, <span style="color:#60a0b0;font-style:italic">/* DISABLE ECHO in termios flag */</span>
</span></span><span style="display:flex;"><span><span style="color:#60a0b0;font-style:italic">// …
</span></span></span></code></pre></div><p>So, a quick solution to turn off echoing early is to change your USB vendor and
product id (VID/PID) to an ID for which the Linux kernel applies the
<code>DISABLE_ECHO</code> quirk, e.g.:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#007020">#define USB_DEVICE_VID 0x0424
</span></span></span><span style="display:flex;"><span><span style="color:#007020">#define USB_DEVICE_PID 0x274e
</span></span></span></code></pre></div><h2 id="flushing-in-screen">Flushing in Screen</h2>
<p>With tty echo disabled, I don’t see garbled output anymore, but still wouldn’t
always see the ChibiOS shell prompt!</p>
<p>This issue turned out to be specific to the terminal emulator program I’m
using. For many years, I have been using
<a href="https://en.wikipedia.org/wiki/GNU_Screen">Screen</a> for serial devices of any
sort.</p>
<p>I was surprised to learn during this investigation that Screen <a href="https://git.savannah.gnu.org/cgit/screen.git/tree/src/window.c?id=d7bd327fdf799c82f9a359365d461edb755056ea#n971">flushes any
pending
output</a>
when opening the device. This typically isn’t a problem because adapter-backed
serial devices are opened once and then stay open. USB virtual serial devices
however are only opened when used, and disappear when loading new program code
onto your micro controller.</p>
<p>I verified this is the problem by using <a href="https://manpages.debian.org/cat.1"><code>cat(1)</code></a>
 instead, with which I can indeed see the prompt:</p>
<pre tabindex="0"><code>% cat /dev/ttyACM0

ChibiOS/RT Shell
                
                ch&gt; 
</code></pre><p>After commenting out the flush call in Screen’s sources, I could see the prompt
in Screen as well.</p>
<aside class="admonition note">
  <div class="note-container">
    <div class="note-icon" style="width: 20px; height: 20px">
      <svg id="exclamation-icon" width="100%" height="100%" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;">
    <path d="M0,0L24,0L24,24L0,24L0,0Z" style="fill:none;"/>
    <g transform="matrix(1.2,0,0,1.2,-2.4,-2.4)">
        <path d="M12,2C6.48,2 2,6.48 2,12C2,17.52 6.48,22 12,22C17.52,22 22,17.52 22,12C22,6.48 17.52,2 12,2ZM13,17L11,17L11,15L13,15L13,17ZM13,13L11,13L11,7L13,7L13,13Z" style="fill-rule:nonzero;"/>
    </g>
</svg>

    </div>
    <div class="admonition-content"><strong>Tip:</strong> During the review phase of this article,
<a href="https://github.com/tio/tio/">tio</a> was pointed out to me as a terminal program
which automatically reconnects. This won’t help with the problem at hand, but
seems handy nevertheless.</div>
  </div>
</aside>

<h2 id="line-ending-conversion">Line ending conversion</h2>
<p>Now that we no longer flush the prompt away, why is the spacing still incorrect,
and where does it go wrong?</p>
<pre tabindex="0"><code>
ChibiOS/RT Shell
                
                ch&gt; 
</code></pre><p>If we use <a href="https://manpages.debian.org/strace.1"><code>strace(1)</code></a>
 to see what <a href="https://manpages.debian.org/screen.1"><code>screen(1)</code></a>
 or <a href="https://manpages.debian.org/cat.1"><code>cat(1)</code></a>
 read from
the driver, we see:</p>
<pre tabindex="0"><code>797270 read(7, &#34;\n\nChibiOS/RT Shell\n\nch&gt; &#34;, 4096) = 24
</code></pre><p>We would have expected <code>&quot;\r\nChibiOS/RT Shell\r\nch&gt; &quot;</code> instead, meaning all
Carriage Returns (<code>\r</code>) have been translated to Newlines (<code>\n</code>).</p>
<p>This is again due to the <a href="https://elixir.bootlin.com/linux/v5.11.16/source/drivers/tty/tty_io.c#L122">Linux tty driver’s default termios
settings</a>:
<code>c_iflag</code> enables option <code>ICRNL</code> by default, which translates <code>CR</code> (Carriage
Return) to <code>NL</code> (Newline).</p>
<p>Unfortunately, contrary to the <code>DISABLE_ECHO</code> quirk, there is no corresponding
quirk in the Linux ACM driver to turn off line ending conversion, so a fix would
need a Linux kernel driver change!</p>
<h2 id="device-side-workaround-wait-until-opened">Device-side workaround: wait until opened</h2>
<p>At this point, we have covered a few problems that would need to be fixed:</p>
<ol>
<li>Change USB VID/PID to get the <code>DISABLE_ECHO</code> quirk in the driver.</li>
<li>Recompile terminal emulator programs to remove flushing, if needed.</li>
<li>Modify kernel driver to add quirk to disable Carriage Return (<code>\r</code>) conversion.</li>
</ol>
<p>Time for a quick reality check: this seems too hard and too long a time for all
parts of the stack to be fixed. Is there an easier way, and why don’t others run
into this problem? If only the device didn’t print its banner so early, that
would circumvent all of the problems above, too!</p>
<p>Luckily, the host actually notifies the device when a terminal emulator program
opens the USB serial device by sending a <code>CDC_SET_CONTROL_LINE_STATE</code> request. I
verified this behavior on Linux, Windows and macOS.</p>
<p>So, let’s implement a workaround in our device code! We will delay starting the
shell until:</p>
<ol>
<li>The USB serial device was opened (not just configured).</li>
<li>An additional delay of 100ms has passed to give the terminal emulator
application a chance to configure the serial device.</li>
</ol>
<p>In our <code>main.c</code> loop, we wait until USB is active, and until we receive the
first <code>CDC_SET_CONTROL_LINE_STATE</code> request because the serial port was opened:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">while</span> (<span style="color:#007020">true</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#007020;font-weight:bold">if</span> (SDU1.config<span style="color:#666">-&gt;</span>usbp<span style="color:#666">-&gt;</span>state <span style="color:#666">==</span> USB_ACTIVE) {
</span></span><span style="display:flex;"><span>      chSemWait(<span style="color:#666">&amp;</span>scls);
</span></span><span style="display:flex;"><span>      chThdSleepMilliseconds(<span style="color:#40a070">100</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      thread_t <span style="color:#666">*</span>shelltp <span style="color:#666">=</span> chThdCreateFromHeap(<span style="color:#007020">NULL</span>, SHELL_WA_SIZE, <span style="color:#4070a0">&#34;shell&#34;</span>, NORMALPRIO <span style="color:#666">+</span> <span style="color:#40a070">1</span>, shellThread, (<span style="color:#902000">void</span> <span style="color:#666">*</span>)<span style="color:#666">&amp;</span>shell_cfg1);
</span></span><span style="display:flex;"><span>      chThdWait(shelltp);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span></code></pre></div><p>And in our <code>usbcfg.c</code>, when receiving a <code>CDC_SET_CONTROL_LINE_STATE</code> request, we
will reset the semaphore to non-blockingly wake up all waiters:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#007020;font-weight:bold">extern</span> semaphore_t scls;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#902000">bool</span> <span style="color:#06287e">requests_hook</span>(USBDriver <span style="color:#666">*</span>usbp) {
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">const</span> <span style="color:#902000">bool</span> result <span style="color:#666">=</span> sduRequestsHook(usbp);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">if</span> ((usbp<span style="color:#666">-&gt;</span>setup[<span style="color:#40a070">0</span>] <span style="color:#666">&amp;</span> USB_RTYPE_TYPE_MASK) <span style="color:#666">==</span> USB_RTYPE_TYPE_CLASS <span style="color:#666">&amp;&amp;</span>
</span></span><span style="display:flex;"><span>      usbp<span style="color:#666">-&gt;</span>setup[<span style="color:#40a070">1</span>] <span style="color:#666">==</span> CDC_SET_CONTROL_LINE_STATE) {
</span></span><span style="display:flex;"><span>    osalSysLockFromISR();
</span></span><span style="display:flex;"><span>    chSemResetI(<span style="color:#666">&amp;</span>scls, <span style="color:#40a070">0</span>);
</span></span><span style="display:flex;"><span>    osalSysUnlockFromISR();
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#007020;font-weight:bold">return</span> result;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="screenshots-mac-and-windows">Screenshots: Mac and Windows</h2>
<p>Aside from Linux, I also verified the workaround works on a Mac (with Screen):</p>















<a href="https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/chibios-acm-mac.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/chibios-acm-mac_hua212d00f133d3e078e4a79add9443e49_282377_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/chibios-acm-mac_hua212d00f133d3e078e4a79add9443e49_282377_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/chibios-acm-mac_hua212d00f133d3e078e4a79add9443e49_282377_600x0_resize_q75_box.jpg"
  alt="USB virtual serial device on macOS" title="USB virtual serial device on macOS"
  width="600"
  height="671"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



<p>…and that it works on Windows (with PuTTY):</p>















<a href="https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/chibios-acm-windows10.jpg"><img
  srcset="https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/chibios-acm-windows10_hu799653fda6c3be4562e44d8be91712f4_279174_1200x0_resize_q75_box.jpg 2x,https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/chibios-acm-windows10_hu799653fda6c3be4562e44d8be91712f4_279174_1800x0_resize_q75_box.jpg 3x"
  src="https://michael.stapelberg.ch/posts/2021-04-27-linux-usb-virtual-serial-cdc-acm/chibios-acm-windows10_hu799653fda6c3be4562e44d8be91712f4_279174_600x0_resize_q75_box.jpg"
  alt="USB virtual serial device on Windows 10" title="USB virtual serial device on Windows 10"
  width="600"
  height="338"
  style="border: 1px solid #000"
  
  loading="lazy"></a>



]]></content>
  </entry>
</feed>
